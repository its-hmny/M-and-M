{"_id":"react-chat-widget","_rev":"45-565b1d7272f8f9c462b929643b55d799","name":"react-chat-widget","description":"Chat web widget for React apps","dist-tags":{"latest":"3.0.5","beta":"3.0.5-beta1"},"versions":{"1.0.0":{"name":"react-chat-widget","version":"1.0.0","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"yarn run test && yarn run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"lodash":"^4.17.4","moment":"^2.18.1","prop-types":"^15.5.10"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"1c5b28f0b9c5770bbffd0b0489691ec3ef1a9b74","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@1.0.0","_npmVersion":"5.0.3","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-QMndH5UZXlvPWEZONjXzVp1/D/DmospYaH0pEewYlltnSlHULT86pRxrqXYyDOUerIyyspbNQDfepmRm9qpPdQ==","shasum":"7a8f77198948822e8ee8f0ca9fb14ba8005dd911","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-1.0.0.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-1.0.0.tgz_1502914012997_0.41019411524757743"},"directories":{}},"1.0.1":{"name":"react-chat-widget","version":"1.0.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"yarn run test && yarn run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"lodash":"^4.17.4","moment":"^2.18.1","prop-types":"^15.5.10"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"8adf07f3a4663a60f8e7709875d9970984543836","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@1.0.1","_npmVersion":"5.0.3","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-DtiucSo8/kMrhYU/RmqMSOekqVXneEpAdwPdkvGYrfJ8f25d83yq92yKEIvs/aYcSxEpM1Nr3QgpSDWySB2n7w==","shasum":"eb265445e17b1ecba8ac80ad0f87df1863f9c311","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-1.0.1.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-1.0.1.tgz_1503605597767_0.8375088653992862"},"directories":{}},"2.0.0":{"name":"react-chat-widget","version":"2.0.0","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","moment":"^2.18.1","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2","redux-logger":"^3.0.6"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"9de125d6a206292f85c5c91368b86301f874f88a","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.0.0","_npmVersion":"5.0.3","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-lAaNUrue0sh43g+qGwwl+tUsVuLDbQW4B1MNkWRls5hr942eDSzNldFzbc89R+W3CyV6o+RE6enMlYjbFpR7zQ==","shasum":"bc62bba04f7fa6db2d4de7e68b83cf644e315d18","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.0.0.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-2.0.0.tgz_1504814669159_0.6014427698682994"},"directories":{}},"2.0.1":{"name":"react-chat-widget","version":"2.0.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","moment":"^2.18.1","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"956e8d96d0c1e1c8f257b4275410ed63fb090a42","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.0.1","_npmVersion":"5.4.1","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-kDTVWvJyjfKk8Ydl5O0oN22sNfGLlFAJmxrw5nZ0SOdUTphXMTFRuUlpezfkZMK/y7i3Ij8MYKCP/+l7oo22UQ==","shasum":"f799243e46df047270cec0f03ba6da6362bc12ae","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.0.1.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-2.0.1.tgz_1505143627307_0.7979879807680845"},"directories":{}},"2.1.0":{"name":"react-chat-widget","version":"2.1.0","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.6","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"abdcf9e828656fd13e308160c9a1d208fa0f2a70","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.0","_npmVersion":"5.4.2","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-dJGIoSqkxU3cemdyAI4dFKdmFNIsquj2WIWuDKxCQY8ErwFX/AedgpIBM3Ug3ynAqB/mQa+OGUoSD44SRGb6nA==","shasum":"00448e0508d77f51d40da6932f5a9b6e01ec4031","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.0.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-2.1.0.tgz_1506026469773_0.9502491657622159"},"directories":{}},"2.1.1":{"name":"react-chat-widget","version":"2.1.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.6","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"5c05bd8a25e77e66951f66eb8a16512bfade50f2","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.1","_npmVersion":"5.4.2","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-1P+P0YytD+z0+P98ivXMHJreFMnFSw/hLiYxU87e79BitwTtpSPULz5UGrDVIkUPP4c2EQf9wnPo8+ZCBb1WOg==","shasum":"8632f07a0f9a2d813f02a4e635a5b00ceb518b61","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.1.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-2.1.1.tgz_1506348720696_0.5654640989378095"},"directories":{}},"2.1.2":{"name":"react-chat-widget","version":"2.1.2","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack","test":"jest --coverage","prepublish":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.6","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","css-loader":"^0.28.4","enzyme":"^2.9.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^3.0.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^20.0.4","node-sass":"^4.5.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^15.6.1","react-dom":"^15.6.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^3.4.1"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"4c1cf2db171a94504e6deacc13f0567f825e9fbf","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.2","_npmVersion":"5.5.1","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-h60EayFVL2XQp8k5WwhytsHVQLhJc9xg32qxsRYy6E+G0YyPGAs4eiFpnbtMP1YRnsgeVAA60/T3zP5n+Oebiw==","shasum":"8a5df26f8684a32f1593f7f46e1145a8929d6297","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.2.tgz"},"maintainers":[{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget-2.1.2.tgz_1510850631811_0.6744172242470086"},"directories":{}},"2.1.3":{"name":"react-chat-widget","version":"2.1.3","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack --mode=production","build-dev":"webpack","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.19","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^4.0.0-beta.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^22.4.3","node-sass":"^4.5.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"ddc958c93ecce7c8888ed09c994041ba1582fd19","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.3","_npmVersion":"5.8.0","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-ePbbaUSYjUvrT+RRFUFwaJRZ1oHWTFSibwhXoTtEknVMWoEjQPtQFk8a/Nqa8Yk1dvKE5F0kOwh0VW+4Mu1SEA==","shasum":"970133fa1bf92573ec7fa0c211cce58238d5f6c8","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.3.tgz","fileCount":6,"unpackedSize":168235},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.3_1523650785672_0.39106902024782886"},"_hasShrinkwrap":false},"2.1.4-beta":{"name":"react-chat-widget","version":"2.1.4-beta","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack --mode=production","build-dev":"webpack","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.19","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^4.0.0-beta.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^22.4.3","node-sass":"^4.5.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13"},"peerDependencies":{"react":"^15.6.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# react-chat-widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them!\nFor expample:\n\n```css\n.conversation-container > .header {\n  background-color: red;\n}\n\n.message > .response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIn order to add new messages, you are provided with the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"b8c9fd62b6e48173139f0d3b983b707420cd4895","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.4-beta","_npmVersion":"5.8.0","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-nEJVG3u+sx761ObEl+RZm5NyRNvUJaOLxNgghceYxXr4oy1dpH1A7WJHRvjF0FR/9U8FJclU4l/+b5viWf/ZXg==","shasum":"526a73d2bad3d30ad5104b81c4e7a80b3197fa7d","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.4-beta.tgz","fileCount":6,"unpackedSize":169093,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7GfmCRA9TVsSAnZWagAA0G0P/3VlztNZrH7Mfj5OM4m1\nJy/r4V9hmMF1z03xnQhWSHna6RWxyBSyFRnSfW5Gmt2CUbg8D5588AXnJFrp\nr8OSGmQ0qcdAwE/auM5RevQWJaWeXk5BJmVCrNq5i34wKZymv45iCG1e7uQN\nL3julSKU4npbTSQPtgHc7zotENKDL/z4TL9D1R2iDPDTX3HmrDF8BSAhkv39\n9dSSBWHHW59IZqBVpg98t0NJJTNRC6oxcXjBbnRe2acKLQQJVGLSXYlMxQw+\nlYpaRZfD9tyNUjBpQi+Kb2kUnrbVz284kSkrCMkwz3zw7MtgKliJBh2UA+tY\nymfWJ3P3GwvK2ZejAEZcJMPU0ccUORVpgWAiaG343bsrWaDIvvIFIDrcEMol\nn2rgdm2LDYH20n8D94EISBRcCppZhNTswv82bGJseMS4CoOTvuSBxo0Us9sG\noiVBnaUzdYlE9FAqHvInYoTyujDX3vTzH7iFa/QWgjlPhxPjkO+tBTCWEsSU\nUog16PIO5hbCqEATGoTxN7xM0awWsM5lghltZYQvGdT0whM9NUENbiA2pg3r\nOC5MXJ07IGZWS3nvrL/rhqmBiNtDxjQKfVj7PX2ldp3/F93ABVTDcNuQIAZm\naw35HA7q+gWT/AKsfJsrmbVgjXI986MXSJRQvCzcuBo40FdExl1WnYnoxAEs\n3Nji\r\n=Zv4m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"franciscoj.iglesias@hotmail.com","name":"frankiglesias"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.4-beta_1525442533657_0.5042583151839142"},"_hasShrinkwrap":false},"2.1.4-beta01":{"name":"react-chat-widget","version":"2.1.4-beta01","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack --mode=production","build-dev":"webpack","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.19","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^4.0.0-beta.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^22.4.3","node-sass":"^4.5.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13"},"peerDependencies":{"react":"^16.3.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# react-chat-widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them!\nFor expample:\n\n```css\n.conversation-container > .header {\n  background-color: red;\n}\n\n.message > .response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIn order to add new messages, you are provided with the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"428ebd1deedafc2dd386ce05047a2ad0b61687ca","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.4-beta01","_npmVersion":"5.8.0","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-zsYojcqxGSFzpxEcqQcd83UtI7DCY4sLmEKd8iudz52CUH+8UgnMA4GerU8qvI8VZyky30z/4EOzZp/dLFxiTA==","shasum":"0eb15937b69702e8b4cbf8f227c33fa75d7c9521","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.4-beta01.tgz","fileCount":6,"unpackedSize":168770,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7LNdCRA9TVsSAnZWagAAr5kQAIj+MaP8iv80zV5iohSY\nNvsqj3Y/alja6AtpiOgjbeQDHcFARVo3VHXiK+vW89ls26J4eZRIJNix9jV+\nKFoNd0Wq8I6Jx/FkrBEcWw5AgUzhV7WRFhzK5aEhoYVq8NgdFKEsX0ZbklWY\nMXAzRQdJiyCJH5acO7R+oUZ92BdUr1GtXotuw0Xt3OKoxWNnrqmltGD80xIm\nsovE5tX6ATFIcKbgBcfFXB1y//9LprI3SDdssgpCk45l6WHHQfkf+HtsWMF1\nTvi1bTr9HNWVvogPLH1OZ1rhRhRiWgR9wJHWFVSwNDnv2gJWevmTRehZ9RmB\nERQdl5czg59SPSU9k4z6kMZoXQJV81097uIJXxXp1LmmrxiFdSK9y2Vq3MAB\nQDRJMtGeob0vLFw/SiXzHo6lzI7KmikvzKEf9A4hOU+o0HhVQNP1S755c5IJ\n+7CRJaRw556sxTFWuXQsKNnh0TIWMv79GK/aaX4OCCdyTBgnd+3xeifb13fG\ntxWvph73VlLJilK8xPyrTPskVXsB+sSdQp/4ZVA0i0cRl/Py5lNYqo2CCXa9\n6u4chIWUvW61f8/Y8yz8F8SA92/IKGwURX7b1aJrDsoWJ0Ll7ab8FBqsTT6v\nITIHaMLIyjhmmb1TOVKxNDb/LKjbRzndJML+zKGfYXlTNPYz8FoktCnxEd6r\nVLRZ\r\n=z6pN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"franciscoj.iglesias@hotmail.com","name":"frankiglesias"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.4-beta01_1525461853443_0.16486842134270008"},"_hasShrinkwrap":false},"2.1.4-beta02":{"name":"react-chat-widget","version":"2.1.4-beta02","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"build":"webpack --mode=production","build-dev":"webpack","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","marked":"^0.3.19","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-es2015":"^6.24.1","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-airbnb":"^14.1.0","eslint-config-prettier":"^1.6.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.0.1","eslint-plugin-react":"^6.10.3","extract-text-webpack-plugin":"^4.0.0-beta.0","file-loader":"^0.11.2","husky":"^0.13.3","jest":"^22.4.3","node-sass":"^4.5.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13"},"peerDependencies":{"react":"^16.3.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# react-chat-widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incomig! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them!\nFor expample:\n\n```css\n.conversation-container > .header {\n  background-color: red;\n}\n\n.message > .response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIn order to add new messages, you are provided with the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"3f86e60836bad713a1f15a53f1c5311020303276","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.4-beta02","_npmVersion":"5.8.0","_nodeVersion":"6.9.2","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-rTxAsPbTD9/mHgJuWix1PPiRPylN8RrD/fPTtLlXztj8GzyC6/DoAm7LbNrZukhXbc1R2IYtqxB+uGgq3La8fg==","shasum":"ad2165d101091b73a48719c446ec274eedd247e5","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.4-beta02.tgz","fileCount":6,"unpackedSize":168903,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/z/YCRA9TVsSAnZWagAA9t4P/29IfpiC0dvc2zKbSIFd\nCQL85I/xwUEsIFJqFwJyHhydVwzW6GwAveHShucxa8VJO/CshkKmJaQgCpg/\npxcssc1IEpgWRPossKUcut5380ki6cvz5gRfCBQfn+QCV+Dso/GvEwhf3HmJ\n+3CXvQXMff14BALO0AQdf7h9DAIXl4Yvl5KBjpH2dSdS13pMxeLWcJL6Z3Wq\n5esm7zoK8N/AX159kwqCNM7ybSaWscLCA2OyKvQDMMQ+4ZUAy2dHFYGrG1lT\nGjNblDiZ15Y+NQpZabdgw/wEElIpga+0eUiEXrvbg0wMjdU6AonGyII//S61\nPLi8BYZl7CPms4gJig2pQbVqkYy3Tjy9fx4BgbKwFaNljESSH/XYP4GpFPKi\nMZ/TZhUJyFZ3r/f1tzo8htXR0RhHDAOV2RuEoGl5QRHt3i76TcwVj7jHUoK6\nxviq0dGWSIJNmNiKQUkyoyCX8BciMSVP4ZMdHojEgVMGnsRnSER4nMQdVOWA\nkwFEAenDZYkJNNlLL5TOA/5ghx0g3ge/YMXO4QQDlh2Mr4dIdlr2Ip+KYyG7\nh6249+UEkU46RIDZPjIShFJffLAsFt9DVboZ7YlikIwyV479XTjgA8cqZJXq\nWvUVZEavJnxH/O6vaDOKlCcj5iprsKJAEEFeXiYLjjSXqe1wPXyrMYHeHoUW\nj0Jz\r\n=I4id\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"franciscoj.iglesias@hotmail.com","name":"frankiglesias"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.4-beta02_1526677463324_0.2627861690727755"},"_hasShrinkwrap":false},"2.1.4":{"name":"react-chat-widget","version":"2.1.4","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-wolox":"^1.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^2.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^0.13.3","jest":"^22.4.3","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.5.3","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13","webpack-dev-server":"^3.1.4"},"peerDependencies":{"react":"^16.3.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"bfb671b4366a9a83848bcfa3bf961692152bb590","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.4","_npmVersion":"6.2.0","_nodeVersion":"8.11.3","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-lUVtoiUGIi5ofj2aPd9KSOcls/VVDL/qTXpo4b1AC8Oi1nEff4pZ3MOdF2THTYcYP6NfxqGFm9kbg+bfo6NZ9A==","shasum":"13094a69086d4a7de887ec22b9a57fdf51cd10a4","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.4.tgz","fileCount":12,"unpackedSize":239957,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbV4mfCRA9TVsSAnZWagAAdsEP/jhIWqKjvRMMXSyzonN9\nKFVvcpuISMECXuygCzxqMd+9uk0Eqhz69eshmqyJcmDfh6hO/iSRNq107SWQ\nTDRDqLouw2BqtGfsJJ+9tGMbH6Wj366cTr3AgLGfwZd/aKk9ZWtJVyL1jz5c\npHGtVlEwB5xf+svVhm25C1ZXeU6ndfwGNhZiOJ1H9gofhuBHhQb4Gu9iR0UP\nohrBHLPFJvZnodDMfjC2k4tTHEbo2FIlmfkJGGAAx9oMaZ7OAPlw0HRJu/eL\na/S5ZdpV7j4WrquhWC2T0kqNV2+sJ/vYWA6v9kptwqbCBAPk3MhEa+ujieCq\nSM0PvmkzHeRe6z0VGz0CQNJXAqQTl9/qFS2RqkVhWQ/MuWoJMEc/RCR4T13a\no/8ZyIubES89NGl/iQgWa3SUZuYLMM9Yo3WlX022V35KhsTYClSWldj8d0ZH\n8YjyjEUFcX7PZXR0ltCT/SN5RqVYOcwjBNIzAQlYFuA1KYPXpOEX/Bmnka5v\nGrwPuR3QtwFRs/3s4UX7zRDE+uoJk18wZ2JujpC4yvXnJO9JzcV73VevRKCJ\nBuCtbyZbn8tSxb3qub8WfZ1VfY2C3tRVzpZQxf5saCwNRw48GjqbiiqIEpSE\n4qVZxPBb5y6yHeV6z9FtXaxmD/IfrdQ0ARcvQNyOr4H8xDJjUdgfxGzCEQTD\nndl5\r\n=pwIq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"franciscoj.iglesias@hotmail.com","name":"frankiglesias"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.4_1532463519045_0.06514676405020814"},"_hasShrinkwrap":false},"2.1.4-1":{"name":"react-chat-widget","version":"2.1.4-1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-wolox":"^1.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^2.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^0.13.3","jest":"^22.4.3","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.5.3","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13","webpack-dev-server":"^3.1.4"},"peerDependencies":{"react":"^16.3.1"},"jest":{"verbose":true,"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"112b8057f7126c394055b009737c39d81fc74d32","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.4-1","_npmVersion":"6.2.0","_nodeVersion":"8.11.3","_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"dist":{"integrity":"sha512-Rmj/atJkj2JdX1ANgNsWKUO9l+s+gBog5g/wWZMO9R72rySQHUmjkMPfiAdzPyZolvn4G9buKjqVm32A8z1ZXA==","shasum":"7097a39b45f0232bc2e25fc0ba5ae5939c93e103","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.4-1.tgz","fileCount":12,"unpackedSize":239953,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbX3uiCRA9TVsSAnZWagAAszAP/RlFyq+lGH4NSeRDXnPl\n9XN2jUlTn8vaQBeQSST+VHHssvJmvIDuJJZOyzdbSFXYn99E7YDY/79r8cH6\nBvvdbMOZ24m00t2O//yXbTIuebH30pkMO58RFteGAXJEkCjKDozoLB68+u7t\nIhbY8YYOFUp0j30obvkmSBMvClO91kDALzHKI9lh2qrPwbiiHOQUDckkRBtl\nzDszRgSoIjpxKilIoy8xfbscdQZmA3RPsTeMH894l8yB91F5RPyyDWxZ5PB2\nuZjH1EjadngTiV+BUywbnIwN95r+jvyc/4vhhL81Qv/hJQPETALze91pw2n9\nod620X6q+YyYdO6VfYE20g3mCVbP/SK+iaSx1T63HsNy1xV4YxPTI17ytXP8\nUnMtiL6psSI2tVknl5idWKIRffUYv6RmT16sSrjiVSsMqKcsnTtEjBpg4mR7\nFGkdLvY6hmWDW1h2yw45GI57vWKZR0P9rcj7pCdOE7oIEEuZS3xRkgIW+g57\nAAqD0iovYU8TLd2xSymT2AnFm0f7RS0b/q094X0X7jor0NUt7Tf85uqgEv3Z\ncaINB+2xFcC95T2RAyQoth+gdvq8yvehY8qMtiWg4ByzsxDy6xmUMVuWFM2L\noBAhRJl7qaC7XdJDEl/zPgT/BndaskGr5T54tqff+l+pPdl/PSN0fYLx3jNI\ngQJ8\r\n=7uvW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"franciscoj.iglesias@hotmail.com","name":"frankiglesias"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.4-1_1532984226198_0.7167876785179308"},"_hasShrinkwrap":false},"2.1.5":{"name":"react-chat-widget","version":"2.1.5","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage","prepublishOnly":"npm run test && npm run build"},"keywords":["react","chat","widget","javascript"],"dependencies":{"immutable":"^3.8.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","prop-types":"^15.5.10","react-immutable-proptypes":"^2.1.0","react-redux":"^5.0.6","redux":"^3.7.2"},"devDependencies":{"autoprefixer":"^8.2.0","babel-cli":"^6.24.1","babel-eslint":"^7.2.2","babel-jest":"^19.0.0","babel-loader":"^7.1.1","babel-plugin-module-resolver":"^2.7.1","babel-plugin-transform-class-properties":"^6.24.1","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^3.19.0","eslint-config-wolox":"^1.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^2.0.0","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^0.13.3","jest":"^22.4.3","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.5.3","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.3.1","react-dom":"^16.3.1","react-test-renderer":"^15.6.1","sass-loader":"^6.0.6","style-loader":"^0.18.2","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.4.1","webpack-cli":"^2.0.13","webpack-dev-server":"^3.1.4"},"peerDependencies":{"react":"^16.3.1"},"jest":{"verbose":true,"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"7cc5746bfdcc31de9796c47be12c830e5cd2dba5","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@2.1.5","_nodeVersion":"8.11.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-yKQCuMrVXFd1SNnAL8Dq+uFBFukakYFBlwvtSxy+bkkrFJpnm60yD6wWIZ2u+QlyN6cxqjC1KnVWZBwo8jiSrQ==","shasum":"b1060daaa30a6a7f8a9b1ece081027fd910dbad4","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-2.1.5.tgz","fileCount":12,"unpackedSize":249606,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdf8JXCRA9TVsSAnZWagAAK/AP/iuMnAyNsCi75RoILFpc\n9XWjTklNYuqQFHMY1J8IYaIx3yXT5/17CSAJEdaR3fwjEcSl4rpbOoiDA++v\nxgKA9oPhZf2QZMwK+zWGGwQ/ob/s2+Tgx7DyPkgaTtOxULaTu2SGTCg9x2Mj\nHyURwbiHHXPgg/5r+ecMG04PtSAF6HDPOzMOBwPSpvK2W1pw/kL0dQlXzYa8\nvkc7Mrgtk8sjBob4KsHqirftuT6Idas6Tav5gyhWNb8BtDV7NYQHIRNaFvKA\nm31G9PeYE6AOLrJkC/+DW+qotUCfzpOBOo4/5gNLSU5X5aPdRKc9xiJKUKwa\nsZFanhcE/LJ2ZXZh2E9sQsdO4s+zJccyw5Yd3YSnfszgfY+/I1kfj1h7HSkJ\nd3ouXIp4+gbliicdUHg9wsECSj7aE4v1AFvSHBkJN4qNfQ7DIjAmFtCMKhGb\nKwhz56/UKkHxAZnv5Wt3T+p9zAn1V78fjMmB8M2p5/Rpqec4cKZkkIey0FLM\nW8RzaGk3cWBJ3Ez1y+unohEU6qZdP29wva+3ntegMG9ywjlDopLWJBxip5P6\nXYOGiXPxesLaCQmTkeQMCcNHyUIQSe//qRq2gmjtOKb/sREv5Va17nMtmU+4\nMT6+Te28VeDDM66r6oWrz8DQrA2koXHzWQG+RsZP8YODEcnWfSgxFKHsj7PQ\nJ6I4\r\n=1K3v\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_2.1.5_1568653911232_0.8205892264563994"},"_hasShrinkwrap":false},"3.0.0-beta":{"name":"react-chat-widget","version":"3.0.0-beta","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|PropTypes.string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n|**launcher**|PropTypes.func|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|PropTypes.func|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIf you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop like:\n\n```js\n  launcher={handleToggle => this.getCustomLauncher(handleToggle)}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\nFor example, if you want to use a simple button to toggle the widget:\n\n```js\n  launcher={handleToggle => (\n    <button onClick={handleToggle}>Toggle</button>\n  )}\n```\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"1e14526759e599e1dfb687d092695717def17aba","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-MfQEPSe17Ad88KP56MLOE/TfaZd9HfcEJLQBqi9TcdEUqEbeJ7mEMIkjnutL/KNJJBHhQki/EGzmLOe38FOLlg==","shasum":"1c1fcb731159f6aabffb3d2463e5ebc53aaf63ab","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.tgz","fileCount":15,"unpackedSize":2447417,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJei41aCRA9TVsSAnZWagAAngoQAKS3xWObeVh71OEmz/8M\n3ZfSJe0enurtwcgH+LlVZD+82C6/aAc1T+KqjNS/Z+/hqb6uZz6hqByhsC9r\nnmuJySVSt5oXJ+GhmBSLFK5RY0RsmbLALiG7yyA7eePvJcvXcTsuiThqvhSg\ntIMvBI75RfKv1FHE80btbEbg3N6tZUE3HOVaF/URykh1r8ifuau3HNg1da1o\nq6Pm/5zhj9RKWpsV2yU7B/o0F2xfvbU7k5Yl2v4GnP1IUwCw5hVrQyxVqBRg\nMIGjVtoRX3OaXTSuI2By6Uce7zp+m/8N5aze4dwrScA01UPkqoq4x7LTx+up\nDYLXhuh5pk6ETL49OaBTYe7rvzcTcXXMysTJiii2pyXginW5ZQxeMaUg33pk\n7PJHVlOVjgQQ7BnQmXxhBnmo3qtKvC2aNnsx1zQZdBvzqbz4ac5Lv3SJy1Cc\nFXWQInR4tgSSqztdmiYWjGNN/vUK6+s3Z039n9M4Hl6D3u69DIJnKhWO6jIc\nutcPvUy1oo1wWeseanVI5MmAGa3BIW2oPIALf6/dI/RmSGVoqvKOgP1MqqXe\nFQrjCAJz5zakTJfycNgv5t3gOE7My4zNrwkG4OMwZDxFRwXUPwPfaGGoxRnL\nwrGLzi6nkTmBhI3jy2KTAnqE2siD9vJyFwpXMwmYDtkWwBgZHMX/WrqL0bYb\ncjRx\r\n=+sEk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta_1586203993393_0.22107416389457613"},"_hasShrinkwrap":false},"3.0.0-beta.1":{"name":"react-chat-widget","version":"3.0.0-beta.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|PropTypes.string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n|**launcher**|PropTypes.func|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|PropTypes.func|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIf you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop like:\n\n```js\n  launcher={handleToggle => this.getCustomLauncher(handleToggle)}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\nFor example, if you want to use a simple button to toggle the widget:\n\n```js\n  launcher={handleToggle => (\n    <button onClick={handleToggle}>Toggle</button>\n  )}\n```\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"1e14526759e599e1dfb687d092695717def17aba","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.1","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-4x42d6JKv0em0RGvdp614rx9t17fhYYL1E8CCfE0I2m6I+QirH6r3NVQ+bwGS/Ai3plX/H92I62h3A1AaV7PdQ==","shasum":"1626fee5b9d95ceee9dc21e568474aea22fafa37","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.1.tgz","fileCount":15,"unpackedSize":2447419,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJei5OJCRA9TVsSAnZWagAAnoUQAJw8e0Tczbn5Dd/WnYaB\nygNgaKKmIIekncva9LbeLKMrTHKWDUdJFVKF3lkPE3Ul1tNmHOa7HXeJFxF3\nQ7hrDfP9b3/f5F3hcgw9kEI8ArTC7n38hD5Q6uP9ZueJbL2HYJmDFMaHs1Nc\nMiUO6AzGpAZzI7F4Ibga5r5Xs11zdXtGU/qQAHZQxLVgFtHq0jsDOmS1nat+\nhSn2zRYWAd6a5aMMw8Zi44NLp6uhAMHdSXLXkc+WH6wiwFDZoVUqlarHANZG\nXjeuN4wawdeWjIJNJE0oPA+Ogchj6sw17H6ZyRTVIOq55c14YPMlf54L6koA\nEYfVCipBGAScIc8907mkCpSMGq7VWiDxtTn/9oUXXUCAnwhKojAOvTxlxSEj\n8bSbNVIoDX75hTeJepUJAGBZQitGBdVeNCy+sYuXhkexFLXdwOtKL5ctKwru\nf380LCyIzbgVH4zFKj/tzGEv33rJ/Mr3CN5KGa6T+277Xbw7sCD9c4Uqk2BA\ntbgz1MHFzJC+7bdO4gfDbKTjRNg76dytihjreegAg91ABqwDBKrgWab5gZdj\nOrBv2P5aenmEgxWy/i3Z8j7p84ovc8o+TKGRC9vAxqvSORXpcNeZTO9jf828\n++v3QyyHIBAYRdOqnBM7R7bUbPBaHrRQJCX5oyat+t5vdByEyb7IwrHrrUUB\nqFZx\r\n=WZar\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.1_1586205576528_0.4449641587958082"},"_hasShrinkwrap":false},"3.0.0-beta.2":{"name":"react-chat-widget","version":"3.0.0-beta.2","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"1e14526759e599e1dfb687d092695717def17aba","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.2","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-8hGA6vfK5iMu2R/ohsVyt5eGZ+cE0y90j6vQAl1RNHlkgtUdX8+lIgCAigGtP2YjHfv+uxMijrRTfVtS74xUxA==","shasum":"a958799fc7d7e5bf35c05015d900bafe730c0041","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.2.tgz","fileCount":10,"unpackedSize":1454792,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejJ5QCRA9TVsSAnZWagAAoR4QAIdkXCGkShUuh4tgBEwk\nrX0K8O37vGBvqbhCDCxp/BT1apPQ1KBpU/ZZf0hb2ZqP9MVMm9rRIQUEkun3\nWQCLZXntMMJUjrER8Kuak8dlWuF5O5Sa0bdmEdk1L5ZGoId9JlBVBpk8hnHE\ndNpLH0nOaq+spv+PLBOgCDPB7rTjfBNU80qt5/BcLkvshfP2Q5QnLdTabAgM\nAB+PN1aELZI1Eo2qlwg9N23LblAOEgQtsE2crsGr/lxgS4uQuTY+/gZu5Syt\n1X64ZMo/WlvT9XYMwl4qUVyipneS45RDej28gnGq/kAzeiSpO0tKFHCvWrmz\nkWT9PiPTqq15EKs2FJicEyBeWoywRU4pPSW1AbHZY7nG3wHTDljuyFDhtl/K\nJm6vnXZ5f0SlrInU+8tWTn0agkBuIjMdohSQpW4l6OOUU0PupRhkz2hOQ8JK\nxhiObotfE9iDTR6R+JHelKQzaxr2Y6ofD/6N01DJWOJRxW4mG+MD0i6lxLzV\nIQiNDHeNHoKp6xS2Qi5FRZ3oV8lO5V63HKbg21kHIMdoiW+arIJJnI0gqVhL\nS1lxqJTq3LpbdUY95ElvSHrWghI7pjFoBPpjdL7YwhNFZOO1//AsYhK2fzM2\nJxEsoD5NSnaQYqBxVdRfzoH8o3XfC+7nO1B12UE7O5iy/DC83kcqQ5OyQ3r/\ninD7\r\n=8tUP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.2_1586273871999_0.4053509205060979"},"_hasShrinkwrap":false},"3.0.0-beta.3":{"name":"react-chat-widget","version":"3.0.0-beta.3","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|PropTypes.string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n|**launcher**|PropTypes.func|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|PropTypes.func|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIf you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop like:\n\n```js\n  launcher={handleToggle => this.getCustomLauncher(handleToggle)}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\nFor example, if you want to use a simple button to toggle the widget:\n\n```js\n  launcher={handleToggle => (\n    <button onClick={handleToggle}>Toggle</button>\n  )}\n```\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"1e14526759e599e1dfb687d092695717def17aba","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.3","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-w6Q7YJvuNX7Jr7xvKfglhBQCkpP4Z4B0psYkHfYBTVa7SjDHkYZB/tQXRJ9NWZgDFAs/hhC9DGdcIO7m677+HA==","shasum":"420df07283d154131339cd9345796e5f474b09bd","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.3.tgz","fileCount":10,"unpackedSize":1454973,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejMWdCRA9TVsSAnZWagAAWBgP/3S5VJKJz4xcxW6zLz04\nRth3FSi969S0kgrV3u/ikH+zVr73wsSpEEfQJW1XggWf4VvTbGc4CzImlzP2\ntOHIMZEr4K6hf/KAwiAZfM1ymk1C6lD8y8Z3qXY1SZMN6jybbHKTy9MROHth\nswrhgEw9B6X0x/kC7ZXbvNEXWNS6UjLZBOIZP3RA4Cb0iLOM2TaQxamdpQby\ntMGRkL1eQjk0IAaBfpfYfoXsz7TwZ6MKjljNAt/AK+hx2oN8AL7fgvaIwCxc\nOZQ0uVci9WfbcK0ugp8Lbf0Cj4+qRHjrj9z9muzf5c4WPcohLi0MDZSnj9zI\nY3xBLLZz6PVHl7W+MccHCp/eqGrS5vSjVhayB7vsylAAIbmxJpm5kvqMKF7B\nFbWg2Id3qtnOBy31lxeMStuQXLzWDAzan1EgnzyVGrY3fwtkTSnxSSskQaG1\ncb0R4SlGycm4K+CONCWEN5QMDv4VZ3EQc7PsnsqJ48DqTDuaFAIBsuUVToFM\nWic9Iv2DI0kr2kTwvwsyqJcO2reNh2FKdr04S9lkrqfAAgib5/kBuCnzlXx0\nYPz0cUB/KVNVxKW37P1J5iR0bqdiiD4lDcVqgF6m7I74G1ig6vajt6DxHera\n0pBmKhFDQ4FfV9q0kgHIDXEcpCh9ipUZ3HwUzjtF+s8NbsN6xA+7mMxEONtO\n0xt3\r\n=4044\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.3_1586283933275_0.5680135072946528"},"_hasShrinkwrap":false},"3.0.0-beta.4":{"name":"react-chat-widget","version":"3.0.0-beta.4","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React, { Component } from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React, { Component } from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nclass App extends Component {\n  componentDidMount() {\n    addResponseMessage(\"Welcome to this awesome chat!\");\n  }\n\n  handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={this.handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|   |type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|PropTypes.func|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|PropTypes.string|NO|'Welcome'|Title of the widget|\n|**subtitle**|PropTypes.string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|PropTypes.string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|PropTypes.string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|PropTypes.string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|PropTypes.bool|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|PropTypes.bool|NO|false|Allow the use of full screen in full desktop mode|\n|**badge**|PropTypes.number|NO|0|Display a notification badge on the launcher if the value is greater than 0|\n|**autofocus**|PropTypes.bool|NO|true|Autofocus or not the user input|\n|**launcher**|PropTypes.func|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|PropTypes.func|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nIf you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. For now, you need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop like:\n\n```js\n  launcher={handleToggle => this.getCustomLauncher(handleToggle)}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\nFor example, if you want to use a simple button to toggle the widget:\n\n```js\n  launcher={handleToggle => (\n    <button onClick={handleToggle}>Toggle</button>\n  )}\n```\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"1e14526759e599e1dfb687d092695717def17aba","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.4","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-qS7sX009p720gncDE2t12HDi23fHymO2EP21UvaGu4GPcOfK5C3BgFcG9bTJ2USPoYcHKofgubxtlzL2JrnGGg==","shasum":"a478bd72b18b988d1cb5b7937a4d4912d03a1da6","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.4.tgz","fileCount":10,"unpackedSize":1454983,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJejMa3CRA9TVsSAnZWagAAB0wP/0oaC2tVwodG+fK3Ojiw\n5khiXR/TWQv3lM+uRhW66q2QwQcPaQ5nFoQTuWYdqvfzRUINlxTdWVB3ey7T\nsvmGNE4jI572IIM5Cas21i0QF7Aw2LriEr5DIdBC7XUsB1MBe+/RZvJ+TCNQ\nShM4dq2hCUDLtluddl4oH9L+hocmHzTO8klx+Wq6hQOftGHUQFKiNIePUqC2\nUbASPLh38zJFL0oERRSeNH5BFOAdD5kZHWBDwiGUbj39jj1DVTUm8wfP/qMP\nEt7s4JilIRHWQwlKiZzP26N2/HDjM+x0jcuaVegt/fZzJLosuaXbk4WDclVt\n4Qv5rWST1eG9ogwQuQPYsuc9LtwUxJFl1HobX/BiiGW3TqT+x2Jxdd7D/wfB\nB+RxzBDXGOPcD3Wnxz4V0qKGRHmKqwQLxHbHi2h27+js4AXGd0tR+KkaxQRj\nY0u8Ja07K2outMUOtieJpjbRvPvTxPypz+E5xP3jNB1q75CoHVAdo7Obhii1\nSi/Nxy5MmCUbwL52uUgM2LlQbBEbdbM71TRziWwlmsjpypwiZDl8jBin8ffL\n94uooGtj8W5rH3ieuXaEGjj/JSQFFZoWDOte+3UmbJmVWKZQQsZiTD/1BPos\nb1HPemHLOpTWZPNpzDE7Ke8mIznRhqvuyLMy85ZKTDBINEr+hu1A+/XcMNwu\nIt5l\r\n=uofd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.4_1586284215167_0.35422229088376933"},"_hasShrinkwrap":false},"3.0.0-beta.5":{"name":"react-chat-widget","version":"3.0.0-beta.5","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  }\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|prop|type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|(...args: any[]) => any|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|string|NO|'Welcome'|Title of the widget|\n|**subtitle**|string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|boolean|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|boolean|NO|false|Allow the use of full screen in full desktop mode|\n|**autofocus**|boolean|NO|true|Autofocus or not the user input|\n|**launcher**|(handleToggle) => ElementType|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|(...args: any[]) => any|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n|**showTimeStamp**|boolean|NO|true|Show time stamp on messages|\n|**chatId**|string|NO|'rcw-chat-container'|Chat container id for a11y|\n|**launcherOpenLabel**|string|NO|'Open chat'|Alt value for the laucher when closed|\n|**launcherCloseLabel**|string|NO|'Close chat'|Alt value for the laucher when open|\n|**sendButtonAlt**|string|NO|'Send'|Send button alt for a11y purposes|\n|**handleTextInputChange**|(event) => any|NO| |Prop that triggers on input change|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nAs of v3.0, messages now have an optional ID that can be added on creation.If you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text: string\n    - id: string (optional)\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text: string\n    - id: string (optional)\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. You need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for both the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n- **toggleMsgLoader**\n  - Toggles the message loader that shows as a \"typing...\" style.\n\n- **deleteMessages***\n  - params:\n    - count: messages to delete counting from last to first\n    - id: message id to delete\n  - Delete messages that either have an id you previously set with the `addResponseMessage` or delete based on position or both of them. For example `deleteMessages(2, 'myId')` will delete the message that has the id `myId` and the previous message.\n\n- **markAllAsRead**\n  - Marks all response messages as read. The user messages doesn't have the read/unread property.\n\n- **setBadgeCount**\n  - params:\n    - count: number\n  - As of v3.0, the `badge` prop is being changed to be managed from within the Widget. This method is manually set the badge number.\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop:\n\n```js\nimport React from 'react';\nimport { Wdiget } from 'react-chat-widget';\n\n...\n\nfunction MyApp() {\n  getCustomLaucher = (handleToggle) =>\n    <button onClick={handleToggle}>This is my launcher component!</button>\n\n  return (\n    <Widget\n      ...\n      launcher={handleToggle => getCustomLauncher(handleToggle)}\n    />\n  )\n}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component as seen in the example. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"ca7d977617ee37119db2985b22f2c7331c59158d","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.5","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-2N0JMlulVUTd4cdQD3dAwL6hk9iBP/imXrENJVTY8QcxeXUWT0IEAdTfMeeMSJiG1kP77r7XUyi0SQWAiruAkQ==","shasum":"f24a1a1c188722a56276d3b485239bfef44187ba","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.5.tgz","fileCount":10,"unpackedSize":203021,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJelKzdCRA9TVsSAnZWagAAb+oP/1zsSQN5Awy544dXK/Qj\n2Bl8sIepsurgDq7CKFq5+4OHWcaPN8JsjPKcOPHwEixTUIuRnabqhTb9iV7I\nDypxxQL+QjUwwK+q1CMIwfouFJGKsz8+DDzFfPqmilmXMbNfiu9kMv1kJ9r1\n97fwWOm6yN5fUrVaGkMzQNbkO/CVFhj9yeuQbGrxPv8AN9XPiKKGALj4b1Uf\navVjh9IZlUQcfZE7sClsFSNJu2gCQyolbnEgrzJlsJ9sC+pw+ERgQgEoBbbm\n2/YpfZwz7QozJ0EZ5UTxQsnF0d4ihc6wtCi2fF29HRWBh9RoVijXyJNPEMgR\nbXLCrdwCPmOQHoXn6AFDk3bUEclA0Ac6v4WWOQtwMfCCS899cE5GjSAiKrok\nnM9pkVnys+Zuve3teedZccxTZmnnMZI9q34UcALFA98Ls0BQ+6gTCHU+Drhj\nLxt5LY4bgpS7KxQsTaT0905Z5aVNVSKLUTs1McnAs5U37O3CF7Fwjtd74fuy\nwtKyKVb/Xhqn4yKHOv4yyp3K7utUdIQDD/EnwEhN4ZwltaHOL1ooFusFSxJX\nrr0MkHv3d2xf7H3jHSSyDCCcopQpfryk2cutZeUnJnpMijlir/9eouevEJ0J\nzQUCdE6PGCIjPaEdEzzLiS6oYTJsBpk8hcWcHNxkJW9dXeWSF6cHyqZeGI+L\n6cPO\r\n=NE5H\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.5_1586801885046_0.9541033833037582"},"_hasShrinkwrap":false},"3.0.0-beta.6":{"name":"react-chat-widget","version":"3.0.0-beta.6","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|prop|type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|(...args: any[]) => any|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|string|NO|'Welcome'|Title of the widget|\n|**subtitle**|string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|boolean|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|boolean|NO|false|Allow the use of full screen in full desktop mode|\n|**autofocus**|boolean|NO|true|Autofocus or not the user input|\n|**launcher**|(handleToggle) => ElementType|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|(...args: any[]) => any|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n|**showTimeStamp**|boolean|NO|true|Show time stamp on messages|\n|**chatId**|string|NO|'rcw-chat-container'|Chat container id for a11y|\n|**launcherOpenLabel**|string|NO|'Open chat'|Alt value for the laucher when closed|\n|**launcherCloseLabel**|string|NO|'Close chat'|Alt value for the laucher when open|\n|**sendButtonAlt**|string|NO|'Send'|Send button alt for a11y purposes|\n|**handleTextInputChange**|(event) => any|NO| |Prop that triggers on input change|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nAs of v3.0, messages now have an optional ID that can be added on creation.If you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text: string\n    - id: string (optional)\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text: string\n    - id: string (optional)\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. You need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for both the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n- **toggleMsgLoader**\n  - Toggles the message loader that shows as a \"typing...\" style.\n\n- **deleteMessages***\n  - params:\n    - count: messages to delete counting from last to first\n    - id: message id to delete\n  - Delete messages that either have an id you previously set with the `addResponseMessage` or delete based on position or both of them. For example `deleteMessages(2, 'myId')` will delete the message that has the id `myId` and the previous message.\n\n- **markAllAsRead**\n  - Marks all response messages as read. The user messages doesn't have the read/unread property.\n\n- **setBadgeCount**\n  - params:\n    - count: number\n  - As of v3.0, the `badge` prop is being changed to be managed from within the Widget. This method is manually set the badge number.\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop:\n\n```js\nimport React from 'react';\nimport { Wdiget } from 'react-chat-widget';\n\n...\n\nfunction MyApp() {\n  const getCustomLaucher = (handleToggle) =>\n    <button onClick={handleToggle}>This is my launcher component!</button>\n\n  return (\n    <Widget\n      ...\n      launcher={handleToggle => getCustomLauncher(handleToggle)}\n    />\n  )\n}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component as seen in the example. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"8076feb84441116a46bf0ad386cfd20bef74435d","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0-beta.6","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-epU9jrUwEuXd0QimgogyIwzRfrmuYdy6y7KAp8u+5X44/758UEt1eq1zSYLkuvbOMQaUf7Ku7r8SIsERGon6OQ==","shasum":"1563b7398deee17da06384e08d7b000074d1363f","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0-beta.6.tgz","fileCount":11,"unpackedSize":204652,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJemHL0CRA9TVsSAnZWagAAkBgP/1Ur3Qed3ckrJKpckdQe\nl9h8eOskg2hAeWtebDSPpKjJ3TCd7JIISye3MVlb98Q8i6lDdPOysJK/8eDX\nz3ylxglkW6wEbhBKjHD9B/XgSPiYzMVDSrdHtRBaDqxlLsZ8M5GrmI2rTIe9\nAQuz6FuVmBL95zAOYlgm0PURWcPnbQFknExRsTBpiftWlJCBpY3TEJ4SNwb6\nhfPO6yTDz+3rl2s88WKCQYInyBUUpE9CaUac12/SEbiwt6qHTehzWInAAiuH\n+sSvd4A5J0KU888ZVzJN5geLorTXYiCpr5RNnbPwlVi4YhI+exqE3jzmcJB8\nOwkPD2sjiNVbtbvwK1uxCi7ui8IRXylh6HjwAjvyIG7am7JKxNWnRq3Ip5es\nIDMzeOpVFsYAS38w27Vw/E1TfwIbnynoCF8+nufaoyN09+MHB6yk8Qg73qKN\nvHdF1KsRXgdL+Kk0RCjTi46VvmkQDf5jHD7COaXMPQC7W7v0Q2hhlMfNefnC\nK8QIwvkRGA1wFpEj75x4b/C+FZtuA3Dp+o/9fk3GAOfp33nFcEuvaicTaqZV\n83h+SxNJY19HeAHm1G5tgKtaaPpwNmYRTauVLUivdONFLEii5hieusiZ6gVe\n9Fq1HBpe8TbFn135188hKqfXPSxYA4bsKryBTbEY8Df8gOHpKqBL0paQMnlt\nBtEK\r\n=vPsL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0-beta.6_1587049203291_0.424100854258868"},"_hasShrinkwrap":false},"3.0.0":{"name":"react-chat-widget","version":"3.0.0","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react":"^16.13.1","react-dom":"^16.13.1","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"8076feb84441116a46bf0ad386cfd20bef74435d","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.0","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-QFOS3Kuo5sPlgMWFZ2f1PIV8/ioX6qrpYB3MYdSpJB35e4fzmbrXLaalNeg9ikG0jIQyDose7YK5P3c7afb0Qg==","shasum":"0caceb5379ac10adb817fe3c86bf49e74a2473b9","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.0.tgz","fileCount":11,"unpackedSize":204645,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJemiUwCRA9TVsSAnZWagAAM+wQAKUXpMgmdiFgm97HaJTu\nv1rpGS7uS5r5H3B6dr4xvBv5pF4C+s1hFOlJ7wgwwrHXzo3x3/WTTIBII5dx\nIxSC6EYauPCtL6gc9RAirgAeHSRe5S064tJFNEp9D7dxSYTLxFmJAYFPAGae\nBX6Oc03U1KFmzc5wZsze/OXfwfqf/YXF8D/kuA76Asvu5srWJKtlmxgcixjT\n5/TllxqyrK4HrVAww9r6zmiH6Wm3e4rhk0a1K8zRipoyL72zB81OD3CnYt5p\nig+bSENtt8V+I+gcVnfq3FfvEJlazI4j392zWKui06X8/GsWgWErLsa9ZWPq\nQJeN/kNW/qaOBAc/eEsGSAX9Fr6LYXyfK7Ec+YG9eHbJnVDkwtVZBjW1F07p\nLpfbpiu34K2CTmXrj4yTqwyCtrHVokW67XKeqvMJ6HTvdMN+KdaGosIFhbU5\ngErd4Z6nBuOyun6pajwC4Sy1WACD+2oysciEkubL/BaDKg54tKncUs2D5+Xc\nw27zvGdDfWIldoLoon/6NvmhUk9FhsMLz1Fn7NL1sNNYTkd3x9YHYpB/cae6\ninduHSGkBzFTZh6uTtKEPmTbHh64YUDVO5Od4txtMwrAZAggVeti4DPh478F\n383Nsgeerte3LrJTyF2P0a9t/nqKBPhCMJnrRs1f5i28OftEG8lHS21+ULiX\nD1v4\r\n=u10k\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.0_1587160368101_0.5923102224622603"},"_hasShrinkwrap":false},"3.0.1-beta.1":{"name":"react-chat-widget","version":"3.0.1-beta.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|prop|type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|(...args: any[]) => any|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|string|NO|'Welcome'|Title of the widget|\n|**subtitle**|string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|boolean|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|boolean|NO|false|Allow the use of full screen in full desktop mode|\n|**autofocus**|boolean|NO|true|Autofocus or not the user input|\n|**launcher**|(handleToggle) => ElementType|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|(...args: any[]) => any|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n|**showTimeStamp**|boolean|NO|true|Show time stamp on messages|\n|**chatId**|string|NO|'rcw-chat-container'|Chat container id for a11y|\n|**launcherOpenLabel**|string|NO|'Open chat'|Alt value for the laucher when closed|\n|**launcherCloseLabel**|string|NO|'Close chat'|Alt value for the laucher when open|\n|**sendButtonAlt**|string|NO|'Send'|Send button alt for a11y purposes|\n|**handleTextInputChange**|(event) => any|NO| |Prop that triggers on input change|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo verride, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nAs of v3.0, messages now have an optional ID that can be added on creation.If you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text: string\n    - id: string (optional)\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text: string\n    - id: string (optional)\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. You need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inse the messages container. With this method, you can add whatever component you need the widget to have.\n\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for both the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n- **toggleMsgLoader**\n  - Toggles the message loader that shows as a \"typing...\" style.\n\n- **deleteMessages***\n  - params:\n    - count: messages to delete counting from last to first\n    - id: message id to delete\n  - Delete messages that either have an id you previously set with the `addResponseMessage` or delete based on position or both of them. For example `deleteMessages(2, 'myId')` will delete the message that has the id `myId` and the previous message.\n\n- **markAllAsRead**\n  - Marks all response messages as read. The user messages doesn't have the read/unread property.\n\n- **setBadgeCount**\n  - params:\n    - count: number\n  - As of v3.0, the `badge` prop is being changed to be managed from within the Widget. This method is manually set the badge number.\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop:\n\n```js\nimport React from 'react';\nimport { Wdiget } from 'react-chat-widget';\n\n...\n\nfunction MyApp() {\n  const getCustomLaucher = (handleToggle) =>\n    <button onClick={handleToggle}>This is my launcher component!</button>\n\n  return (\n    <Widget\n      ...\n      launcher={handleToggle => getCustomLauncher(handleToggle)}\n    />\n  )\n}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component as seen in the example. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"81d89b9f7f84393667ed865cd7458ee62bea4b6e","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.1-beta.1","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-VQAjGxotIG6DD0y2hSLQcoif/NLitYsjmXBfnd8EV9fs55W3IrEYxniJahtJiDvuWyAN8WvweEj6kVLvykgxGg==","shasum":"460af1b75409e5a0b9fc145eea5d3d64c7053e44","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.1-beta.1.tgz","fileCount":11,"unpackedSize":204652,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeqZLyCRA9TVsSAnZWagAA2kkP/i5QHuuXLK9TemXSAP6t\ny80ku26uvt9lz5kkRJ5ED53hYitCMH6c8toSW6adG8jeAFa7quY0jPHlu4SS\nizP5AtCEwawujI/YJ5GnyJsNVi5s2mP3HEFKqnE6GBex1Bf1/xvLHQGeBzM4\nmyJa0JmUjMKiqc/FxW3WJXQF4O5VJsaZ2C7n3EtOWk7H36hXwYfZyN1esHCB\nF8H+7Wu/xr4Ws4/2rln7FsIHmXgKZuMk8n0iP720ETNzLHvzkufp8jfgujAo\n+1N4bjNoTjnmtfyEJ1QZ7Zg0f3AYpuVmzL1wlHK01d2XDyQPDdOAxNDVOUFR\nY562ygeIcXvi75kvRRMv0MGuiHDbLgGdKKnsvxP9CMr2++M6GvDgriU8tVEK\nkWNJsGHHJTSYreLlw8SV+HnqhRo9jZo6KDY6GmZgfLhJxx8SYy5hct2ByeRD\nuhmWdUDk67TKrc8sDanFMZldXxBVgjgoJ/EL678SaoQL/rHQ9xtYlqLS6cxr\nnuosKxK0V8Wf47ueCuoqrQ/9Z0/K+sQKVke14Dw/XLIXzJy1OfPD0DfBCAYO\nXg81ORhn5edfyZMWPUDtpU2XPVbmxH7Y9WA6h68IyniFwBFTj5/YQus7Kwrr\nGAghaZAGCGp5QLeAswtAksE0qMbmF7SgeSawzw2k35E2NDLVZfUh20v8bgwo\nQP6L\r\n=A9ja\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.1-beta.1_1588171505932_0.06644374486820936"},"_hasShrinkwrap":false},"3.0.1":{"name":"react-chat-widget","version":"3.0.1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"5cd94ed5964669cb5eabd068b63b98e70072cd7a","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.1","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-buKqq/75karjlCJmDp7FigYUmCEpm9PuWbyfe/jU5T7L69F3WZGOWVNmp1w2ixeQJoNcWtDMXJ5SJm5BUaWZ5g==","shasum":"7c1d6e1ae3285205bf59ddcae72fd535278ad64e","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.1.tgz","fileCount":11,"unpackedSize":204645,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesCLcCRA9TVsSAnZWagAAn/0P/A8jCqp92bEdGfouLgTH\nMHXXfplBJnJgRY5fXPPkhxZH7l3FfeeSUxP1IQJGpAHJe1Ov/c1JNL8JC+2O\nU07BY7mKiUIupJQzYbnKDHveUVqRWLFLJPVKUcHR9nfplywq6rVQywpXF9nm\neEXrE+Q4hy58HvwQ9j8z6rIriDF7nsUdGneP1AUZoJxgSCUDL4Vsu8JLSrCD\n4RypamL8bUVuHph0zFv9a935JvoOklp7w8kFoFxfZ83DP1eTzIv0stCpsbK8\nBDByVjUBFGeE7tvky7I1FgE4icx2BROsrib1tJ6rUv09/GasSErTUsJW9C1n\nqE2blG0FPihcxlvLSy0/6LB6f/fN3JgufpFBevoQql/wRrTvsq+dOhQD/3+o\nfLCBOYmBEltGjn/1+OsEcflzAmEaQ9WQUd39q5QLO5HmbNnAJ7NZWN7qG4xu\n9YPsX5Vxz+dQtG45EhgFNE+UYVGW+zUc2zlUOekAYf7TqTgV3XezjiEZAyO5\nglfCc/fiQ0GqTQLNl+hxHMU5WQ4yFNyBjgBpiuQPiK0qGvVDU8QK6AY9AuyV\nIWUUvHyU0m/agVk781VMj4V0u1fHnJo+/BIf1mSoKV9JbpCxJ91naiqR0Kdn\nh7swxpjNcWD2hIwRibh1k3O3qFoUe2rJnC1aFzz5ywgxNwud5nL0EhjUJpWh\nEYrM\r\n=y/Uy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.1_1588601563803_0.590226036403831"},"_hasShrinkwrap":false},"3.0.2":{"name":"react-chat-widget","version":"3.0.2","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"497a4e4cdfc1d8dcd8ea46174c466addbed3284e","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.2","_nodeVersion":"12.16.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-aKR0uVZ49rroNAnNtxEawhmjTiotf1MD5fBux8tCewOV1tqiI0NEUxn9VpAij7/rtI88e//3wAYuiYmD8OuD6A==","shasum":"5740073a0f026b08f2a57d5794129a0097ff231f","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.2.tgz","fileCount":11,"unpackedSize":204612,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevwKJCRA9TVsSAnZWagAAkfIP/3SD4OUvV3MYTrm2Fgjs\nbuRHK85uWuMFee89Xm1YH1agxvxop+/Eqt4VH8QA6Gtets+4xVKEal5Besld\nms8e+PmoP0ZCtcopHloPmZDsrSc6i+iGQ4bCKVwczEjV007XcmZUat0lir0b\nfWzUqkYi29g5M22YftlibusKZjhXpawZoVx4uLNV1mK5vnPGG6zAJS4vhhn6\nI7TjV6gPxx1isErhj0ay+Cn6zYXyXsTARz54nn54Q9zbRH7Y8MJJp1Wim/kr\n8rl0z3KWB6CHTyPZ2I3Kks86vI6CUclxqZeipE/hN2VH5FS6XEW/Lmo8qb8i\nJOnDvAh3qq5r0e7W7ImP4G7cgTRMqKPTjUfFNCT+ZAmugUW+E/a19U9wqPfv\nCpZW6wm+KsMAcgPuFIPkTSPmB5b6oIgUs8xmKO6jOCIvJjs8FpTTJlyyUJex\nOJOb196u6SXQ4fSCYyvzN6Abe4tHWnZuHkkJEi80E4TGNPu719uvNqP4Hqrk\n8MlV9g08wiJT/z3CGgsLw5aVQuBWK/JH+W8smpofjvaymTYn9f+DxP2nvJC6\nPCmcY7NnRzu0QjUWK6Hn0b05xIC+MvhD+y47v9wso+sL2TS/CUYcOfDbxHc5\n2qIAwLFzH912X4G/V3W3MKbhHbUiunTjM4un0nKlvHJ6EcNSGPvpLk8czcpJ\nvx9K\r\n=u0j0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.2_1589576329423_0.8374884234776059"},"_hasShrinkwrap":false},"3.0.3":{"name":"react-chat-widget","version":"3.0.3","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@toycode/markdown-it-class":"^1.2.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"ea54f7207a3ac1b3523e258d37c2ee6b293085a9","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.3","_nodeVersion":"12.16.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-rL1qcM3pMzgO/E98/Dc0LITYvUruDIDFHKQJMXC0EjX74KHH0dh++3nFtmkbjckcFF45E9whT09dEdDxJp9rFA==","shasum":"e19d9de29a0a568650c519648d22aa76be06a2f1","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.3.tgz","fileCount":11,"unpackedSize":221846,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe0W1YCRA9TVsSAnZWagAAj70P/R6o/S1GsYerLrxcompz\nB5/qXgaKNzi3o6EEay8YqyqfZT2eMwNNT9GMVksIuK+dKVe3Sp5H65alD3ex\nfoX2f1YQJsb05TxB6m49Pexw66hYMBg0Tc6O1a/jccnxeRzFZO4S0+FQSt5Z\nF6Q8A6Zpq1m8cvK13+GsoiMTNVbGAQ5+pytTXAPh1+5SW9rO5huGmPj5KcPW\nQMsECVNfyKnCqvlrm2hESA3fi2VRlU9vNtf9xaEETl2zZBAmOCwefZ0puxUS\n8c/RXAts97Gwt7AVe0j0Do+/vscJjgsFXg4ePQa4S2KUw+5oolUVsE9yuZAF\naQcl96v0jYeQ8yck9zC7DzvBJuXMj5WPmv12ctCWauHXhSzY/vfFPn7NW4Wh\n2TKLg8tz4dh/7kLXe4VUrDPYiDxOW4SCYdmjBHFMZ/933qdV+zZhiKYgZlQn\nHehVTsy1s0ho/mE9L/9LU/YUHaiCo8RDXpVo7FStGksRezJQ9/o6Ogoc7rU8\nhjA4RUzUwQV1m8qyRd8JWLcWd906hF06/yU3f3IBgorNeBitLvYK68heLw9q\n6GNXmM5pqvZl4+Ckpb70L+MjYAirVLPFHHGS9wkUNzAZezcFPxZ1aPoE0yZ1\n2InaWa1H4YLOxNtV/ngtr2WMftjYmsN83VYKVPPC9+iO18xeGi+VmBb7dbb5\nLU47\r\n=hiwy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.3_1590783319870_0.30188919612149423"},"_hasShrinkwrap":false},"3.0.4":{"name":"react-chat-widget","version":"3.0.4","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@toycode/markdown-it-class":"^1.2.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"f60e350aad6a5b9d6fdb9c18b64b1effb4a44a53","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.4","_nodeVersion":"12.16.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-ukQGBlEbOTGzZYOZtJA9atvNpsqbp+pjN+H/5L7wbnU0WaYDjS9e1dqbKBr/uO0k+9Q79Q691q2YdJE5c46XIQ==","shasum":"bf453bbdf8187397456e56b58da78bd2e1556ee3","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.4.tgz","fileCount":11,"unpackedSize":221846,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe1musCRA9TVsSAnZWagAAKIkP/2RTmtjImbPu1wmer1hr\nPqxMV0oVB2tteRlqHe/FscVIJegefl6RFFPvtBHD2zk5VYuICKHluWWv1+XL\nz74ojpeezK0wqKANYCX8toaCMkB3Oliytm7g50sMeyFVPCrf/f3HBr3D6FHT\nuHGBPIU8C1mN/Db58tCF3RLzVe0MTdrkLr7GtqWJH7MIfFzyVVCmLkMdP+v4\nxmM47/OdnJcnBMIt1ksMonjaMWLTdMbZvVnewWfU0dMpyk3JJdBbfWuX1FkQ\nuT9NkP/6K5XrZ2yK021lsksdUxuZBSmP+M7KyjG0NrI2j/WfreQnXJQl3Dgu\nhhdMvfFaEUHhUzFlGsrhLYhruMdiL+u2yWAEHvdFNA77YN79LGKtgbEVsBoW\nC9Qclu67VMQusfnf5NB2ty4bQVIynJFPc4PPkc+jnUGynhuGVu7egjJDmK0R\n3SOyNZJLUPDe2f4ifq9NQkhKLjQlHhFsNf6ait/oTIrkyq1Ol3NO4cpKYKRk\nVzA0FGKEVtgLRosqp/IMuXIvJxN2AcP7VBZVjGX20tDjdhAZikFJv9gn24kV\nikfcIo2ZqTRIg775Ki3ru8PVQwMRtC0BNQx/49PeIogHYRsuLSqwu58/6qX6\nDvwYRPoxGv42+F7tgUvRBREvICb6F0kx3rEFKvsjQKEVeU7TFO220kUg2v5r\nx2Bp\r\n=P6kg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.4_1591110571469_0.2926818416325141"},"_hasShrinkwrap":false},"3.0.5-beta1":{"name":"react-chat-widget","version":"3.0.5-beta1","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@toycode/markdown-it-class":"^1.2.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|prop|type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|(...args: any[]) => any|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|string|NO|'Welcome'|Title of the widget|\n|**subtitle**|string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|boolean|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|boolean|NO|false|Allow the use of full screen in full desktop mode|\n|**autofocus**|boolean|NO|true|Autofocus or not the user input|\n|**launcher**|(handleToggle) => ElementType|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|(...args: any[]) => any|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n|**showTimeStamp**|boolean|NO|true|Show time stamp on messages|\n|**chatId**|string|NO|'rcw-chat-container'|Chat container id for a11y|\n|**launcherOpenLabel**|string|NO|'Open chat'|Alt value for the laucher when closed|\n|**launcherCloseLabel**|string|NO|'Close chat'|Alt value for the laucher when open|\n|**sendButtonAlt**|string|NO|'Send'|Send button alt for a11y purposes|\n|**handleTextInputChange**|(event) => any|NO| |Prop that triggers on input change|\n|**handleSubmit**|(event) => any|NO| |Prop that triggers when a message is submitted, used for custom validation|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo override, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nAs of v3.0, messages now have an optional ID that can be added on creation.If you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text: string\n    - id: string (optional)\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text: string\n    - id: string (optional)\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. You need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inside the messages container. With this method, you can add whatever component you need the widget to have.\n\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for both the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n- **toggleMsgLoader**\n  - Toggles the message loader that shows as a \"typing...\" style.\n\n- **deleteMessages***\n  - params:\n    - count: messages to delete counting from last to first\n    - id: message id to delete\n  - Delete messages that either have an id you previously set with the `addResponseMessage` or delete based on position or both of them. For example `deleteMessages(2, 'myId')` will delete the message that has the id `myId` and the previous message.\n\n- **markAllAsRead**\n  - Marks all response messages as read. The user messages doesn't have the read/unread property.\n\n- **setBadgeCount**\n  - params:\n    - count: number\n  - As of v3.0, the `badge` prop is being changed to be managed from within the Widget. This method is manually set the badge number.\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop:\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\n...\n\nfunction MyApp() {\n  const getCustomLauncher = (handleToggle) =>\n    <button onClick={handleToggle}>This is my launcher component!</button>\n\n  return (\n    <Widget\n      ...\n      launcher={handleToggle => getCustomLauncher(handleToggle)}\n    />\n  )\n}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component as seen in the example. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","readmeFilename":"README.md","gitHead":"f60e350aad6a5b9d6fdb9c18b64b1effb4a44a53","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.5-beta1","_nodeVersion":"12.16.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-cIjNpNZVwEkgxmDR8ftHkduBNppAMHnIlKkuizuluGOVtLF0ExNIHPBRJnEOmVECvgEMvY1kkwlO25TUn8YITw==","shasum":"da3f65e85b915dbd70bd9d179deae63ba59ac919","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.5-beta1.tgz","fileCount":11,"unpackedSize":221851,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe19vUCRA9TVsSAnZWagAAhjQP/12H10TrtKNAkbRkNjpB\nITZLIlDhj/wS1fHRfIdNkFhD0M3St71/Vq/oDo1d5iaq28AHwdrqICgOfro5\nTb1Kr1UhfLJB0QxWqvW793s33il+9EnjGvbFNuBC0Jb5EKRXGa1z55M0WgXe\nSEy06dPnNvE7te/zAD2g5ciWfo65Cp6Jxs4aCh6PfT4B7jwl3z7ZxcyOXOIc\nMQUeRBvwBAnvWgRY+q2mNK0Fz2NO+OGzTcv1yD7TuCoR05E65n2hTlNi0gLl\nk9ju4s+n1sBTdFKMOWAclsdwWvV0UmJQ1R8UawSKcDjD/9EcagOu5nQ26S6b\nqINfbMWd83DVVdMIhft7GsaGY0k93NR734XlHf9tBfpMcwlMiiEhbYefBrmE\nWWGocNUypEvpt5ZY+DDSU/Ip840O6rKSnO4+FqnWl0ocnUxFwqO12sgVNGy6\nkpDIbOkIGzhZKVL/mYpTnVazWkcI8B8T8w2Evdj+g+SL9HgPBuamhuonn6JL\nBSlc+5Sp7pTg25QYJ89z3JGHzYm6xiuMopZn6iAsI6yfARfr7Ro+P/ArXdn/\nKHDkMLcjqLFmY0LMUTxT6ywqtiXvvJR6dwVKR4k7QK5pkUl1O434R1lR9wSg\nu1xoO4lBrhejKQc8wfiYyYVCbYc8pylZHpGeOhlx0dDeyhVcEPrNp9Lb5+SE\nLmX/\r\n=aFCT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.5-beta1_1591204820102_0.24564654200332092"},"_hasShrinkwrap":false},"3.0.5":{"name":"react-chat-widget","version":"3.0.5","description":"Chat web widget for React apps","main":"lib/index.js","repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"license":"MIT","types":"./lib/index.d.ts","scripts":{"start":"webpack-dev-server --config webpack.config.dev.js","build":"webpack --config ./webpack.config.prod.js","test":"jest --coverage"},"keywords":["react","chat","widget","javascript"],"dependencies":{"classnames":"^2.2.6","date-fns":"^2.11.1","markdown-it":"^8.4.1","markdown-it-link-attributes":"^2.1.0","markdown-it-sanitizer":"^0.4.3","markdown-it-sup":"^1.0.0","react-redux":"^7.2.0","redux":"^4.0.5"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.3","@babel/plugin-proposal-object-rest-spread":"^7.8.3","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.3","@babel/preset-typescript":"^7.8.3","@toycode/markdown-it-class":"^1.2.3","@types/classnames":"^2.2.10","@types/enzyme":"^3.10.5","@types/jest":"^25.1.4","@types/react":"^16.9.23","@types/react-dom":"^16.9.5","@types/react-redux":"^7.1.7","@typescript-eslint/eslint-plugin":"^2.23.0","autoprefixer":"^8.2.0","babel-jest":"^19.0.0","babel-loader":"^8.0.6","babel-plugin-module-resolver":"^4.0.0","babel-preset-env":"^1.7.0","babel-preset-react":"^6.24.1","clean-webpack-plugin":"^0.1.19","css-loader":"^0.28.4","enzyme":"^3.3.0","enzyme-adapter-react-16":"^1.1.1","eslint":"^6.8.0","eslint-config-wolox":"^4.0.0","eslint-import-resolver-babel-module":"^3.0.0","eslint-loader":"^3.0.3","eslint-plugin-flowtype":"^2.30.4","eslint-plugin-import":"^2.7.0","eslint-plugin-jsx-a11y":"^4.0.0","eslint-plugin-prettier":"^2.6.2","eslint-plugin-react":"^6.10.3","file-loader":"^0.11.2","html-webpack-plugin":"^3.2.0","husky":"^4.2.3","jest":"^25.1.0","mini-css-extract-plugin":"^0.4.1","node-sass":"^4.13.1","optimize-css-assets-webpack-plugin":"^4.0.3","postcss-flexbugs-fixes":"^3.3.0","postcss-loader":"^2.1.3","prettier":"^1.1.0","prettier-eslint":"^5.1.0","react":"^16.13.1","react-dom":"^16.13.1","sass-loader":"^6.0.6","source-map-loader":"^0.2.4","style-loader":"^0.18.2","ts-jest":"^25.3.1","ts-loader":"^6.2.1","typescript":"^3.8.3","uglifyjs-webpack-plugin":"^1.2.7","url-loader":"^0.5.9","webpack":"^4.42.0","webpack-cli":"^3.3.11","webpack-dev-server":"^3.10.3"},"peerDependencies":{"react":"^16.13.1","react-dom":"^16.13.1"},"jest":{"verbose":true,"transform":{"^.+\\.tsx?$":"ts-jest"},"testRegex":"(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$","moduleFileExtensions":["ts","tsx","js","jsx","json","node"],"testURL":"http://localhost/","moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$":"<rootDir>/mocks/fileMock.js","\\.(css|scss)$":"<rootDir>/mocks/styleMock.js"}},"gitHead":"c6eec447723d8f69f0019b5ccc477aee68ba5ab9","bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","_id":"react-chat-widget@3.0.5","_nodeVersion":"12.16.1","_npmVersion":"6.14.5","dist":{"integrity":"sha512-I/2JRd4fQtWib2l3SVCoFFSeX89BkqnSCLZmlTBy6BSbRcyGAwwuydq5TbayskTJ5KQssolhRo5aB+40V/fh0Q==","shasum":"a019e219ab72942d90ceb86e6aa7e078ec523b17","tarball":"https://registry.npmjs.org/react-chat-widget/-/react-chat-widget-3.0.5.tgz","fileCount":11,"unpackedSize":221845,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe19zgCRA9TVsSAnZWagAATCMQAJZRrpKMijAXcpf3s8KE\njW7kgj8/3lTZM/NSmlY2IIjSShXhEunES61Ejy/EoiQoOpAg9OokssJbSMFS\neAQmEYswuvFjCl8DGEiU3t6vd3he3R35N3kDEpQua8QbEVPGmNJD7MhvsO+I\nWYJle/lnqRmRIYwrD+1F+IUzq2yZ6QWLOOhH94WZXNQIQIKt/QN9MIhT1DoS\niBTfn98Qov/uTlrjpEXIxNWffb3/g94ZRlvDWBMyx1wHRy3/bI1VRNifyhCW\nm91mFwaQx5l4olyavER1mERa/APFjTQtIv0mga9cDwIguVLkNCUbM0/0UoPt\n2eu4IBUVyE+ALGextjBkYvrWPRFc196qNCQRy7mePNyTxb8wLQE0datYjw1u\nU1cmxzKvavlxOMPbwStF5IHnXO6JOsZdJntEDuuSemxnH5YgweLr/zpQbe2T\nmj+YfioO8/HUUacc4Hi7nmEh/HwqFO5/NP2MRDQHnq0uhKFTvxJDTQpL+6pe\nsVmgnXxNrAIVysz3c54+4MgSpCW1UBw93+xfwDfvvJM33F7/dtCtefapkgoY\nudMhUfRGFuU66LYXP7sFxdyDJExBwDmGLNTL4KNWFbRgBNmCRUoJ/6pFJkN3\nlyUVo63NZ97XZEIrFUAh3sGhY1DLvI83wHrweez6iqSxxN2Fp6xn0gsZgiAn\n0lzy\r\n=qIQb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"_npmUser":{"name":"martincallegari","email":"martin.callegari@wolox.com.ar"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-chat-widget_3.0.5_1591205087707_0.38825251892320933"},"_hasShrinkwrap":false}},"readme":"# React Chat Widget\n[![circle-ci](https://img.shields.io/circleci/project/github/Wolox/react-chat-widget.svg)](https://circleci.com/gh/Wolox/react-chat-widget)\n[![npm](https://img.shields.io/npm/v/react-chat-widget.svg)](https://www.npmjs.com/package/react-chat-widget)\n\n[![FEArmy](./assets/FEA_open_source_sm.png)](https://github.com/orgs/Wolox/teams/front-end-army/members)\n\n## Sponsors\n\n<div>\n    <br/>\n    <p align=\"center\">\n        <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">\n            <img src=\"https://i.imgur.com/oU7XYkk.png\">\n        </a>\n    </p>\n    <br>\n    <div>\n        <p align=\"center\">\n            A scalable <a href=\"https://getstream.io/chat/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Chat API/Server</a> written in Go\n        </p>\n    </div>\n    <div>\n        <p align=\"center\">\n            <a href=\"https://getstream.io/chat/get_started/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">API Tour</a> | <a href=\"https://github.com/getstream/stream-sdks?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">SDKs</a> | <a href=\"https://getstream.io/chat/docs/?utm_source=github&utm_medium=react-chat-widget&utm_campaign=sponsorship\" target=\"_blank\">Docs</a>\n        </p>\n    </div>\n</div>\n\n## Features\n\n- Plain text message UI\n- Snippet style for links (only as responses for now)\n- Fully customizable\n- Easy to use\n\n![demonstration](./assets/chat-demonstration.gif)\n\n## Installation\n\n#### npm\n```bash\nnpm install --save react-chat-widget\n```\n\n#### yarn\n```bash\nyarn add react-chat-widget\n```\n\n## Usage\n\n1- Add the Widget component to your root component\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n2- The only required prop you need to use is the `handleNewUserMessage`, which will receive the input from the user.\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n3- Import the methods for you to add messages in the Widget. (See [messages](#messages))\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    addResponseMessage(response);\n  };\n\n  return (\n    <div className=\"App\">\n      <Widget\n        handleNewUserMessage={handleNewUserMessage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n4- Customize the widget to match your app design! You can add both props to manage the title of the widget and the avatar it will use. Of course, feel free to change the styles the widget will have in the CSS\n\n```js\nimport React from 'react';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\n\nimport 'react-chat-widget/lib/styles.css';\n\nimport logo from './logo.svg';\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Welcome to this awesome chat!');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          profileAvatar={logo}\n          title=\"My new awesome title\"\n          subtitle=\"And my cool subtitle\"\n        />\n      </div>\n    );\n  } \n}\n\nexport default App;\n```\n\n## API\n\n#### Props\n\n|prop|type|required|default value|description|\n|---|--- |---     |---          |---        |\n|**handleNewUserMessage**|(...args: any[]) => any|YES| |Function to handle the user input, will receive the full text message when submitted|\n|**title**|string|NO|'Welcome'|Title of the widget|\n|**subtitle**|string|NO|'This is your chat subtitle'|Subtitle of the widget|\n|**senderPlaceHolder**|string|NO|'Type a message...'|The placeholder of the message input|\n|**profileAvatar**|string|NO| |The profile image that will be set on the responses|\n|**titleAvatar**|string|NO| |The picture image that will be shown next to the chat title|\n|**showCloseButton**|boolean|NO|false|Show or hide the close button in full screen mode|\n|**fullScreenMode**|boolean|NO|false|Allow the use of full screen in full desktop mode|\n|**autofocus**|boolean|NO|true|Autofocus or not the user input|\n|**launcher**|(handleToggle) => ElementType|NO||Custom Launcher component to use instead of the default|\n|**handleQuickButtonClicked**|(...args: any[]) => any|NO||Function to handle the user clicking a quick button, will receive the 'value' when clicked.|\n|**showTimeStamp**|boolean|NO|true|Show time stamp on messages|\n|**chatId**|string|NO|'rcw-chat-container'|Chat container id for a11y|\n|**launcherOpenLabel**|string|NO|'Open chat'|Alt value for the laucher when closed|\n|**launcherCloseLabel**|string|NO|'Close chat'|Alt value for the laucher when open|\n|**sendButtonAlt**|string|NO|'Send'|Send button alt for a11y purposes|\n|**handleTextInputChange**|(event) => any|NO| |Prop that triggers on input change|\n|**handleSubmit**|(event) => any|NO| |Prop that triggers when a message is submitted, used for custom validation|\n\n#### Styles\n\nTo change the styles you need the widget to have, simply override the CSS classes wrapping them within the containers and add your own style to them! All classes are prefixed with `rcw-` so they don't override your other classes in case you are not hasing them. \nTo override, you can do, for expample:\n\n```css\n.rcw-conversation-container > .rcw-header {\n  background-color: red;\n}\n\n.rcw-message > .rcw-response {\n  background-color: black;\n  color: white;\n}\n```\n\nThat way, you can leave the JS clean and keep the styles within the CSS.\n\n#### Messages\n\nAs of v3.0, messages now have an optional ID that can be added on creation.If you want to add new messages, you can use the following methods:\n\n- **addResponseMessage**\n  - params:\n    - text: string\n    - id: string (optional)\n  - Method to add a new message written as a response to a user input.\n\n- **addUserMessage**\n  - params: \n    - text: string\n    - id: string (optional)\n  - This method will add a new message written as a user. Keep in mind it will not trigger the prop handleNewUserMessage()\n\n- **addLinkSnippet**\n  - params:\n    - link\n  - Method to add a link snippet. You need to provide this method with a link object, which must be in the shape of:\n    ```js\n    {\n      title: 'My awesome link',\n      link: 'https://github.com/Wolox/react-chat-widget',\n      target: '_blank'\n    }\n    ```\n  - By default, `target` value is `_blank` which will open the link in a new window.\n\n- **renderCustomComponent**\n  - params: \n    - component: Component to be render,\n    - props: props the component needs,\n    - showAvatar: boolean, default value: false; the component will be rendered with the avatar like the messages\n  - Method to render a custom component inside the messages container. With this method, you can add whatever component you need the widget to have.\n\n- **setQuickButtons**\n  - params:\n    - buttons: An array of objects with the keys `label` and `value`\n\n**Markdown is supported for both the responses and user messages.**\n\n#### Widget behavior\n\nYou can also control certain actions of the widget:\n\n- **toggleWidget**\n  - params: No params expected\n  - This method is to toggle the widget at will without the need to trigger the click event on the launcher\n\n- **toggleInputDisabled**\n  - params: No params expected\n  - Method to toggle the availability of the message input for the user to write on\n\n- **toggleMsgLoader**\n  - Toggles the message loader that shows as a \"typing...\" style.\n\n- **deleteMessages***\n  - params:\n    - count: messages to delete counting from last to first\n    - id: message id to delete\n  - Delete messages that either have an id you previously set with the `addResponseMessage` or delete based on position or both of them. For example `deleteMessages(2, 'myId')` will delete the message that has the id `myId` and the previous message.\n\n- **markAllAsRead**\n  - Marks all response messages as read. The user messages doesn't have the read/unread property.\n\n- **setBadgeCount**\n  - params:\n    - count: number\n  - As of v3.0, the `badge` prop is being changed to be managed from within the Widget. This method is manually set the badge number.\n\n#### Widget components\n\n##### Custom Launcher\n\nYou can use a custom component for the Launcher if you need one that's not the default, simply use the **launcher** prop:\n\n```js\nimport React from 'react';\nimport { Widget } from 'react-chat-widget';\n\n...\n\nfunction MyApp() {\n  const getCustomLauncher = (handleToggle) =>\n    <button onClick={handleToggle}>This is my launcher component!</button>\n\n  return (\n    <Widget\n      ...\n      launcher={handleToggle => getCustomLauncher(handleToggle)}\n    />\n  )\n}\n```\n\n`getCustomLauncher()` is a method that will return the `Launcher` component as seen in the example. By default, the function passed by that prop, will receive the `handleToggle` parameter which is the method that will toggle the widget.\n\n## About\n\nThis project is maintained by [Martín Callegari](https://github.com/mcallegari10) and it was written by [Wolox](http://www.wolox.com.ar).\n\n![Wolox](https://raw.githubusercontent.com/Wolox/press-kit/master/logos/logo_banner.png)\n","maintainers":[{"email":"braiandickson@gmail.com","name":"braiandickson"},{"email":"damfinkel@gmail.com","name":"damfinkel"},{"email":"francisco.iglesias@wolox.com.ar","name":"frankiglesias"},{"email":"gonziesc@gmail.com","name":"gonziesc"},{"email":"ignacio.abadie@wolox.com.ar","name":"iabadie"},{"email":"igna_torres92@hotmail.com","name":"igna92ts"},{"email":"ignacio.santise@wolox.com.ar","name":"ignacio.santise"},{"email":"alvarezjulianignacio@gmail.com","name":"jjuli93"},{"email":"lucas.medrano@wolox.com.ar","name":"lucasmedrano"},{"email":"martin.callegari@wolox.com.ar","name":"martincallegari"},{"email":"meelrossi@gmail.com","name":"meelrossi"},{"email":"martin.picollo@wolox.com.ar","name":"mpicollo-wolox"},{"email":"matipizza@gmail.com","name":"mpizzagalli"},{"email":"mvbattan@gmail.com","name":"mvbattan"},{"email":"nao.passarelli@gmail.com","name":"nao.passarelli"},{"email":"pablo.cid@wolox.com.ar","name":"pabloccid"},{"email":"pablo.ferro@wolox.com.ar","name":"pabloferro"},{"email":"rodrigoaparicio6@gmail.com","name":"raparicio6"},{"email":"alan.rinaldi@wolox.com.ar","name":"rinaldia118"},{"email":"fernandezsantid@gmail.com","name":"rorosf"},{"email":"sebastian.balay@wolox.com.ar","name":"sebbal"},{"email":"gabriel.zanzotti@gmail.com","name":"skolz"},{"email":"walterfolini@gmail.com","name":"wfolini"}],"time":{"modified":"2020-06-03T17:24:52.521Z","created":"2017-08-16T20:06:53.245Z","1.0.0":"2017-08-16T20:06:53.245Z","1.0.1":"2017-08-24T20:13:18.014Z","2.0.0":"2017-09-07T20:04:29.480Z","2.0.1":"2017-09-11T15:27:07.425Z","2.1.0":"2017-09-21T20:41:09.873Z","2.1.1":"2017-09-25T14:12:00.894Z","2.1.2":"2017-11-16T16:43:51.946Z","2.1.3":"2018-04-13T20:19:45.825Z","2.1.4-beta":"2018-05-04T14:02:13.732Z","2.1.4-beta01":"2018-05-04T19:24:13.571Z","2.1.4-beta02":"2018-05-18T21:04:23.446Z","2.1.4":"2018-07-24T20:18:39.128Z","2.1.4-1":"2018-07-30T20:57:06.358Z","2.1.5":"2019-09-16T17:11:51.369Z","3.0.0-beta":"2020-04-06T20:13:13.708Z","3.0.0-beta.1":"2020-04-06T20:39:36.710Z","3.0.0-beta.2":"2020-04-07T15:37:52.163Z","3.0.0-beta.3":"2020-04-07T18:25:33.384Z","3.0.0-beta.4":"2020-04-07T18:30:15.298Z","3.0.0-beta.5":"2020-04-13T18:18:05.261Z","3.0.0-beta.6":"2020-04-16T15:00:03.508Z","3.0.0":"2020-04-17T21:52:48.318Z","3.0.1-beta.1":"2020-04-29T14:45:06.066Z","3.0.1":"2020-05-04T14:12:43.906Z","3.0.2":"2020-05-15T20:58:49.537Z","3.0.3":"2020-05-29T20:15:20.048Z","3.0.4":"2020-06-02T15:09:31.584Z","3.0.5-beta1":"2020-06-03T17:20:20.201Z","3.0.5":"2020-06-03T17:24:47.852Z"},"homepage":"https://github.com/Wolox/react-chat-widget#readme","keywords":["react","chat","widget","javascript"],"repository":{"type":"git","url":"git+ssh://git@github.com/Wolox/react-chat-widget.git"},"author":{"name":"Martín Callegari","email":"martin.callegari@wolox.com.ar"},"bugs":{"url":"https://github.com/Wolox/react-chat-widget/issues"},"license":"MIT","readmeFilename":"README.md","users":{"jamamuuga":true}}