{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/components/StyleIdDialog.js\";\nimport React, { useState, useMemo } from 'react';\nimport { Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\n\nfunction DialogStyleName({\n  open,\n  initialId,\n  onComplete,\n  styleIds\n}) {\n  const [styleId, setStyleId] = useState(initialId);\n\n  const handleChange = event => setStyleId(event.target.value);\n\n  const handleComplete = () => onComplete(styleId);\n\n  const idAlreadyPresent = useMemo(() => Object.values(styleIds).flat().some(id => id === styleId), [styleId, styleIds]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Style Id\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"What do you want to call your new style?\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    label: \"Style id\",\n    value: styleId,\n    onChange: handleChange,\n    onKeyPress: e => !idAlreadyPresent && e.key === 'Enter' && handleComplete(),\n    helperText: idAlreadyPresent && `Pick an unused name`,\n    error: idAlreadyPresent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: idAlreadyPresent,\n    onClick: handleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n}\n\nexport default DialogStyleName;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/components/StyleIdDialog.js"],"names":["React","useState","useMemo","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","Button","DialogStyleName","open","initialId","onComplete","styleIds","styleId","setStyleId","handleChange","event","target","value","handleComplete","idAlreadyPresent","Object","values","flat","some","id","e","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,MAPF,QAQO,mBARP;;AAUA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAzB,EAAoE;AAClE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACW,SAAD,CAAtC;;AAEA,QAAMK,YAAY,GAAGC,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxC;;AACA,QAAMC,cAAc,GAAG,MAAMR,UAAU,CAACE,OAAD,CAAvC;;AACA,QAAMO,gBAAgB,GAAGpB,OAAO,CAC9B,MACEqB,MAAM,CAACC,MAAP,CAAcV,QAAd,EACGW,IADH,GAEGC,IAFH,CAEQC,EAAE,IAAIA,EAAE,KAAKZ,OAFrB,CAF4B,EAK9B,CAACA,OAAD,EAAUD,QAAV,CAL8B,CAAhC;AAQA,sBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,eAEE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,KAAK,EAAEI,OAHT;AAIE,IAAA,QAAQ,EAAEE,YAJZ;AAKE,IAAA,UAAU,EAAEW,CAAC,IAAI,CAACN,gBAAD,IAAqBM,CAAC,CAACC,GAAF,KAAU,OAA/B,IAA0CR,cAAc,EAL3E;AAME,IAAA,UAAU,EAAEC,gBAAgB,IAAK,qBANnC;AAOE,IAAA,KAAK,EAAEA,gBAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEA,gBAAlB;AAAoC,IAAA,OAAO,EAAED,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAdF,CADF;AAsBD;;AAED,eAAeX,eAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport {\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nfunction DialogStyleName({ open, initialId, onComplete, styleIds }) {\n  const [styleId, setStyleId] = useState(initialId);\n\n  const handleChange = event => setStyleId(event.target.value);\n  const handleComplete = () => onComplete(styleId);\n  const idAlreadyPresent = useMemo(\n    () =>\n      Object.values(styleIds)\n        .flat()\n        .some(id => id === styleId),\n    [styleId, styleIds]\n  );\n\n  return (\n    <Dialog open={open}>\n      <DialogTitle>Style Id</DialogTitle>\n      <DialogContent>\n        <Typography>What do you want to call your new style?</Typography>\n        <TextField\n          autoFocus\n          label=\"Style id\"\n          value={styleId}\n          onChange={handleChange}\n          onKeyPress={e => !idAlreadyPresent && e.key === 'Enter' && handleComplete()}\n          helperText={idAlreadyPresent && `Pick an unused name`}\n          error={idAlreadyPresent}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button disabled={idAlreadyPresent} onClick={handleComplete}>\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default DialogStyleName;\n"]},"metadata":{},"sourceType":"module"}