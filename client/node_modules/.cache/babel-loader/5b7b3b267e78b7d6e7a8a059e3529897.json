{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/components/SaveDialog.js\";\nimport React, { useState, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  name: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst SaveDialog = ({\n  open,\n  onCancel,\n  onSave\n}) => {\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const handleComplete = useCallback(() => onSave({\n    name,\n    description\n  }), [name, description, onSave]);\n  const handleEnter = useCallback(evt => {\n    if (name && evt.key === 'Enter') {\n      handleComplete();\n    }\n  }, [name, handleComplete]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onCancel,\n    \"aria-labelledby\": \"save-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"save-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Save Template\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"You're about to save this template. Give your new template a name and a brief description.\"), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.name,\n    autoFocus: true,\n    variant: \"outlined\",\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Name\",\n    fullWidth: true,\n    value: name,\n    onChange: evt => setName(evt.target.value),\n    onKeyPress: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: description,\n    onChange: evt => setDescription(evt.target.value),\n    onKeyPress: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onCancel,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleComplete,\n    color: \"primary\",\n    disabled: !name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nexport default SaveDialog;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/components/SaveDialog.js"],"names":["React","useState","useCallback","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","useStyles","theme","name","marginBottom","spacing","SaveDialog","open","onCancel","onSave","classes","setName","description","setDescription","handleComplete","handleEnter","evt","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  name: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst SaveDialog = ({ open, onCancel, onSave }) => {\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const handleComplete = useCallback(() => onSave({ name, description }), [\n    name,\n    description,\n    onSave,\n  ]);\n  const handleEnter = useCallback(\n    evt => {\n      if (name && evt.key === 'Enter') {\n        handleComplete();\n      }\n    },\n    [name, handleComplete]\n  );\n\n  return (\n    <Dialog open={open} onClose={onCancel} aria-labelledby=\"save-dialog\">\n      <DialogTitle id=\"save-dialog\">Save Template</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          You're about to save this template. Give your new template a name and a brief\n          description.\n        </DialogContentText>\n        <TextField\n          className={classes.name}\n          autoFocus\n          variant=\"outlined\"\n          margin=\"dense\"\n          id=\"name\"\n          label=\"Name\"\n          fullWidth\n          value={name}\n          onChange={evt => setName(evt.target.value)}\n          onKeyPress={handleEnter}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          id=\"description\"\n          label=\"Description\"\n          fullWidth\n          multiline\n          rows={4}\n          value={description}\n          onChange={evt => setDescription(evt.target.value)}\n          onKeyPress={handleEnter}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleComplete} color=\"primary\" disabled={!name}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default SaveDialog;\n"]},"metadata":{},"sourceType":"module"}