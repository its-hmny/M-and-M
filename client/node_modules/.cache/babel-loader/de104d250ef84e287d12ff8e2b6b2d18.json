{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/Elements/AudioPlayer.js\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport shortid from 'shortid';\nconst base = css`\n  .player {\n    box-shadow: 1px 2px #bdbdbd;\n  }\n\n  .progress {\n    height: 2px;\n    left: 0;\n    top: 0;\n    background-color: #bdbdbd;\n  }\n\n  .play-pause {\n    border: none;\n    background-color: none;\n  }\n\n  .icon-play {\n  }\n`;\nconst audioID = shortid.generate();\n\nconst AudioPlayer = ({\n  srcURL,\n  style,\n  autoplay\n}) => {\n  const [playing, setPlaying] = React.useState(autoplay);\n  const [width, setWidth] = React.useState(0);\n  var audioref;\n\n  const playpause = () => {\n    if (playing) {\n      audioref.audioEl.current.pause();\n      setPlaying(false);\n    } else {\n      audioref.audioEl.current.play();\n      setPlaying(true);\n    }\n  };\n\n  const updateProgress = time => {\n    setWidth(time / audioref.audioEl.current.duration * 100);\n  };\n\n  return jsx(\"div\", {\n    css: [base, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, jsx(ReactAudioPlayer, {\n    \"aria-label\": 'Audio Player',\n    src: srcURL,\n    id: audioID,\n    listenInterval: 1,\n    onListen: time => updateProgress(time),\n    ref: element => {\n      audioref = element;\n    },\n    onEnded: () => {\n      setPlaying(false);\n    },\n    autoPlay: autoplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), jsx(\"div\", {\n    style: {\n      width: width + '%',\n      height: 4,\n      ...style['ProgressBar']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), jsx(\"button\", {\n    \"aria-label\": playing ? 'Pause audio player' : 'Play audio player',\n    className: \"play-pause icon-play\",\n    onClick: playpause,\n    style: style['PlayButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, playing ? jsx(PauseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }\n  }) : jsx(PlayArrowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 38\n    }\n  }))));\n};\n\nexport default AudioPlayer;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/Elements/AudioPlayer.js"],"names":["css","jsx","React","ReactAudioPlayer","PlayArrowIcon","PauseIcon","shortid","base","audioID","generate","AudioPlayer","srcURL","style","autoplay","playing","setPlaying","useState","width","setWidth","audioref","playpause","audioEl","current","pause","play","updateProgress","time","duration","element","height"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport shortid from 'shortid';\n\nconst base = css`\n  .player {\n    box-shadow: 1px 2px #bdbdbd;\n  }\n\n  .progress {\n    height: 2px;\n    left: 0;\n    top: 0;\n    background-color: #bdbdbd;\n  }\n\n  .play-pause {\n    border: none;\n    background-color: none;\n  }\n\n  .icon-play {\n  }\n`;\n\nconst audioID = shortid.generate();\nconst AudioPlayer = ({ srcURL, style, autoplay }) => {\n  const [playing, setPlaying] = React.useState(autoplay);\n  const [width, setWidth] = React.useState(0);\n\n  var audioref;\n\n  const playpause = () => {\n    if (playing) {\n      audioref.audioEl.current.pause();\n      setPlaying(false);\n    } else {\n      audioref.audioEl.current.play();\n      setPlaying(true);\n    }\n  };\n\n  const updateProgress = time => {\n    setWidth((time / audioref.audioEl.current.duration) * 100);\n  };\n\n  return (\n    <div css={[base, style]}>\n      <div className=\"player\">\n        <ReactAudioPlayer\n          aria-label={'Audio Player'}\n          src={srcURL}\n          id={audioID}\n          listenInterval={1}\n          onListen={time => updateProgress(time)}\n          ref={element => {\n            audioref = element;\n          }}\n          onEnded={() => {\n            setPlaying(false);\n          }}\n          autoPlay={autoplay}\n        />\n\n        <div style={{ width: width + '%', height: 4, ...style['ProgressBar'] }} />\n        <button\n          aria-label={playing ? 'Pause audio player' : 'Play audio player'}\n          className=\"play-pause icon-play\"\n          onClick={playpause}\n          style={style['PlayButton']}\n        >\n          {playing ? <PauseIcon /> : <PlayArrowIcon />}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"]},"metadata":{},"sourceType":"module"}