{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/PointsFragment.js\";\nimport React from 'react';\nimport { makeStyles, Button, IconButton, Divider, TextField } from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'auto'\n  },\n  inputRoot: {\n    paddingRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  FormSelect: {\n    marginTop: theme.spacing(2)\n  },\n  deleteStyle: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst AnswerFragment = ({\n  classNames,\n  path,\n  fragmentSpecificProps\n}) => {\n  const classes = useStyles();\n  const {\n    getFromPath,\n    setPathToValue\n  } = useEditor();\n  const {\n    pathAlternative,\n    valToChange\n  } = fragmentSpecificProps; //Additional field to modify objects or array\n\n  path = pathAlternative ? path.concat(pathAlternative) : path || [];\n  const messages = getFromPath(path)[valToChange];\n  const thresholdPath = path.concat(valToChange);\n\n  const addChoice = () => {\n    setPathToValue(path, 'messages', [...messages, {\n      threshold: 0,\n      text: ''\n    }]);\n  };\n\n  const deleteChoice = i => {\n    messages.splice(i, 1);\n    setPathToValue(path, 'messages', messages);\n  };\n\n  const setNumberField = (value, index) => {\n    const parsed = parseInt(value);\n    const newVal = messages[index];\n\n    if (!isNaN(parsed)) {\n      newVal.threshold = parsed;\n    } else if (value === '' || value === '-') {\n      newVal.threshold = value;\n    } else {\n      newVal.threshold = 0;\n    }\n\n    setPathToValue(thresholdPath, index, newVal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames.InspectorElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: addChoice,\n    className: classNames.InspectorElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Add\"), messages.map((message, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `message-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: message.text,\n      className: classNames.InspectorElement,\n      label: \"Message\",\n      onChange: event => setPathToValue(path.concat('messages', i) || [], 'text', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Minimum points\",\n      value: message.threshold,\n      className: classNames.InspectorElement,\n      onChange: event => setNumberField(event.target.value, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => deleteChoice(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.deleteStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }))));\n  }));\n};\n\nexport default AnswerFragment;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/PointsFragment.js"],"names":["React","makeStyles","Button","IconButton","Divider","TextField","useEditor","DeleteIcon","useStyles","theme","root","overflow","inputRoot","paddingRight","spacing","divider","marginTop","FormSelect","deleteStyle","AnswerFragment","classNames","path","fragmentSpecificProps","classes","getFromPath","setPathToValue","pathAlternative","valToChange","concat","messages","thresholdPath","addChoice","threshold","text","deleteChoice","i","splice","setNumberField","value","index","parsed","parseInt","newVal","isNaN","InspectorElement","map","message","display","alignItems","event","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,UAA7B,EAAyCC,OAAzC,EAAkDC,SAAlD,QAAmE,mBAAnE;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADL,GAJ0B;AAOrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AADJ,GAP4B;AAUrCG,EAAAA,UAAU,EAAE;AACVD,IAAAA,SAAS,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AADD,GAVyB;AAarCI,EAAAA,WAAW,EAAE;AACXF,IAAAA,SAAS,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AADA;AAbwB,CAAL,CAAN,CAA5B;;AAkBA,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAD,KAAiD;AACtE,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCnB,SAAS,EAAjD;AACA,QAAM;AAAEoB,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAmCL,qBAAzC,CAHsE,CAKtE;;AACAD,EAAAA,IAAI,GAAGK,eAAe,GAAGL,IAAI,CAACO,MAAL,CAAYF,eAAZ,CAAH,GAAkCL,IAAI,IAAI,EAAhE;AACA,QAAMQ,QAAQ,GAAGL,WAAW,CAACH,IAAD,CAAX,CAAkBM,WAAlB,CAAjB;AACA,QAAMG,aAAa,GAAGT,IAAI,CAACO,MAAL,CAAYD,WAAZ,CAAtB;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBN,IAAAA,cAAc,CAACJ,IAAD,EAAO,UAAP,EAAmB,CAAC,GAAGQ,QAAJ,EAAc;AAAEG,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KAAd,CAAnB,CAAd;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBN,IAAAA,QAAQ,CAACO,MAAT,CAAgBD,CAAhB,EAAmB,CAAnB;AACAV,IAAAA,cAAc,CAACJ,IAAD,EAAO,UAAP,EAAmBQ,QAAnB,CAAd;AACD,GAHD;;AAKA,QAAMQ,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvC,UAAMC,MAAM,GAAGC,QAAQ,CAACH,KAAD,CAAvB;AAEA,UAAMI,MAAM,GAAGb,QAAQ,CAACU,KAAD,CAAvB;;AACA,QAAI,CAACI,KAAK,CAACH,MAAD,CAAV,EAAoB;AAClBE,MAAAA,MAAM,CAACV,SAAP,GAAmBQ,MAAnB;AACD,KAFD,MAEO,IAAIF,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;AACxCI,MAAAA,MAAM,CAACV,SAAP,GAAmBM,KAAnB;AACD,KAFM,MAEA;AACLI,MAAAA,MAAM,CAACV,SAAP,GAAmB,CAAnB;AACD;;AAEDP,IAAAA,cAAc,CAACK,aAAD,EAAgBS,KAAhB,EAAuBG,MAAvB,CAAd;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAEtB,UAAU,CAACwB,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAEb,SAHX;AAIE,IAAA,SAAS,EAAEX,UAAU,CAACwB,gBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EASGf,QAAQ,CAACgB,GAAT,CAAa,CAACC,OAAD,EAAUX,CAAV,KAAgB;AAC5B,wBACE;AAAK,MAAA,GAAG,EAAG,WAAUA,CAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEZ,OAAO,CAACR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEgC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEF,OAAO,CAACb,IADjB;AAEE,MAAA,SAAS,EAAEb,UAAU,CAACwB,gBAFxB;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EAAEK,KAAK,IACbxB,cAAc,CACZJ,IAAI,CAACO,MAAL,CAAY,UAAZ,EAAwBO,CAAxB,KAA8B,EADlB,EAEZ,MAFY,EAGZc,KAAK,CAACC,MAAN,CAAaZ,KAHD,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAaE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,KAAK,EAAEQ,OAAO,CAACd,SAFjB;AAGE,MAAA,SAAS,EAAEZ,UAAU,CAACwB,gBAHxB;AAIE,MAAA,QAAQ,EAAEK,KAAK,IAAIZ,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaZ,KAAd,EAAqBH,CAArB,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEZ,OAAO,CAACL,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAtBF,CADF;AA8BD,GA/BA,CATH,CADF;AA4CD,CA7ED;;AA+EA,eAAeC,cAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, Button, IconButton, Divider, TextField } from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'auto',\n  },\n  inputRoot: {\n    paddingRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n  FormSelect: {\n    marginTop: theme.spacing(2),\n  },\n  deleteStyle: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst AnswerFragment = ({ classNames, path, fragmentSpecificProps }) => {\n  const classes = useStyles();\n  const { getFromPath, setPathToValue } = useEditor();\n  const { pathAlternative, valToChange } = fragmentSpecificProps;\n\n  //Additional field to modify objects or array\n  path = pathAlternative ? path.concat(pathAlternative) : path || [];\n  const messages = getFromPath(path)[valToChange];\n  const thresholdPath = path.concat(valToChange);\n\n  const addChoice = () => {\n    setPathToValue(path, 'messages', [...messages, { threshold: 0, text: '' }]);\n  };\n  const deleteChoice = i => {\n    messages.splice(i, 1);\n    setPathToValue(path, 'messages', messages);\n  };\n\n  const setNumberField = (value, index) => {\n    const parsed = parseInt(value);\n\n    const newVal = messages[index];\n    if (!isNaN(parsed)) {\n      newVal.threshold = parsed;\n    } else if (value === '' || value === '-') {\n      newVal.threshold = value;\n    } else {\n      newVal.threshold = 0;\n    }\n\n    setPathToValue(thresholdPath, index, newVal);\n  };\n\n  return (\n    <div className={classNames.InspectorElement}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={addChoice}\n        className={classNames.InspectorElement}\n      >\n        Add\n      </Button>\n      {messages.map((message, i) => {\n        return (\n          <div key={`message-${i}`}>\n            <Divider className={classes.divider} />\n            <div style={{ display: 'flex', alignItems: 'bottom' }}>\n              <TextField\n                value={message.text}\n                className={classNames.InspectorElement}\n                label=\"Message\"\n                onChange={event =>\n                  setPathToValue(\n                    path.concat('messages', i) || [],\n                    'text',\n                    event.target.value\n                  )\n                }\n              />\n              <TextField\n                label=\"Minimum points\"\n                value={message.threshold}\n                className={classNames.InspectorElement}\n                onChange={event => setNumberField(event.target.value, i)}\n              />\n            </div>\n            <div>\n              <IconButton onClick={() => deleteChoice(i)}>\n                <DeleteIcon className={classes.deleteStyle}></DeleteIcon>\n              </IconButton>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AnswerFragment;\n"]},"metadata":{},"sourceType":"module"}