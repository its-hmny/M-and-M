{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/AnswerFragmentImages.js\";\nimport React from 'react';\nimport { makeStyles, Button, IconButton, Divider, MenuItem, Select, FormControl, InputLabel, TextField } from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\nimport CheckboxFragment from './CheckboxFragment';\nimport RadioFragment from './RadioFragment';\nimport shortid from 'shortid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilePickerFragment from './FilePickerFragment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'auto'\n  },\n  inputRoot: {\n    paddingRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  },\n  FormSelect: {\n    marginTop: theme.spacing(2)\n  },\n  deleteStyle: {\n    marginTop: theme.spacing(1)\n  }\n}));\nconst ANSWER_VALUE = {\n  CORRECT: '[CORRECT]',\n  WRONG: '[WRONG]'\n};\n\nconst AnswerFragmentImages = ({\n  classNames,\n  path,\n  fragmentSpecificProps\n}) => {\n  const {\n    divider,\n    FormSelect,\n    deleteStyle\n  } = useStyles();\n  const {\n    pathAlternative,\n    valToChange,\n    singleCorrectAnswer,\n    selectPath,\n    correctStory,\n    wrongStory,\n    data,\n    dataName,\n    correctLabel,\n    wrongLabel\n  } = fragmentSpecificProps;\n  const {\n    story,\n    getFromPath,\n    setPathToValue\n  } = useEditor();\n  const [correctAnswerValue, setCorrectAnswerValue] = React.useState([]); //Additional field to modify objects or array\n\n  path = pathAlternative ? path.concat(pathAlternative) : path || [];\n  const answers = getFromPath(path)[valToChange];\n  const pointsPath = path.concat(valToChange);\n  const selectCompletePath = path.concat(selectPath);\n  const correctSelectValue = getFromPath(selectCompletePath)[correctStory];\n  const wrongSelectValue = getFromPath(selectCompletePath)[wrongStory];\n  var items = [];\n  const menuItems = story.nodes.map(node => {\n    if (!items.includes(node[data])) {\n      items.push(node[data]);\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: node[data],\n        value: node[data],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, node[dataName]);\n    }\n\n    return null;\n  }); //Initialize correctAnswerValue if singleCorrectAnswer == true only the first time\n\n  React.useEffect(() => {\n    if (singleCorrectAnswer) {\n      answers.map((answer, i) => answer.value === ANSWER_VALUE.CORRECT ? setCorrectAnswerValue(i) : null);\n    }\n  }, [singleCorrectAnswer, answers]);\n\n  const addChoice = () => {\n    setPathToValue(path, 'answers', [...answers, {\n      value: ANSWER_VALUE.WRONG,\n      id: shortid.generate(),\n      imgURL: 'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png',\n      alt: 'image alt'\n    }]);\n  };\n\n  const deleteChoice = i => {\n    answers.splice(i, 1);\n    setPathToValue(path, 'answers', answers);\n  };\n\n  var cannotChooseCorrectAnswer = singleCorrectAnswer ? answers.filter(answer => answer.value === ANSWER_VALUE.CORRECT).length === 1 : false;\n  const name = shortid.generate();\n\n  const checkSingleAnswer = (event, value, answerPath, truthValues) => {\n    const oldAnswerPath = [...answerPath.slice(0, -1), correctAnswerValue];\n    setPathToValue(oldAnswerPath, 'value', truthValues !== undefined ? truthValues[1] : false);\n    setCorrectAnswerValue(value);\n    setPathToValue(answerPath, 'value', event.target.checked ? truthValues !== undefined ? truthValues[0] : true : truthValues !== undefined ? truthValues[1] : false);\n  };\n\n  const setNumberField = (value, index) => {\n    const parsed = parseInt(value);\n    const newVal = answers[index];\n\n    if (!isNaN(parsed)) {\n      newVal.points = parsed;\n    } else if (value === '' || value === '-') {\n      newVal.points = value;\n    } else {\n      newVal.points = 0;\n    }\n\n    setPathToValue(pointsPath, index, newVal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames.InspectorElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: addChoice,\n    className: classNames.InspectorElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Add\"), answers.map((answer, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `answer-${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      className: divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FilePickerFragment, {\n      key: `filepicker-answer-${i}`,\n      className: classNames.InspectorElement,\n      classNames: classNames,\n      path: path.concat('answers', i),\n      fragmentSpecificProps: {\n        acceptedFileType: 'image/*',\n        buttonLabel: 'Upload Image',\n        valToChange: 'imgURL'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'bottom'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: answers[i].alt,\n      className: classNames.InspectorElement,\n      label: 'Alt text',\n      onChange: event => setPathToValue(path.concat('answers', i) || [], 'alt', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => deleteChoice(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: deleteStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(TextField, {\n      label: 'Answer points',\n      value: answer.points,\n      className: classNames.InspectorElement,\n      onChange: event => setNumberField(event.target.value, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }), singleCorrectAnswer ? /*#__PURE__*/React.createElement(RadioFragment, {\n      classNames: classNames,\n      path: path,\n      fragmentSpecificProps: {\n        label: 'Correct Answer',\n        pathAlternative: ['answers', i],\n        valToChange: 'value',\n        onChange: checkSingleAnswer,\n        truthValues: [ANSWER_VALUE.CORRECT, ANSWER_VALUE.WRONG],\n        name: name,\n        correctAnswerValue: correctAnswerValue,\n        index: i\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(CheckboxFragment, {\n      classNames: classNames,\n      path: path,\n      fragmentSpecificProps: {\n        label: 'Correct Answer',\n        pathAlternative: ['answers', i],\n        valToChange: 'value',\n        truthValues: [ANSWER_VALUE.CORRECT, ANSWER_VALUE.WRONG],\n        disabled: answer.value === ANSWER_VALUE.CORRECT ? false : cannotChooseCorrectAnswer\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: `${classNames.FormControl} ${FormSelect} ${classNames.InspectorElement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, correctLabel), /*#__PURE__*/React.createElement(Select, {\n    value: correctSelectValue,\n    onChange: event => setPathToValue(selectCompletePath, correctStory, event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, menuItems, /*#__PURE__*/React.createElement(MenuItem, {\n    key: story.nodes.length,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, '\\u00A0'))), /*#__PURE__*/React.createElement(FormControl, {\n    className: `${classNames.FormControl} ${FormSelect} ${classNames.InspectorElement}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, wrongLabel), /*#__PURE__*/React.createElement(Select, {\n    value: wrongSelectValue,\n    onChange: event => setPathToValue(selectCompletePath, wrongStory, event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, menuItems, /*#__PURE__*/React.createElement(MenuItem, {\n    key: story.nodes.length,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, '\\u00A0'))));\n};\n\nexport default AnswerFragmentImages;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/AnswerFragmentImages.js"],"names":["React","makeStyles","Button","IconButton","Divider","MenuItem","Select","FormControl","InputLabel","TextField","useEditor","CheckboxFragment","RadioFragment","shortid","DeleteIcon","FilePickerFragment","useStyles","theme","root","overflow","inputRoot","paddingRight","spacing","divider","marginTop","FormSelect","deleteStyle","ANSWER_VALUE","CORRECT","WRONG","AnswerFragmentImages","classNames","path","fragmentSpecificProps","pathAlternative","valToChange","singleCorrectAnswer","selectPath","correctStory","wrongStory","data","dataName","correctLabel","wrongLabel","story","getFromPath","setPathToValue","correctAnswerValue","setCorrectAnswerValue","useState","concat","answers","pointsPath","selectCompletePath","correctSelectValue","wrongSelectValue","items","menuItems","nodes","map","node","includes","push","useEffect","answer","i","value","addChoice","id","generate","imgURL","alt","deleteChoice","splice","cannotChooseCorrectAnswer","filter","length","name","checkSingleAnswer","event","answerPath","truthValues","oldAnswerPath","slice","undefined","target","checked","setNumberField","index","parsed","parseInt","newVal","isNaN","points","InspectorElement","acceptedFileType","buttonLabel","display","alignItems","label","onChange","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n  Button,\n  IconButton,\n  Divider,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  TextField,\n} from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\nimport CheckboxFragment from './CheckboxFragment';\nimport RadioFragment from './RadioFragment';\nimport shortid from 'shortid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilePickerFragment from './FilePickerFragment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'auto',\n  },\n  inputRoot: {\n    paddingRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n  FormSelect: {\n    marginTop: theme.spacing(2),\n  },\n  deleteStyle: {\n    marginTop: theme.spacing(1),\n  },\n}));\nconst ANSWER_VALUE = {\n  CORRECT: '[CORRECT]',\n  WRONG: '[WRONG]',\n};\nconst AnswerFragmentImages = ({ classNames, path, fragmentSpecificProps }) => {\n  const { divider, FormSelect, deleteStyle } = useStyles();\n  const {\n    pathAlternative,\n    valToChange,\n    singleCorrectAnswer,\n    selectPath,\n    correctStory,\n    wrongStory,\n    data,\n    dataName,\n    correctLabel,\n    wrongLabel,\n  } = fragmentSpecificProps;\n  const { story, getFromPath, setPathToValue } = useEditor();\n  const [correctAnswerValue, setCorrectAnswerValue] = React.useState([]);\n\n  //Additional field to modify objects or array\n  path = pathAlternative ? path.concat(pathAlternative) : path || [];\n  const answers = getFromPath(path)[valToChange];\n  const pointsPath = path.concat(valToChange);\n  const selectCompletePath = path.concat(selectPath);\n  const correctSelectValue = getFromPath(selectCompletePath)[correctStory];\n  const wrongSelectValue = getFromPath(selectCompletePath)[wrongStory];\n\n  var items = [];\n  const menuItems = story.nodes.map(node => {\n    if (!items.includes(node[data])) {\n      items.push(node[data]);\n      return (\n        <MenuItem key={node[data]} value={node[data]}>\n          {node[dataName]}\n        </MenuItem>\n      );\n    }\n\n    return null;\n  });\n\n  //Initialize correctAnswerValue if singleCorrectAnswer == true only the first time\n  React.useEffect(() => {\n    if (singleCorrectAnswer) {\n      answers.map((answer, i) =>\n        answer.value === ANSWER_VALUE.CORRECT ? setCorrectAnswerValue(i) : null\n      );\n    }\n  }, [singleCorrectAnswer, answers]);\n\n  const addChoice = () => {\n    setPathToValue(path, 'answers', [\n      ...answers,\n      {\n        value: ANSWER_VALUE.WRONG,\n        id: shortid.generate(),\n        imgURL: 'https://lunawood.com/wp-content/uploads/2018/02/placeholder-image.png',\n        alt: 'image alt',\n      },\n    ]);\n  };\n  const deleteChoice = i => {\n    answers.splice(i, 1);\n    setPathToValue(path, 'answers', answers);\n  };\n\n  var cannotChooseCorrectAnswer = singleCorrectAnswer\n    ? answers.filter(answer => answer.value === ANSWER_VALUE.CORRECT).length === 1\n    : false;\n  const name = shortid.generate();\n\n  const checkSingleAnswer = (event, value, answerPath, truthValues) => {\n    const oldAnswerPath = [...answerPath.slice(0, -1), correctAnswerValue];\n    setPathToValue(\n      oldAnswerPath,\n      'value',\n      truthValues !== undefined ? truthValues[1] : false\n    );\n    setCorrectAnswerValue(value);\n    setPathToValue(\n      answerPath,\n      'value',\n      event.target.checked\n        ? truthValues !== undefined\n          ? truthValues[0]\n          : true\n        : truthValues !== undefined\n        ? truthValues[1]\n        : false\n    );\n  };\n\n  const setNumberField = (value, index) => {\n    const parsed = parseInt(value);\n\n    const newVal = answers[index];\n    if (!isNaN(parsed)) {\n      newVal.points = parsed;\n    } else if (value === '' || value === '-') {\n      newVal.points = value;\n    } else {\n      newVal.points = 0;\n    }\n\n    setPathToValue(pointsPath, index, newVal);\n  };\n  return (\n    <div className={classNames.InspectorElement}>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={addChoice}\n        className={classNames.InspectorElement}\n      >\n        Add\n      </Button>\n      {answers.map((answer, i) => {\n        return (\n          <div key={`answer-${i}`}>\n            <Divider className={divider} />\n            <FilePickerFragment\n              key={`filepicker-answer-${i}`}\n              className={classNames.InspectorElement}\n              classNames={classNames}\n              path={path.concat('answers', i)}\n              fragmentSpecificProps={{\n                acceptedFileType: 'image/*',\n                buttonLabel: 'Upload Image',\n                valToChange: 'imgURL',\n              }}\n            />\n            <div style={{ display: 'flex', alignItems: 'bottom' }}>\n              <TextField\n                value={answers[i].alt}\n                className={classNames.InspectorElement}\n                label={'Alt text'}\n                onChange={event =>\n                  setPathToValue(\n                    path.concat('answers', i) || [],\n                    'alt',\n                    event.target.value\n                  )\n                }\n              />\n              <IconButton onClick={() => deleteChoice(i)}>\n                <DeleteIcon className={deleteStyle}></DeleteIcon>\n              </IconButton>\n            </div>\n            <TextField\n              label={'Answer points'}\n              value={answer.points}\n              className={classNames.InspectorElement}\n              onChange={event => setNumberField(event.target.value, i)}\n            />\n            {singleCorrectAnswer ? (\n              <RadioFragment\n                classNames={classNames}\n                path={path}\n                fragmentSpecificProps={{\n                  label: 'Correct Answer',\n                  pathAlternative: ['answers', i],\n                  valToChange: 'value',\n                  onChange: checkSingleAnswer,\n                  truthValues: [ANSWER_VALUE.CORRECT, ANSWER_VALUE.WRONG],\n                  name: name,\n                  correctAnswerValue: correctAnswerValue,\n                  index: i,\n                }}\n              />\n            ) : (\n              <CheckboxFragment\n                classNames={classNames}\n                path={path}\n                fragmentSpecificProps={{\n                  label: 'Correct Answer',\n                  pathAlternative: ['answers', i],\n                  valToChange: 'value',\n                  truthValues: [ANSWER_VALUE.CORRECT, ANSWER_VALUE.WRONG],\n                  disabled:\n                    answer.value === ANSWER_VALUE.CORRECT\n                      ? false\n                      : cannotChooseCorrectAnswer,\n                }}\n              />\n            )}\n          </div>\n        );\n      })}\n      <Divider />\n      <FormControl\n        className={`${classNames.FormControl} ${FormSelect} ${classNames.InspectorElement}`}\n      >\n        <InputLabel>{correctLabel}</InputLabel>\n        <Select\n          value={correctSelectValue}\n          onChange={event =>\n            setPathToValue(selectCompletePath, correctStory, event.target.value)\n          }\n        >\n          {menuItems}\n          <MenuItem key={story.nodes.length} value=\"\">\n            {'\\u00A0'}\n          </MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl\n        className={`${classNames.FormControl} ${FormSelect} ${classNames.InspectorElement}`}\n      >\n        <InputLabel>{wrongLabel}</InputLabel>\n        <Select\n          value={wrongSelectValue}\n          onChange={event =>\n            setPathToValue(selectCompletePath, wrongStory, event.target.value)\n          }\n        >\n          {menuItems}\n          <MenuItem key={story.nodes.length} value=\"\">\n            {'\\u00A0'}\n          </MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default AnswerFragmentImages;\n"]},"metadata":{},"sourceType":"module"}