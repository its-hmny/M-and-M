{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/SaveButton.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport { Fab, CircularProgress } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport axios from './shared';\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative'\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  buttonFailure: {\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700]\n    }\n  },\n  fabProgress: {\n    color: 'black',\n    marginRight: '10px',\n    zIndex: 1\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst useInterval = (callback, delay) => {\n  const savedCallbackRef = useRef();\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    const handler = (...args) => savedCallbackRef.current(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nconst SaveButton = ({\n  story\n}) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const resetTimer = useRef();\n  useEffect(() => {\n    return () => {\n      clearTimeout(resetTimer.current);\n    };\n  }, []);\n  useInterval(() => uploadStory(), 30000);\n\n  const uploadStory = async () => {\n    if (!loading) {\n      setSuccess(false);\n      setFailure(false);\n      setLoading(true);\n\n      try {\n        const res = await axios.patch(`stories/${story.uuid}`, story);\n\n        if (res.data.status) {\n          setSuccess(true);\n          resetTimer.current = setTimeout(() => {\n            setSuccess(false);\n          }, 3000);\n        }\n      } catch (err) {\n        setFailure(true);\n        resetTimer.current = setTimeout(() => {\n          setFailure(false);\n        }, 3000);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    className: success ? classes.buttonSuccess : failure ? classes.buttonFailure : '',\n    onClick: uploadStory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }) : failure ? /*#__PURE__*/React.createElement(ErrorIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }) : loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.fabProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(SaveIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), success ? 'Saved' : failure ? 'Failed' : loading ? 'Saving' : 'Save Story'));\n};\n\nexport default SaveButton;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/SaveButton.js"],"names":["React","useEffect","useState","useRef","makeStyles","green","red","Fab","CircularProgress","CheckIcon","SaveIcon","ErrorIcon","axios","useStyles","theme","wrapper","position","buttonSuccess","backgroundColor","buttonFailure","fabProgress","color","marginRight","zIndex","icon","spacing","useInterval","callback","delay","savedCallbackRef","current","handler","args","intervalId","setInterval","clearInterval","SaveButton","story","classes","loading","setLoading","success","setSuccess","failure","setFailure","resetTimer","clearTimeout","uploadStory","res","patch","uuid","data","status","setTimeout","err","console","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport { Fab, CircularProgress } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport axios from './shared';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  buttonFailure: {\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n  fabProgress: {\n    color: 'black',\n    marginRight: '10px',\n    zIndex: 1,\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst useInterval = (callback, delay) => {\n  const savedCallbackRef = useRef();\n\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const handler = (...args) => savedCallbackRef.current(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nconst SaveButton = ({ story }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [failure, setFailure] = useState(false);\n  const resetTimer = useRef();\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(resetTimer.current);\n    };\n  }, []);\n\n  useInterval(() => uploadStory(), 30000);\n\n  const uploadStory = async () => {\n    if (!loading) {\n      setSuccess(false);\n      setFailure(false);\n      setLoading(true);\n      try {\n        const res = await axios.patch(`stories/${story.uuid}`, story);\n        if (res.data.status) {\n          setSuccess(true);\n          resetTimer.current = setTimeout(() => {\n            setSuccess(false);\n          }, 3000);\n        }\n      } catch (err) {\n        setFailure(true);\n        resetTimer.current = setTimeout(() => {\n          setFailure(false);\n        }, 3000);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <Fab\n        variant=\"extended\"\n        color=\"primary\"\n        className={success ? classes.buttonSuccess : failure ? classes.buttonFailure : ''}\n        onClick={uploadStory}\n      >\n        {success ? (\n          <CheckIcon className={classes.icon} />\n        ) : failure ? (\n          <ErrorIcon className={classes.icon} />\n        ) : loading ? (\n          <CircularProgress size={24} className={classes.fabProgress} />\n        ) : (\n          <SaveIcon className={classes.icon} />\n        )}\n        {success ? 'Saved' : failure ? 'Failed' : loading ? 'Saving' : 'Save Story'}\n      </Fab>\n    </div>\n  );\n};\n\nexport default SaveButton;\n"]},"metadata":{},"sourceType":"module"}