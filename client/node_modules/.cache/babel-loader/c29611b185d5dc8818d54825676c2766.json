{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Publisher/Form.js\";\nimport React from 'react';\nimport { makeStyles, FormControl, Checkbox, Radio, TextField, FormControlLabel, FormGroup, Typography, colors, Button } from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport logo from '../assets/logo.png';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { CLIENT_URL } from '../common/constants';\nimport SaveButton from '../common/SaveButton';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(3)\n  },\n  formElements: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  boxes: {\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    '& > *': {\n      marginRight: theme.spacing(6)\n    }\n  },\n  saveButton: {\n    textAlign: 'right'\n  },\n  detailContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    '& > *': {\n      flex: '1 1 50%'\n    }\n  },\n  qrcode: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    '& > :first-child': {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2)\n    }\n  },\n  downloadButton: {}\n}));\n\nconst Form = ({\n  story,\n  handleChange\n}) => {\n  const classes = useStyles();\n\n  const handleChecks = (propName, value, isOn) => {\n    handleChange(propName, isOn ? [...story[propName], value] : story[propName].filter(item => item !== value));\n  };\n\n  const downloadQrCode = () => {\n    // create SVG string from HTML\n    const qrcode = document.getElementById('qrcode');\n    const href = qrcode.toDataURL('image/png');\n    const link = document.createElement('a');\n    link.download = `${story.title}-qrcode.png`;\n    link.href = href;\n    link.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formElements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"filled\",\n    color: \"secondary\",\n    value: story.title,\n    onChange: e => {\n      handleChange('title', e.target.value);\n    },\n    label: 'Title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formElements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"filled\",\n    color: \"secondary\",\n    value: story.description,\n    onChange: e => handleChange('description', e.target.value),\n    label: \"Description\",\n    placeholder: \"Write down some intriguing lines to persuade players to choose your story\",\n    multiline: true,\n    rows: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formElements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Who is this story suitable for?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.boxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.targets || []).includes('children'),\n      onChange: evt => handleChecks('targets', 'children', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }\n    }, \"Children\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.targets || []).includes('teen'),\n      onChange: evt => handleChecks('targets', 'teen', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 26\n      }\n    }, \"Teen\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.targets || []).includes('adult'),\n      onChange: evt => handleChecks('targets', 'adult', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 26\n      }\n    }, \"Young Adults\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formElements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"What game modes are available for this story?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.boxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.modes || []).includes('singleplayer'),\n      onChange: evt => handleChecks('modes', 'singleplayer', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 26\n      }\n    }, \"Single Player\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.modes || []).includes('multiplayer'),\n      onChange: evt => handleChecks('modes', 'multiplayer', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 26\n      }\n    }, \"Multiplayer\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: (story.modes || []).includes('teams'),\n      onChange: evt => handleChecks('modes', 'teams', evt.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 26\n      }\n    }, \"Teams\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formElements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Could your story be played by people with disabilities?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.boxes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      checked: !story.accessible,\n      onChange: () => handleChange('accessible', false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      checked: story.accessible,\n      onChange: () => handleChange('accessible', true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.qrcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    id: \"qrcode\",\n    value: `${CLIENT_URL}/player?storyId=${story.uuid}`,\n    renderAs: \"canvas\",\n    bgColor: \"transparent\",\n    fgColor: colors.orange[500],\n    size: 256,\n    imageSettings: {\n      src: logo,\n      x: null,\n      y: null,\n      height: 44,\n      width: 44,\n      excavate: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.downloadButton,\n    startIcon: /*#__PURE__*/React.createElement(GetAppIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 24\n      }\n    }),\n    onClick: downloadQrCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Download QR\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.saveButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SaveButton, {\n    story: story,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Publisher/Form.js"],"names":["React","makeStyles","FormControl","Checkbox","Radio","TextField","FormControlLabel","FormGroup","Typography","colors","Button","QRCode","logo","GetAppIcon","CLIENT_URL","SaveButton","useStyles","theme","form","position","width","display","flexDirection","padding","spacing","formElements","margin","minWidth","boxes","marginLeft","marginRight","saveButton","textAlign","detailContainer","flexGrow","flex","qrcode","alignItems","marginTop","marginBottom","downloadButton","Form","story","handleChange","classes","handleChecks","propName","value","isOn","filter","item","downloadQrCode","document","getElementById","href","toDataURL","link","createElement","download","title","click","e","target","description","details","targets","includes","evt","checked","modes","accessible","uuid","orange","src","x","y","height","excavate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles,\n  FormControl,\n  Checkbox,\n  Radio,\n  TextField,\n  FormControlLabel,\n  FormGroup,\n  Typography,\n  colors,\n  Button,\n} from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport logo from '../assets/logo.png';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { CLIENT_URL } from '../common/constants';\n\nimport SaveButton from '../common/SaveButton';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    position: 'relative',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(3),\n  },\n  formElements: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  boxes: {\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    '& > *': {\n      marginRight: theme.spacing(6),\n    },\n  },\n  saveButton: {\n    textAlign: 'right',\n  },\n  detailContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    '& > *': {\n      flex: '1 1 50%',\n    },\n  },\n  qrcode: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    '& > :first-child': {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n  },\n  downloadButton: {},\n}));\n\nconst Form = ({ story, handleChange }) => {\n  const classes = useStyles();\n\n  const handleChecks = (propName, value, isOn) => {\n    handleChange(\n      propName,\n      isOn ? [...story[propName], value] : story[propName].filter(item => item !== value)\n    );\n  };\n\n  const downloadQrCode = () => {\n    // create SVG string from HTML\n    const qrcode = document.getElementById('qrcode');\n    const href = qrcode.toDataURL('image/png');\n    const link = document.createElement('a');\n    link.download = `${story.title}-qrcode.png`;\n    link.href = href;\n    link.click();\n  };\n\n  return (\n    <div className={classes.form}>\n      <FormControl className={classes.formElements}>\n        <TextField\n          variant=\"filled\"\n          color=\"secondary\"\n          value={story.title}\n          onChange={e => {\n            handleChange('title', e.target.value);\n          }}\n          label={'Title'}\n        />\n      </FormControl>\n      <FormControl className={classes.formElements}>\n        <TextField\n          fullWidth\n          variant=\"filled\"\n          color=\"secondary\"\n          value={story.description}\n          onChange={e => handleChange('description', e.target.value)}\n          label=\"Description\"\n          placeholder=\"Write down some intriguing lines to persuade players to choose your story\"\n          multiline\n          rows={5}\n        />\n      </FormControl>\n      <div className={classes.detailContainer}>\n        <div className={classes.details}>\n          <FormControl variant=\"outlined\" className={classes.formElements}>\n            <FormGroup>\n              <Typography>Who is this story suitable for?</Typography>\n              <div className={classes.boxes}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.targets || []).includes('children')}\n                      onChange={evt =>\n                        handleChecks('targets', 'children', evt.target.checked)\n                      }\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Children</Typography>}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.targets || []).includes('teen')}\n                      onChange={evt =>\n                        handleChecks('targets', 'teen', evt.target.checked)\n                      }\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Teen</Typography>}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.targets || []).includes('adult')}\n                      onChange={evt =>\n                        handleChecks('targets', 'adult', evt.target.checked)\n                      }\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Young Adults</Typography>}\n                />\n              </div>\n            </FormGroup>\n          </FormControl>\n          <FormControl variant=\"outlined\" className={classes.formElements}>\n            <FormGroup>\n              <Typography>What game modes are available for this story?</Typography>\n              <div className={classes.boxes}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.modes || []).includes('singleplayer')}\n                      onChange={evt =>\n                        handleChecks('modes', 'singleplayer', evt.target.checked)\n                      }\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Single Player</Typography>}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.modes || []).includes('multiplayer')}\n                      onChange={evt =>\n                        handleChecks('modes', 'multiplayer', evt.target.checked)\n                      }\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Multiplayer</Typography>}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={(story.modes || []).includes('teams')}\n                      onChange={evt => handleChecks('modes', 'teams', evt.target.checked)}\n                    />\n                  }\n                  label={<Typography variant=\"body2\">Teams</Typography>}\n                />\n              </div>\n            </FormGroup>\n          </FormControl>\n          <FormControl className={classes.formElements}>\n            <Typography>\n              Could your story be played by people with disabilities?\n            </Typography>\n            <div className={classes.boxes}>\n              <FormControlLabel\n                label=\"No\"\n                control={\n                  <Radio\n                    checked={!story.accessible}\n                    onChange={() => handleChange('accessible', false)}\n                  />\n                }\n              />\n              <FormControlLabel\n                label=\"Yes\"\n                control={\n                  <Radio\n                    checked={story.accessible}\n                    onChange={() => handleChange('accessible', true)}\n                  />\n                }\n              />\n            </div>\n          </FormControl>\n        </div>\n        <div className={classes.qrcode}>\n          <QRCode\n            id=\"qrcode\"\n            value={`${CLIENT_URL}/player?storyId=${story.uuid}`}\n            renderAs=\"canvas\"\n            bgColor=\"transparent\"\n            fgColor={colors.orange[500]}\n            size={256}\n            imageSettings={{\n              src: logo,\n              x: null,\n              y: null,\n              height: 44,\n              width: 44,\n              excavate: true,\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.downloadButton}\n            startIcon={<GetAppIcon />}\n            onClick={downloadQrCode}\n          >\n            Download QR\n          </Button>\n        </div>\n      </div>\n      <div className={classes.saveButton}>\n        <SaveButton story={story} />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}