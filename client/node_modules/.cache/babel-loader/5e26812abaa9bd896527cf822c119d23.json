{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/Elements/TextArea.js\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nconst base = css`\n  margin: 5px;\n  border-radius: 5px;\n  padding: 7px;\n  border: 1px solid #ccc;\n  box-shadow: inset 0 1px 3px #ddd;\n  width: 95%;\n`;\nconst buttonCSS = css`\n  padding: 0.5rem 1rem;\n  border: none;\n\n  font-size: 1rem;\n  cursor: pointer;\n  margin: 5px;\n`;\nconst labelCSS = css`\n  padding: 5px;\n  margin-right: 6px;\n  margin: 5px;\n  width: 95%;\n`;\n\nconst noop = () => {};\n\nconst id = shortid.generate();\n\nconst TextArea = ({\n  label,\n  rows,\n  onSubmit = noop,\n  initialValue = '',\n  style\n}) => {\n  const [value, setValue] = useState('');\n  useEffect(() => setValue(initialValue), [initialValue]);\n  return jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, jsx(\"label\", {\n    htmlFor: id,\n    css: [labelCSS, style['Label']],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, label, \"*\"), jsx(\"textarea\", {\n    id: id,\n    css: [base, style],\n    rows: rows,\n    value: value,\n    onChange: evt => setValue(evt.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), jsx(\"button\", {\n    onClick: () => onSubmit(value),\n    css: [buttonCSS, style['Button']],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Invia risposta\"));\n};\n\nexport default TextArea;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/Elements/TextArea.js"],"names":["css","jsx","useEffect","useState","shortid","base","buttonCSS","labelCSS","noop","id","generate","TextArea","label","rows","onSubmit","initialValue","style","value","setValue","evt","target"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,IAAI,GAAGL,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMM,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMO,QAAQ,GAAGP,GAAI;AACrB;AACA;AACA;AACA;AACA,CALA;;AAMA,MAAMQ,IAAI,GAAG,MAAM,CAAE,CAArB;;AACA,MAAMC,EAAE,GAAGL,OAAO,CAACM,QAAR,EAAX;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,QAAQ,GAAGN,IAA1B;AAAgCO,EAAAA,YAAY,GAAG,EAA/C;AAAmDC,EAAAA;AAAnD,CAAD,KAAgE;AAC/E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAMgB,QAAQ,CAACH,YAAD,CAAf,EAA+B,CAACA,YAAD,CAA/B,CAAT;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEN,EAAhB;AAAoB,IAAA,GAAG,EAAE,CAACF,QAAD,EAAWS,KAAK,CAAC,OAAD,CAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,MADF,EAIE;AACE,IAAA,EAAE,EAAEH,EADN;AAEE,IAAA,GAAG,EAAE,CAACJ,IAAD,EAAOW,KAAP,CAFP;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,KAAK,EAAEI,KAJT;AAKE,IAAA,QAAQ,EAAEE,GAAG,IAAID,QAAQ,CAACC,GAAG,CAACC,MAAJ,CAAWH,KAAZ,CAL3B;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaE;AAAQ,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACG,KAAD,CAA/B;AAAwC,IAAA,GAAG,EAAE,CAACX,SAAD,EAAYU,KAAK,CAAC,QAAD,CAAjB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,CADF;AAmBD,CAvBD;;AAyBA,eAAeL,QAAf","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\n\nconst base = css`\n  margin: 5px;\n  border-radius: 5px;\n  padding: 7px;\n  border: 1px solid #ccc;\n  box-shadow: inset 0 1px 3px #ddd;\n  width: 95%;\n`;\n\nconst buttonCSS = css`\n  padding: 0.5rem 1rem;\n  border: none;\n\n  font-size: 1rem;\n  cursor: pointer;\n  margin: 5px;\n`;\n\nconst labelCSS = css`\n  padding: 5px;\n  margin-right: 6px;\n  margin: 5px;\n  width: 95%;\n`;\nconst noop = () => {};\nconst id = shortid.generate();\nconst TextArea = ({ label, rows, onSubmit = noop, initialValue = '', style }) => {\n  const [value, setValue] = useState('');\n\n  useEffect(() => setValue(initialValue), [initialValue]);\n  return (\n    <div>\n      <label htmlFor={id} css={[labelCSS, style['Label']]}>\n        {label}*\n      </label>\n      <textarea\n        id={id}\n        css={[base, style]}\n        rows={rows}\n        value={value}\n        onChange={evt => setValue(evt.target.value)}\n        required\n      />\n\n      <button onClick={() => onSubmit(value)} css={[buttonCSS, style['Button']]}>\n        Invia risposta\n      </button>\n    </div>\n  );\n};\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}