{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/components/DraggableList.js\";\nimport React, { useCallback, useContext } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { List } from '@material-ui/core';\nconst DragListContext = React.createContext();\nexport const useDragList = () => {\n  const value = useContext(DragListContext);\n\n  if (value == null) {\n    throw new Error('useDragList must be used inside a DraggableList');\n  }\n\n  return value;\n}; // List contiene i componenti React da trasformare\n\nexport const DraggableList = ({\n  id,\n  list,\n  disabled\n}) => {\n  const renderList = useCallback(components => components.map((component, index) => {\n    const id = `draggable-${component.props.id}`;\n    return /*#__PURE__*/React.createElement(Draggable, {\n      key: id,\n      draggableId: id,\n      index: index,\n      isDragDisabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(DragListContext.Provider, {\n      value: {\n        provided,\n        snapshot,\n        isDragDisabled: disabled\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, component));\n  }), [disabled]);\n  return /*#__PURE__*/React.createElement(Droppable, {\n    key: id,\n    droppableId: id,\n    type: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, (provided, snapshot) => {\n    return /*#__PURE__*/React.createElement(List, Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), renderList(list), provided.placeholder);\n  });\n};","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/components/DraggableList.js"],"names":["React","useCallback","useContext","Droppable","Draggable","List","DragListContext","createContext","useDragList","value","Error","DraggableList","id","list","disabled","renderList","components","map","component","index","props","provided","snapshot","isDragDisabled","innerRef","droppableProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,eAAe,GAAGN,KAAK,CAACO,aAAN,EAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,KAAK,GAAGP,UAAU,CAACI,eAAD,CAAxB;;AACA,MAAIG,KAAK,IAAI,IAAb,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,SAAOD,KAAP;AACD,CAPM,C,CASP;;AACA,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACvD,QAAMC,UAAU,GAAGd,WAAW,CAC5Be,UAAU,IACRA,UAAU,CAACC,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACnC,UAAMP,EAAE,GAAI,aAAYM,SAAS,CAACE,KAAV,CAAgBR,EAAG,EAA3C;AACA,wBACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,EAAhB;AAAoB,MAAA,WAAW,EAAEA,EAAjC;AAAqC,MAAA,KAAK,EAAEO,KAA5C;AAAmD,MAAA,cAAc,EAAEL,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACO,QAAD,EAAWC,QAAX,kBACC,oBAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AAAED,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA,cAAc,EAAET;AAAtC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGI,SAHH,CAFJ,CADF;AAWD,GAbD,CAF0B,EAgB5B,CAACJ,QAAD,CAhB4B,CAA9B;AAmBA,sBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEF,EAAhB;AAAoB,IAAA,WAAW,EAAEA,EAAjC;AAAqC,IAAA,IAAI,EAAEA,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACS,QAAD,EAAWC,QAAX,KAAwB;AACvB,wBACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,QAAQ,CAACG;AAApB,OAAkCH,QAAQ,CAACI,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGV,UAAU,CAACF,IAAD,CADb,EAEGQ,QAAQ,CAACK,WAFZ,CADF;AAMD,GARH,CADF;AAYD,CAhCM","sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { List } from '@material-ui/core';\n\nconst DragListContext = React.createContext();\n\nexport const useDragList = () => {\n  const value = useContext(DragListContext);\n  if (value == null) {\n    throw new Error('useDragList must be used inside a DraggableList');\n  }\n\n  return value;\n};\n\n// List contiene i componenti React da trasformare\nexport const DraggableList = ({ id, list, disabled }) => {\n  const renderList = useCallback(\n    components =>\n      components.map((component, index) => {\n        const id = `draggable-${component.props.id}`;\n        return (\n          <Draggable key={id} draggableId={id} index={index} isDragDisabled={disabled}>\n            {(provided, snapshot) => (\n              <DragListContext.Provider\n                value={{ provided, snapshot, isDragDisabled: disabled }}\n              >\n                {component}\n              </DragListContext.Provider>\n            )}\n          </Draggable>\n        );\n      }),\n    [disabled]\n  );\n\n  return (\n    <Droppable key={id} droppableId={id} type={id}>\n      {(provided, snapshot) => {\n        return (\n          <List ref={provided.innerRef} {...provided.droppableProps}>\n            {renderList(list)}\n            {provided.placeholder}\n          </List>\n        );\n      }}\n    </Droppable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}