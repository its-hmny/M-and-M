{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/Settings/atoms/TextFormat.js\";\nimport React, { useState } from 'react';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { FormatBold as FormatBoldIcon, FormatItalic as FormatItalicIcon, FormatUnderlined as FormatUnderlinedIcon } from '@material-ui/icons';\nconst props = {\n  fontWeight: 'bold',\n  fontStyle: 'italic',\n  textDecoration: 'underline'\n};\n\nfunction TextFormat({\n  onChange,\n  value\n}) {\n  const [formats, setFormats] = useState(() => {\n    Object.keys(props).forEach(prop => {\n      if (value[prop]) formats.push(value[prop]);\n    });\n  });\n\n  const handleFormat = (_, newFormats) => {\n    setFormats(newFormats);\n    Object.entries(props).map(([prop, value]) => onChange({\n      [prop]: newFormats.includes(value) ? value : undefined\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: formats,\n    onChange: handleFormat,\n    \"aria-label\": \"font decorations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"bold\",\n    \"aria-label\": \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormatBoldIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"italic\",\n    \"aria-label\": \"italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormatItalicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: \"underline\",\n    \"aria-label\": \"underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormatUnderlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default TextFormat;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/Settings/atoms/TextFormat.js"],"names":["React","useState","ToggleButton","ToggleButtonGroup","FormatBold","FormatBoldIcon","FormatItalic","FormatItalicIcon","FormatUnderlined","FormatUnderlinedIcon","props","fontWeight","fontStyle","textDecoration","TextFormat","onChange","value","formats","setFormats","Object","keys","forEach","prop","push","handleFormat","_","newFormats","entries","map","includes","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,kBAAhD;AACA,SACEC,UAAU,IAAIC,cADhB,EAEEC,YAAY,IAAIC,gBAFlB,EAGEC,gBAAgB,IAAIC,oBAHtB,QAIO,oBAJP;AAMA,MAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,MADA;AAEZC,EAAAA,SAAS,EAAE,QAFC;AAGZC,EAAAA,cAAc,EAAE;AAHJ,CAAd;;AAMA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAApB,EAAyC;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,MAAM;AAC3CkB,IAAAA,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBW,OAAnB,CAA2BC,IAAI,IAAI;AACjC,UAAIN,KAAK,CAACM,IAAD,CAAT,EAAiBL,OAAO,CAACM,IAAR,CAAaP,KAAK,CAACM,IAAD,CAAlB;AAClB,KAFD;AAGD,GAJqC,CAAtC;;AAMA,QAAME,YAAY,GAAG,CAACC,CAAD,EAAIC,UAAJ,KAAmB;AACtCR,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACAP,IAAAA,MAAM,CAACQ,OAAP,CAAejB,KAAf,EAAsBkB,GAAtB,CAA0B,CAAC,CAACN,IAAD,EAAON,KAAP,CAAD,KACxBD,QAAQ,CAAC;AAAE,OAACO,IAAD,GAAQI,UAAU,CAACG,QAAX,CAAoBb,KAApB,IAA6BA,KAA7B,GAAqCc;AAA/C,KAAD,CADV;AAGD,GALD;;AAOA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAEb,OADT;AAEE,IAAA,QAAQ,EAAEO,YAFZ;AAGE,kBAAW,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,kBAAW,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,eAQE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,QAApB;AAA6B,kBAAW,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,WAApB;AAAgC,kBAAW,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAiBD;;AAED,eAAeV,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport {\n  FormatBold as FormatBoldIcon,\n  FormatItalic as FormatItalicIcon,\n  FormatUnderlined as FormatUnderlinedIcon,\n} from '@material-ui/icons';\n\nconst props = {\n  fontWeight: 'bold',\n  fontStyle: 'italic',\n  textDecoration: 'underline',\n};\n\nfunction TextFormat({ onChange, value }) {\n  const [formats, setFormats] = useState(() => {\n    Object.keys(props).forEach(prop => {\n      if (value[prop]) formats.push(value[prop]);\n    });\n  });\n\n  const handleFormat = (_, newFormats) => {\n    setFormats(newFormats);\n    Object.entries(props).map(([prop, value]) =>\n      onChange({ [prop]: newFormats.includes(value) ? value : undefined })\n    );\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={formats}\n      onChange={handleFormat}\n      aria-label=\"font decorations\"\n    >\n      <ToggleButton value=\"bold\" aria-label=\"bold\">\n        <FormatBoldIcon />\n      </ToggleButton>\n      <ToggleButton value=\"italic\" aria-label=\"italic\">\n        <FormatItalicIcon />\n      </ToggleButton>\n      <ToggleButton value=\"underline\" aria-label=\"underline\">\n        <FormatUnderlinedIcon />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nexport default TextFormat;\n"]},"metadata":{},"sourceType":"module"}