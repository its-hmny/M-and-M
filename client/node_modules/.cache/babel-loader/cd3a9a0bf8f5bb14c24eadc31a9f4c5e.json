{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Player/components/PlayerLobby.js\";\nimport React, { useState, useMemo } from 'react';\nimport { Container, Avatar, TextField, Badge, Button, Fab, Typography, CircularProgress, makeStyles } from '@material-ui/core';\nimport { PhotoCamera, PlayCircleFilledRounded } from '@material-ui/icons';\nimport axios from '../../common/shared';\nimport { SERVER_URL } from '../../common/constants';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    boxSizing: 'border-box',\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  playerSection: {\n    marginBottom: theme.spacing(4),\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  playerAvatar: {\n    width: '20vh',\n    height: '20vh'\n  },\n  badgeRoot: {\n    marginBottom: theme.spacing(4)\n  },\n  badge: {\n    height: 'auto',\n    padding: 4,\n    borderRadius: '50%'\n  },\n  camera: {\n    fontSize: 18\n  },\n  startingContainer: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  whereToStartHead: {\n    textAlign: 'center',\n    maxWidth: '80%',\n    marginBottom: theme.spacing(3)\n  },\n  buttons: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  button: {\n    marginBottom: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  startButton: {\n    width: '60%'\n  },\n  playIcon: {\n    marginRight: theme.spacing(1)\n  },\n  text: {\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingTop: theme.spacing(4)\n  },\n  teamInput: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst takePhoto = onChangeHandler => {\n  const link = document.createElement('input');\n  document.body.appendChild(link);\n  link.type = 'file';\n  link.capture = 'user';\n  link.accept = 'image/*';\n  link.onchange = onChangeHandler;\n  link.click();\n  document.body.removeChild(link);\n};\n\nconst PlayerLobby = ({\n  story,\n  onStart,\n  saveChanges\n}) => {\n  const [playerData, setData] = useState({\n    name: '',\n    team: '',\n    avatar: ''\n  });\n  const classes = useStyles();\n  const initialNodes = useMemo(() => {\n    if (story) {\n      const initialNodes = story.nodes.filter(node => node.isInitial);\n      return initialNodes.length > 0 ? initialNodes : [story.nodes[0]];\n    }\n  }, [story]);\n\n  const onChangePicture = event => {\n    const uploadedImg = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', uploadedImg);\n\n    if (uploadedImg) {\n      // Removes from server the previous avatar if exist\n      if (playerData.avatar) {\n        const resourceId = playerData.avatar.split('/').slice(-1);\n        axios.delete(`resources/${resourceId}`).catch(err => console.warn(err));\n      } // Sends the new one to the server\n\n\n      axios.put('resources/', formData, {\n        headers: {\n          'Content-Type': uploadedImg.type\n        }\n      }).then(res => setData({ ...playerData,\n        avatar: `${SERVER_URL}/resources/${res.data.uuid}`\n      })).catch(err => console.warn(err));\n    }\n  };\n\n  const startGame = node => {\n    saveChanges(playerData);\n    onStart(node);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.playerSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    classes: {\n      root: classes.badgeRoot,\n      badge: classes.badge\n    },\n    color: \"primary\",\n    overlap: \"circle\",\n    onClick: () => takePhoto(onChangePicture),\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    badgeContent: /*#__PURE__*/React.createElement(PhotoCamera, {\n      className: classes.camera,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: playerData.avatar,\n    alt: \"Your profile image or avatar\",\n    className: classes.playerAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    label: \"Your name\",\n    value: playerData.name,\n    onChange: e => setData({ ...playerData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), story && story.modes.includes('teams') && /*#__PURE__*/React.createElement(TextField, {\n    className: classes.teamInput,\n    variant: \"outlined\",\n    label: \"Your team\",\n    value: playerData.team,\n    onChange: e => setData({ ...playerData,\n      team: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  })), !story ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }) : initialNodes.length > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.startingContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.whereToStartHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Where do you want to start from?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, initialNodes.map(node => /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    onClick: () => startGame(node),\n    large: true,\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, node.name)))) : /*#__PURE__*/React.createElement(Fab, {\n    variant: \"extended\",\n    color: \"primary\",\n    className: classes.startButton,\n    onClick: () => startGame(initialNodes[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayCircleFilledRounded, {\n    className: classes.playIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }), \"Start\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, \"Hey! Just so you know, you can't refresh or go back one page while you're playing.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }), \"The button in the bottom opens a chat with an Evaluator, if any are online, so you can ask for hints!\"));\n};\n\nexport default PlayerLobby;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Player/components/PlayerLobby.js"],"names":["React","useState","useMemo","Container","Avatar","TextField","Badge","Button","Fab","Typography","CircularProgress","makeStyles","PhotoCamera","PlayCircleFilledRounded","axios","SERVER_URL","useStyles","theme","container","boxSizing","paddingTop","spacing","paddingBottom","height","display","flexDirection","alignItems","justifyContent","playerSection","marginBottom","flexShrink","playerAvatar","width","badgeRoot","badge","padding","borderRadius","camera","fontSize","startingContainer","alignSelf","flexGrow","whereToStartHead","textAlign","maxWidth","buttons","button","startButton","playIcon","marginRight","text","paddingLeft","paddingRight","teamInput","marginTop","takePhoto","onChangeHandler","link","document","createElement","body","appendChild","type","capture","accept","onchange","click","removeChild","PlayerLobby","story","onStart","saveChanges","playerData","setData","name","team","avatar","classes","initialNodes","nodes","filter","node","isInitial","length","onChangePicture","event","uploadedImg","target","files","formData","FormData","append","resourceId","split","slice","delete","catch","err","console","warn","put","headers","then","res","data","uuid","startGame","root","vertical","horizontal","e","value","modes","includes","map"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport {\n  Container,\n  Avatar,\n  TextField,\n  Badge,\n  Button,\n  Fab,\n  Typography,\n  CircularProgress,\n  makeStyles,\n} from '@material-ui/core';\nimport { PhotoCamera, PlayCircleFilledRounded } from '@material-ui/icons';\n\nimport axios from '../../common/shared';\nimport { SERVER_URL } from '../../common/constants';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    boxSizing: 'border-box',\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  playerSection: {\n    marginBottom: theme.spacing(4),\n    flexShrink: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerAvatar: {\n    width: '20vh',\n    height: '20vh',\n  },\n  badgeRoot: {\n    marginBottom: theme.spacing(4),\n  },\n  badge: {\n    height: 'auto',\n    padding: 4,\n    borderRadius: '50%',\n  },\n  camera: {\n    fontSize: 18,\n  },\n  startingContainer: {\n    alignSelf: 'stretch',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  whereToStartHead: {\n    textAlign: 'center',\n    maxWidth: '80%',\n    marginBottom: theme.spacing(3),\n  },\n  buttons: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    marginBottom: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  startButton: {\n    width: '60%',\n  },\n  playIcon: {\n    marginRight: theme.spacing(1),\n  },\n  text: {\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    paddingTop: theme.spacing(4),\n  },\n  teamInput: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst takePhoto = onChangeHandler => {\n  const link = document.createElement('input');\n  document.body.appendChild(link);\n  link.type = 'file';\n  link.capture = 'user';\n  link.accept = 'image/*';\n  link.onchange = onChangeHandler;\n  link.click();\n  document.body.removeChild(link);\n};\n\nconst PlayerLobby = ({ story, onStart, saveChanges }) => {\n  const [playerData, setData] = useState({\n    name: '',\n    team: '',\n    avatar: '',\n  });\n  const classes = useStyles();\n  const initialNodes = useMemo(() => {\n    if (story) {\n      const initialNodes = story.nodes.filter(node => node.isInitial);\n      return initialNodes.length > 0 ? initialNodes : [story.nodes[0]];\n    }\n  }, [story]);\n\n  const onChangePicture = event => {\n    const uploadedImg = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', uploadedImg);\n    if (uploadedImg) {\n      // Removes from server the previous avatar if exist\n      if (playerData.avatar) {\n        const resourceId = playerData.avatar.split('/').slice(-1);\n        axios.delete(`resources/${resourceId}`).catch(err => console.warn(err));\n      }\n      // Sends the new one to the server\n      axios\n        .put('resources/', formData, {\n          headers: { 'Content-Type': uploadedImg.type },\n        })\n        .then(res =>\n          setData({ ...playerData, avatar: `${SERVER_URL}/resources/${res.data.uuid}` })\n        )\n        .catch(err => console.warn(err));\n    }\n  };\n\n  const startGame = node => {\n    saveChanges(playerData);\n    onStart(node);\n  };\n\n  return (\n    <Container className={classes.container}>\n      <div className={classes.playerSection}>\n        <Badge\n          classes={{ root: classes.badgeRoot, badge: classes.badge }}\n          color=\"primary\"\n          overlap=\"circle\"\n          onClick={() => takePhoto(onChangePicture)}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          badgeContent={<PhotoCamera className={classes.camera} />}\n        >\n          <Avatar\n            src={playerData.avatar}\n            alt=\"Your profile image or avatar\"\n            className={classes.playerAvatar}\n          />\n        </Badge>\n        <TextField\n          variant=\"outlined\"\n          label=\"Your name\"\n          value={playerData.name}\n          onChange={e => setData({ ...playerData, name: e.target.value })}\n        />\n        {story && story.modes.includes('teams') && (\n          <TextField\n            className={classes.teamInput}\n            variant=\"outlined\"\n            label=\"Your team\"\n            value={playerData.team}\n            onChange={e => setData({ ...playerData, team: e.target.value })}\n          />\n        )}\n      </div>\n      {!story ? (\n        <CircularProgress />\n      ) : initialNodes.length > 1 ? (\n        <div className={classes.startingContainer}>\n          <Typography variant=\"h6\" className={classes.whereToStartHead}>\n            Where do you want to start from?\n          </Typography>\n          <div className={classes.buttons}>\n            {initialNodes.map(node => (\n              <Button\n                className={classes.button}\n                onClick={() => startGame(node)}\n                large\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                {node.name}\n              </Button>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <Fab\n          variant=\"extended\"\n          color=\"primary\"\n          className={classes.startButton}\n          onClick={() => startGame(initialNodes[0])}\n        >\n          <PlayCircleFilledRounded className={classes.playIcon} />\n          Start\n        </Fab>\n      )}\n      <Typography className={classes.text} variant=\"body1\" align=\"center\">\n        Hey! Just so you know, you can't refresh or go back one page while you're playing.\n        <br />\n        The button in the bottom opens a chat with an Evaluator, if any are online, so you\n        can ask for hints!\n      </Typography>\n    </Container>\n  );\n};\n\nexport default PlayerLobby;\n"]},"metadata":{},"sourceType":"module"}