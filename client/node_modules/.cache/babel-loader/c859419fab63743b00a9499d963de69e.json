{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/Elements/Input.js\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nconst base = css`\n  input {\n    padding: 7px;\n    margin: 5px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    box-shadow: inset 0 1px 3px #ddd;\n  }\n  label {\n    width: 95%;\n  }\n  button {\n    padding: 0.5rem 1rem;\n    border: none;\n\n    font-size: 1rem;\n    cursor: pointer;\n    margin: 5px;\n  }\n`;\n\nconst noop = () => {};\n\nconst id = shortid.generate();\n\nconst Input = ({\n  placeholder,\n  onSubmit = noop,\n  style,\n  initialValue = ''\n}) => {\n  const [answer, setAnswer] = useState('');\n  useEffect(() => setAnswer(initialValue), [initialValue]);\n  return jsx(\"div\", {\n    css: [base, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, jsx(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, `${placeholder}*`, jsx(\"input\", {\n    id: id,\n    value: answer,\n    onChange: event => setAnswer(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), jsx(\"button\", {\n    style: style['Button'],\n    onClick: () => onSubmit(answer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Invia risposta\"));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/Elements/Input.js"],"names":["css","jsx","useEffect","useState","shortid","base","noop","id","generate","Input","placeholder","onSubmit","style","initialValue","answer","setAnswer","event","target","value"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,MAAMC,IAAI,GAAGL,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,MAAMM,IAAI,GAAG,MAAM,CAAE,CAArB;;AACA,MAAMC,EAAE,GAAGH,OAAO,CAACI,QAAR,EAAX;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAQ,GAAGL,IAA1B;AAAgCM,EAAAA,KAAhC;AAAuCC,EAAAA,YAAY,GAAG;AAAtD,CAAD,KAAgE;AAC5E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAMa,SAAS,CAACF,YAAD,CAAhB,EAAgC,CAACA,YAAD,CAAhC,CAAT;AAEA,SACE;AAAK,IAAA,GAAG,EAAE,CAACR,IAAD,EAAOO,KAAP,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEG,WAAY,GADlB,EAEE;AACE,IAAA,EAAE,EAAEH,EADN;AAEE,IAAA,KAAK,EAAEO,MAFT;AAGE,IAAA,QAAQ,EAAEE,KAAK,IAAID,SAAS,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH9B;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAQ,IAAA,KAAK,EAAEN,KAAK,CAAC,QAAD,CAApB;AAAgC,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACG,MAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,CADF;AAgBD,CArBD;;AAuBA,eAAeL,KAAf","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nconst base = css`\n  input {\n    padding: 7px;\n    margin: 5px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    box-shadow: inset 0 1px 3px #ddd;\n  }\n  label {\n    width: 95%;\n  }\n  button {\n    padding: 0.5rem 1rem;\n    border: none;\n\n    font-size: 1rem;\n    cursor: pointer;\n    margin: 5px;\n  }\n`;\n\nconst noop = () => {};\nconst id = shortid.generate();\nconst Input = ({ placeholder, onSubmit = noop, style, initialValue = '' }) => {\n  const [answer, setAnswer] = useState('');\n\n  useEffect(() => setAnswer(initialValue), [initialValue]);\n\n  return (\n    <div css={[base, style]}>\n      <label htmlFor={id}>\n        {`${placeholder}*`}\n        <input\n          id={id}\n          value={answer}\n          onChange={event => setAnswer(event.target.value)}\n          required\n        />\n      </label>\n      <button style={style['Button']} onClick={() => onSubmit(answer)}>\n        Invia risposta\n      </button>\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}