{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/Elements/Choice.js\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nconst base = css`\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n\n  display: block;\n  border-radius: 8px;\n  padding: 10px 20px;\n  background-color: #9dc8fa;\n  text-align: center;\n  cursor: pointer;\n  margin: 5px;\n  word-wrap: break-word;\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  input:checked ~ & {\n    background-color: #3b92f6;\n    margin: 5px;\n  }\n`;\n\nfunction Choice({\n  type,\n  id,\n  name,\n  label,\n  selected,\n  onSelected,\n  style\n}) {\n  return jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, jsx(\"input\", {\n    id: id,\n    type: type,\n    name: name,\n    value: label,\n    checked: selected,\n    onChange: onSelected,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), jsx(\"label\", {\n    htmlFor: id,\n    css: [base, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, label));\n}\n\nconst Radio = props => jsx(Choice, Object.assign({\n  type: \"radio\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 24\n  }\n}));\n\nRadio.displayName = 'Radio';\n\nconst Checkbox = props => jsx(Choice, Object.assign({\n  type: \"checkbox\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 27\n  }\n}));\n\nCheckbox.displayName = 'Checkbox';\nexport { Radio, Checkbox };","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/Elements/Choice.js"],"names":["css","jsx","base","Choice","type","id","name","label","selected","onSelected","style","display","Radio","props","displayName","Checkbox"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAEA,MAAMC,IAAI,GAAGF,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;;AA2BA,SAASG,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA;AAA/C,CAAhB,EAAwE;AACtE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEL,EADN;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,OAAO,EAAEC,QALX;AAME,IAAA,QAAQ,EAAEC,UANZ;AAOE,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAO,IAAA,OAAO,EAAEN,EAAhB;AAAoB,IAAA,GAAG,EAAE,CAACH,IAAD,EAAOQ,KAAP,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KADH,CAVF,CADF;AAgBD;;AAED,MAAMK,KAAK,GAAGC,KAAK,IAAI,IAAC,MAAD;AAAQ,EAAA,IAAI,EAAC;AAAb,GAAyBA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AACAD,KAAK,CAACE,WAAN,GAAoB,OAApB;;AAEA,MAAMC,QAAQ,GAAGF,KAAK,IAAI,IAAC,MAAD;AAAQ,EAAA,IAAI,EAAC;AAAb,GAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AACAE,QAAQ,CAACD,WAAT,GAAuB,UAAvB;AAEA,SAASF,KAAT,EAAgBG,QAAhB","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\n\nconst base = css`\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n\n  display: block;\n  border-radius: 8px;\n  padding: 10px 20px;\n  background-color: #9dc8fa;\n  text-align: center;\n  cursor: pointer;\n  margin: 5px;\n  word-wrap: break-word;\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  input:checked ~ & {\n    background-color: #3b92f6;\n    margin: 5px;\n  }\n`;\n\nfunction Choice({ type, id, name, label, selected, onSelected, style }) {\n  return (\n    <div>\n      <input\n        id={id}\n        type={type}\n        name={name}\n        value={label}\n        checked={selected}\n        onChange={onSelected}\n        style={{ display: 'none' }}\n      />\n      <label htmlFor={id} css={[base, style]}>\n        {label}\n      </label>\n    </div>\n  );\n}\n\nconst Radio = props => <Choice type=\"radio\" {...props} />;\nRadio.displayName = 'Radio';\n\nconst Checkbox = props => <Choice type=\"checkbox\" {...props} />;\nCheckbox.displayName = 'Checkbox';\n\nexport { Radio, Checkbox };\n"]},"metadata":{},"sourceType":"module"}