{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/components/Inspector.js\";\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { DraggableList } from './DraggableList';\nimport AddComponentButton from './AddComponentButton';\nimport SettingsItem from './SettingsItem';\nimport useTemplateStore from '../stores/template';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxHeight: `100vh`,\n    display: 'flex',\n    flexDirection: 'column',\n    '& .MuiList-root': {\n      overflowY: 'auto',\n      padding: `0 ${theme.spacing(2)}px`,\n      paddingBottom: `${theme.spacing(3)}px`,\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nfunction Inspector() {\n  const classes = useStyles();\n  const [currentlyEditing, setCurrentlyEditing] = useState(0);\n  const {\n    components,\n    addComponent,\n    reorderComponents\n  } = useTemplateStore(state => ({\n    components: state.components,\n    addComponent: state.addComponent,\n    reorderComponents: state.reorderComponents\n  }));\n  const inspectorDragId = 'inspector-top-list';\n  const settings = useMemo(() => components.map((objComponent, index) => /*#__PURE__*/React.createElement(SettingsItem, {\n    key: objComponent.id,\n    id: objComponent.id,\n    dragIndex: index,\n    component: objComponent,\n    onEditing: isEditing => setCurrentlyEditing(currentlyEditing => isEditing ? currentlyEditing + 1 : currentlyEditing - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), [components]);\n  const handleDragEnd = useCallback(({\n    source,\n    destination,\n    type: dragListId\n  }) => {\n    // dropped outside the list\n    if (destination) {\n      reorderComponents(source.index, destination.index, dragListId === inspectorDragId ? null : dragListId);\n    }\n  }, [reorderComponents]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DraggableList, {\n    id: inspectorDragId,\n    list: settings,\n    disabled: currentlyEditing > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), currentlyEditing === 0 && /*#__PURE__*/React.createElement(AddComponentButton, {\n    onClick: addComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 34\n    }\n  }));\n}\n\nexport default Inspector;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/components/Inspector.js"],"names":["React","useState","useCallback","useMemo","Container","makeStyles","DragDropContext","DraggableList","AddComponentButton","SettingsItem","useTemplateStore","useStyles","theme","root","maxHeight","display","flexDirection","overflowY","padding","spacing","paddingBottom","marginTop","Inspector","classes","currentlyEditing","setCurrentlyEditing","components","addComponent","reorderComponents","state","inspectorDragId","settings","map","objComponent","index","id","isEditing","handleDragEnd","source","destination","type","dragListId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAG,OADR;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJ,uBAAmB;AACjBC,MAAAA,SAAS,EAAE,MADM;AAEjBC,MAAAA,OAAO,EAAG,KAAIN,KAAK,CAACO,OAAN,CAAc,CAAd,CAAiB,IAFd;AAGjBC,MAAAA,aAAa,EAAG,GAAER,KAAK,CAACO,OAAN,CAAc,CAAd,CAAiB,IAHlB;AAIjBE,MAAAA,SAAS,EAAET,KAAK,CAACO,OAAN,CAAc,CAAd;AAJM;AAJf;AAD+B,CAAL,CAAN,CAA5B;;AAcA,SAASG,SAAT,GAAqB;AACnB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM;AAAEyB,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAAkDlB,gBAAgB,CAACmB,KAAK,KAAK;AACjFH,IAAAA,UAAU,EAAEG,KAAK,CAACH,UAD+D;AAEjFC,IAAAA,YAAY,EAAEE,KAAK,CAACF,YAF6D;AAGjFC,IAAAA,iBAAiB,EAAEC,KAAK,CAACD;AAHwD,GAAL,CAAN,CAAxE;AAMA,QAAME,eAAe,GAAG,oBAAxB;AAEA,QAAMC,QAAQ,GAAG5B,OAAO,CACtB,MACEuB,UAAU,CAACM,GAAX,CAAe,CAACC,YAAD,EAAeC,KAAf,kBACb,oBAAC,YAAD;AACE,IAAA,GAAG,EAAED,YAAY,CAACE,EADpB;AAEE,IAAA,EAAE,EAAEF,YAAY,CAACE,EAFnB;AAGE,IAAA,SAAS,EAAED,KAHb;AAIE,IAAA,SAAS,EAAED,YAJb;AAKE,IAAA,SAAS,EAAEG,SAAS,IAClBX,mBAAmB,CAACD,gBAAgB,IAClCY,SAAS,GAAGZ,gBAAgB,GAAG,CAAtB,GAA0BA,gBAAgB,GAAG,CADrC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFoB,EAetB,CAACE,UAAD,CAfsB,CAAxB;AAkBA,QAAMW,aAAa,GAAGnC,WAAW,CAC/B,CAAC;AAAEoC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,IAAI,EAAEC;AAA7B,GAAD,KAA+C;AAC7C;AACA,QAAIF,WAAJ,EAAiB;AACfX,MAAAA,iBAAiB,CACfU,MAAM,CAACJ,KADQ,EAEfK,WAAW,CAACL,KAFG,EAGfO,UAAU,KAAKX,eAAf,GAAiC,IAAjC,GAAwCW,UAHzB,CAAjB;AAKD;AACF,GAV8B,EAW/B,CAACb,iBAAD,CAX+B,CAAjC;AAcA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,OAAO,CAACV,IAA9B;AAAoC,IAAA,cAAc,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEwB,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAEP,eADN;AAEE,IAAA,IAAI,EAAEC,QAFR;AAGE,IAAA,QAAQ,EAAEP,gBAAgB,GAAG,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQGA,gBAAgB,KAAK,CAArB,iBAA0B,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEG,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR7B,CADF;AAYD;;AAED,eAAeL,SAAf","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { DraggableList } from './DraggableList';\n\nimport AddComponentButton from './AddComponentButton';\nimport SettingsItem from './SettingsItem';\nimport useTemplateStore from '../stores/template';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxHeight: `100vh`,\n    display: 'flex',\n    flexDirection: 'column',\n    '& .MuiList-root': {\n      overflowY: 'auto',\n      padding: `0 ${theme.spacing(2)}px`,\n      paddingBottom: `${theme.spacing(3)}px`,\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction Inspector() {\n  const classes = useStyles();\n  const [currentlyEditing, setCurrentlyEditing] = useState(0);\n  const { components, addComponent, reorderComponents } = useTemplateStore(state => ({\n    components: state.components,\n    addComponent: state.addComponent,\n    reorderComponents: state.reorderComponents,\n  }));\n\n  const inspectorDragId = 'inspector-top-list';\n\n  const settings = useMemo(\n    () =>\n      components.map((objComponent, index) => (\n        <SettingsItem\n          key={objComponent.id}\n          id={objComponent.id}\n          dragIndex={index}\n          component={objComponent}\n          onEditing={isEditing =>\n            setCurrentlyEditing(currentlyEditing =>\n              isEditing ? currentlyEditing + 1 : currentlyEditing - 1\n            )\n          }\n        />\n      )),\n    [components]\n  );\n\n  const handleDragEnd = useCallback(\n    ({ source, destination, type: dragListId }) => {\n      // dropped outside the list\n      if (destination) {\n        reorderComponents(\n          source.index,\n          destination.index,\n          dragListId === inspectorDragId ? null : dragListId\n        );\n      }\n    },\n    [reorderComponents]\n  );\n\n  return (\n    <Container className={classes.root} disableGutters>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <DraggableList\n          id={inspectorDragId}\n          list={settings}\n          disabled={currentlyEditing > 0}\n        />\n      </DragDropContext>\n      {currentlyEditing === 0 && <AddComponentButton onClick={addComponent} />}\n    </Container>\n  );\n}\n\nexport default Inspector;\n"]},"metadata":{},"sourceType":"module"}