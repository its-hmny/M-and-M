{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Evaluator/components/ActivePlayersList.js\";\nimport React, { useState } from 'react';\nimport { Badge, Avatar, Typography, Button, Input, makeStyles } from '@material-ui/core';\nimport { List, ListItem, ListItemText, ListItemAvatar, Chip } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { useEvaluator } from '../context/EvaluatorContext';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minWidth: 200,\n    width: 200,\n    background: '#3f3f3e',\n    boxShadow: theme.shadows[6],\n    overflowY: 'auto'\n  },\n  listItem: {\n    padding: 10,\n    wordWrap: 'break-word',\n    cursor: 'pointer'\n  }\n}));\n\nconst RenameDialog = ({\n  isOpen,\n  close\n}) => {\n  const {\n    selectedPlayer,\n    updatePlayerLog\n  } = useEvaluator();\n  const [newName, setName] = useState(undefined);\n\n  const reset = () => {\n    setName(undefined);\n    close();\n  };\n\n  const saveChanges = () => {\n    updatePlayerLog(selectedPlayer.id, {\n      name: newName\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: isOpen,\n    onClose: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Rename the player\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    value: newName,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: saveChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nconst ActivePlayersList = () => {\n  const {\n    selectedPlayer,\n    playersLog,\n    setFocusedPlayer\n  } = useEvaluator();\n  const {\n    container,\n    listItem\n  } = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const generatedTab = () => playersLog.sort((a, b) => (a.name || a.id).localeCompare((b.name || b.id).toUpperCase())).map(player => {\n    const {\n      name,\n      id,\n      team,\n      avatar,\n      hasFinished,\n      isDisconnected,\n      pendingEvaluation,\n      unreadMessages\n    } = player;\n    const teamTag = team ? ` [${team}]` : '';\n    const avaiableName = name || id;\n    const showBadge = Boolean(pendingEvaluation.length || unreadMessages);\n    const statusLabel = hasFinished ? 'Completed' : isDisconnected ? 'Offline' : 'Online';\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: id,\n      selected: selectedPlayer && id === selectedPlayer.id,\n      onClick: () => setFocusedPlayer(id),\n      onDoubleClick: () => setDialogOpen(true),\n      disabled: isDisconnected || hasFinished,\n      className: listItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, showBadge && /*#__PURE__*/React.createElement(Badge, {\n      badgeContent: '!',\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: avaiableName + teamTag,\n      secondary: /*#__PURE__*/React.createElement(Chip, {\n        component: \"span\",\n        color: \"primary\",\n        size: \"small\",\n        label: statusLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }));\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, playersLog.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Nobody is currently playing your story\") : /*#__PURE__*/React.createElement(List, {\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, generatedTab()), /*#__PURE__*/React.createElement(RenameDialog, {\n    isOpen: dialogOpen,\n    close: () => setDialogOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ActivePlayersList;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Evaluator/components/ActivePlayersList.js"],"names":["React","useState","Badge","Avatar","Typography","Button","Input","makeStyles","List","ListItem","ListItemText","ListItemAvatar","Chip","Dialog","DialogTitle","DialogContent","DialogActions","useEvaluator","useStyles","theme","container","minWidth","width","background","boxShadow","shadows","overflowY","listItem","padding","wordWrap","cursor","RenameDialog","isOpen","close","selectedPlayer","updatePlayerLog","newName","setName","undefined","reset","saveChanges","id","name","e","target","value","ActivePlayersList","playersLog","setFocusedPlayer","dialogOpen","setDialogOpen","generatedTab","sort","a","b","localeCompare","toUpperCase","map","player","team","avatar","hasFinished","isDisconnected","pendingEvaluation","unreadMessages","teamTag","avaiableName","showBadge","Boolean","length","statusLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Badge, Avatar, Typography, Button, Input, makeStyles } from '@material-ui/core';\nimport { List, ListItem, ListItemText, ListItemAvatar, Chip } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { useEvaluator } from '../context/EvaluatorContext';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minWidth: 200,\n    width: 200,\n    background: '#3f3f3e',\n    boxShadow: theme.shadows[6],\n    overflowY: 'auto',\n  },\n  listItem: {\n    padding: 10,\n    wordWrap: 'break-word',\n    cursor: 'pointer',\n  },\n}));\n\nconst RenameDialog = ({ isOpen, close }) => {\n  const { selectedPlayer, updatePlayerLog } = useEvaluator();\n  const [newName, setName] = useState(undefined);\n\n  const reset = () => {\n    setName(undefined);\n    close();\n  };\n\n  const saveChanges = () => {\n    updatePlayerLog(selectedPlayer.id, { name: newName });\n    reset();\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={reset}>\n      <DialogTitle>Rename the player</DialogTitle>\n      <DialogContent>\n        <Input autoFocus={true} value={newName} onChange={e => setName(e.target.value)} />\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={saveChanges}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst ActivePlayersList = () => {\n  const { selectedPlayer, playersLog, setFocusedPlayer } = useEvaluator();\n  const { container, listItem } = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  const generatedTab = () =>\n    playersLog\n      .sort((a, b) => (a.name || a.id).localeCompare((b.name || b.id).toUpperCase()))\n      .map(player => {\n        const {\n          name,\n          id,\n          team,\n          avatar,\n          hasFinished,\n          isDisconnected,\n          pendingEvaluation,\n          unreadMessages,\n        } = player;\n        const teamTag = team ? ` [${team}]` : '';\n        const avaiableName = name || id;\n        const showBadge = Boolean(pendingEvaluation.length || unreadMessages);\n        const statusLabel = hasFinished\n          ? 'Completed'\n          : isDisconnected\n          ? 'Offline'\n          : 'Online';\n\n        return (\n          <ListItem\n            key={id}\n            selected={selectedPlayer && id === selectedPlayer.id}\n            onClick={() => setFocusedPlayer(id)}\n            onDoubleClick={() => setDialogOpen(true)}\n            disabled={isDisconnected || hasFinished}\n            className={listItem}\n          >\n            {showBadge && <Badge badgeContent={'!'} color=\"primary\" />}\n            <ListItemAvatar>\n              <Avatar src={avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={avaiableName + teamTag}\n              secondary={\n                <Chip component=\"span\" color=\"primary\" size=\"small\" label={statusLabel} />\n              }\n            />\n          </ListItem>\n        );\n      });\n\n  return (\n    <div className={container}>\n      {playersLog.length === 0 ? (\n        <Typography align=\"center\" variant=\"h6\">\n          Nobody is currently playing your story\n        </Typography>\n      ) : (\n        <List orientation=\"vertical\">{generatedTab()}</List>\n      )}\n      <RenameDialog isOpen={dialogOpen} close={() => setDialogOpen(false)} />\n    </div>\n  );\n};\n\nexport default ActivePlayersList;\n"]},"metadata":{},"sourceType":"module"}