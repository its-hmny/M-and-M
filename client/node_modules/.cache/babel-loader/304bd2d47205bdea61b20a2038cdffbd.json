{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/Settings/CameraSettings.js\";\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport TextColorPicker from './atoms/TextColorPicker';\nimport BackgroundColorPicker from './atoms/BackgroundColorPicker';\nimport useStylesStore from '../stores/styles'; // Choices style object reference:\n// {\n//   Root: { /* root styles */ },\n//   Button: { /* styles applied to Button */ },\n// }\n\nconst CameraSettings = ({\n  styleId\n}) => {\n  const {\n    styles,\n    updateStyle\n  } = useStylesStore(state => ({\n    styles: state.styles,\n    updateStyle: state.updateStyle\n  }));\n\n  const onChange = (subStyle, innerId) => updateStyle({\n    styleId: innerId,\n    ...subStyle\n  }, styleId);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Camera Button\"), /*#__PURE__*/React.createElement(TextColorPicker, {\n    onChange: subStyle => onChange(subStyle, 'CameraButton'),\n    value: styles[styleId]['CameraButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BackgroundColorPicker, {\n    onChange: subStyle => onChange(subStyle, 'CameraButton'),\n    value: styles[styleId]['CameraButton'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Submit Button\"), /*#__PURE__*/React.createElement(TextColorPicker, {\n    onChange: subStyle => onChange(subStyle, 'Button'),\n    value: styles[styleId]['Button'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BackgroundColorPicker, {\n    onChange: subStyle => onChange(subStyle, 'Button'),\n    value: styles[styleId]['Button'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CameraSettings;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/Settings/CameraSettings.js"],"names":["React","Typography","TextColorPicker","BackgroundColorPicker","useStylesStore","CameraSettings","styleId","styles","updateStyle","state","onChange","subStyle","innerId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACtC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BJ,cAAc,CAACK,KAAK,KAAK;AACvDF,IAAAA,MAAM,EAAEE,KAAK,CAACF,MADyC;AAEvDC,IAAAA,WAAW,EAAEC,KAAK,CAACD;AAFoC,GAAL,CAAN,CAA9C;;AAIA,QAAME,QAAQ,GAAG,CAACC,QAAD,EAAWC,OAAX,KACfJ,WAAW,CACT;AACEF,IAAAA,OAAO,EAAEM,OADX;AAEE,OAAGD;AAFL,GADS,EAKTL,OALS,CADb;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,eAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,IAAID,QAAQ,CAACC,QAAD,EAAW,cAAX,CADhC;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACD,OAAD,CAAN,CAAgB,cAAhB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME,oBAAC,qBAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,IAAID,QAAQ,CAACC,QAAD,EAAW,cAAX,CADhC;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACD,OAAD,CAAN,CAAgB,cAAhB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAUE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,eAWE,oBAAC,eAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,IAAID,QAAQ,CAACC,QAAD,EAAW,QAAX,CADhC;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACD,OAAD,CAAN,CAAgB,QAAhB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAeE,oBAAC,qBAAD;AACE,IAAA,QAAQ,EAAEK,QAAQ,IAAID,QAAQ,CAACC,QAAD,EAAW,QAAX,CADhC;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACD,OAAD,CAAN,CAAgB,QAAhB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAsBD,CAnCD;;AAqCA,eAAeD,cAAf","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport TextColorPicker from './atoms/TextColorPicker';\nimport BackgroundColorPicker from './atoms/BackgroundColorPicker';\nimport useStylesStore from '../stores/styles';\n\n// Choices style object reference:\n// {\n//   Root: { /* root styles */ },\n//   Button: { /* styles applied to Button */ },\n// }\n\nconst CameraSettings = ({ styleId }) => {\n  const { styles, updateStyle } = useStylesStore(state => ({\n    styles: state.styles,\n    updateStyle: state.updateStyle,\n  }));\n  const onChange = (subStyle, innerId) =>\n    updateStyle(\n      {\n        styleId: innerId,\n        ...subStyle,\n      },\n      styleId\n    );\n  return (\n    <div>\n      <Typography variant=\"h4\">Camera Button</Typography>\n      <TextColorPicker\n        onChange={subStyle => onChange(subStyle, 'CameraButton')}\n        value={styles[styleId]['CameraButton']}\n      />\n      <BackgroundColorPicker\n        onChange={subStyle => onChange(subStyle, 'CameraButton')}\n        value={styles[styleId]['CameraButton']}\n      />\n      <Typography variant=\"h4\">Submit Button</Typography>\n      <TextColorPicker\n        onChange={subStyle => onChange(subStyle, 'Button')}\n        value={styles[styleId]['Button']}\n      />\n      <BackgroundColorPicker\n        onChange={subStyle => onChange(subStyle, 'Button')}\n        value={styles[styleId]['Button']}\n      />\n    </div>\n  );\n};\n\nexport default CameraSettings;\n"]},"metadata":{},"sourceType":"module"}