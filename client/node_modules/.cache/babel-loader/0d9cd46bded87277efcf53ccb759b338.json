{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/Settings/atoms/OpacitySlider.js\";\nimport React from 'react';\nimport { Slider } from '@material-ui/core'; //TODO: https://material-ui.com/components/slider/#accessibility\n\nfunction OpacitySlider({\n  onChange,\n  value\n}) {\n  const handleSliderChange = (_, newValue) => {\n    onChange({\n      opacity: newValue / 100\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 100,\n    value: Number(Math.round(value.opacity * 100)),\n    getAriaValueText: val => `${val}`,\n    \"aria-labelledby\": \"font-size-slider\",\n    step: 1,\n    min: 0,\n    max: 100,\n    valueLabelDisplay: \"on\",\n    onChange: handleSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default OpacitySlider;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/Settings/atoms/OpacitySlider.js"],"names":["React","Slider","OpacitySlider","onChange","value","handleSliderChange","_","newValue","opacity","Number","Math","round","val"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CAEA;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvB,EAA4C;AAC1C,QAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAC1CJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,OAAO,EAAED,QAAQ,GAAG;AAAtB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAE,GADhB;AAEE,IAAA,KAAK,EAAEE,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACI,OAAN,GAAgB,GAA3B,CAAD,CAFf;AAGE,IAAA,gBAAgB,EAAEI,GAAG,IAAK,GAAEA,GAAI,EAHlC;AAIE,uBAAgB,kBAJlB;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,GAAG,EAAE,CANP;AAOE,IAAA,GAAG,EAAE,GAPP;AAQE,IAAA,iBAAiB,EAAC,IARpB;AASE,IAAA,QAAQ,EAAEP,kBATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD;;AAED,eAAeH,aAAf","sourcesContent":["import React from 'react';\nimport { Slider } from '@material-ui/core';\n\n//TODO: https://material-ui.com/components/slider/#accessibility\n\nfunction OpacitySlider({ onChange, value }) {\n  const handleSliderChange = (_, newValue) => {\n    onChange({ opacity: newValue / 100 });\n  };\n\n  return (\n    <>\n      <Slider\n        defaultValue={100}\n        value={Number(Math.round(value.opacity * 100))}\n        getAriaValueText={val => `${val}`}\n        aria-labelledby=\"font-size-slider\"\n        step={1}\n        min={0}\n        max={100}\n        valueLabelDisplay=\"on\"\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n}\n\nexport default OpacitySlider;\n"]},"metadata":{},"sourceType":"module"}