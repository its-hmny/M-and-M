{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/ColorPickerFragment.js\";\nimport React, { useCallback, useRef } from 'react';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 18,\n    marginRight: theme.spacing(2)\n  },\n  swatch: {\n    position: 'relative',\n    width: 20,\n    height: 20,\n    borderRadius: '50%',\n    backgroundColor: props => props.color,\n    cursor: 'pointer'\n  },\n  input: {\n    position: 'absolute',\n    margin: 0,\n    padding: 0,\n    top: 'calc(50% + 2px)',\n    left: 'calc(50% - 2px)',\n    width: 0,\n    height: 0,\n    visibility: 'hidden'\n  }\n}));\n\nconst ColorPickerFragment = props => {\n  const {\n    path,\n    fragmentSpecificProps\n  } = props;\n  const {\n    valToChange\n  } = fragmentSpecificProps;\n  const {\n    getFromPath,\n    setPathToValue\n  } = useEditor(); // If undefined then it defaults to orange\n\n  const colorValue = getFromPath(path || [])[valToChange] || '#eb8231';\n  const inputRef = useRef();\n  const classes = useStyles({\n    color: colorValue\n  });\n  const handleClick = useCallback(() => inputRef.current.click(), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Node Color\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.swatch,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    className: classes.input,\n    type: \"color\",\n    value: colorValue,\n    onChange: event => setPathToValue(path || [], valToChange, event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ColorPickerFragment;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Editor/components/EditorFragments/ColorPickerFragment.js"],"names":["React","useCallback","useRef","Typography","makeStyles","useEditor","useStyles","theme","container","padding","spacing","display","alignItems","label","fontSize","marginRight","swatch","position","width","height","borderRadius","backgroundColor","props","color","cursor","input","margin","top","left","visibility","ColorPickerFragment","path","fragmentSpecificProps","valToChange","getFromPath","setPathToValue","colorValue","inputRef","classes","handleClick","current","click","event","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport { useEditor } from '../../context/EditorContext';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  label: {\n    fontSize: 18,\n    marginRight: theme.spacing(2),\n  },\n  swatch: {\n    position: 'relative',\n    width: 20,\n    height: 20,\n    borderRadius: '50%',\n    backgroundColor: props => props.color,\n    cursor: 'pointer',\n  },\n  input: {\n    position: 'absolute',\n    margin: 0,\n    padding: 0,\n    top: 'calc(50% + 2px)',\n    left: 'calc(50% - 2px)',\n    width: 0,\n    height: 0,\n    visibility: 'hidden',\n  },\n}));\n\nconst ColorPickerFragment = props => {\n  const { path, fragmentSpecificProps } = props;\n  const { valToChange } = fragmentSpecificProps;\n  const { getFromPath, setPathToValue } = useEditor();\n\n  // If undefined then it defaults to orange\n  const colorValue = getFromPath(path || [])[valToChange] || '#eb8231';\n\n  const inputRef = useRef();\n  const classes = useStyles({ color: colorValue });\n\n  const handleClick = useCallback(() => inputRef.current.click(), []);\n\n  return (\n    <div className={classes.container}>\n      <Typography className={classes.label}>Node Color</Typography>\n      <div className={classes.swatch} onClick={handleClick}>\n        <input\n          ref={inputRef}\n          className={classes.input}\n          type=\"color\"\n          value={colorValue}\n          onChange={event => setPathToValue(path || [], valToChange, event.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPickerFragment;\n"]},"metadata":{},"sourceType":"module"}