{"ast":null,"code":"import { useCallback, useEffect, useReducer } from 'react';\nimport axios from '../../../common/shared';\n\nconst templatesFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        templates: action.payload,\n        isLoading: false,\n        isError: false\n      };\n\n    case 'FETCH_FAILURE':\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst useTemplates = () => {\n  const [state, dispatch] = useReducer(templatesFetchReducer, {\n    isLoading: false,\n    isError: false,\n    templates: []\n  });\n  const retry = useCallback(async () => {\n    dispatch({\n      type: 'FETCH_INIT'\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get('templates');\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: data.templates\n      });\n    } catch (error) {\n      dispatch({\n        type: 'FETCH_FAILURE'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    retry();\n  }, [retry]);\n  return [state, retry];\n};\n\nexport default useTemplates;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Editor/components/TemplatesDialog/use-templates.js"],"names":["useCallback","useEffect","useReducer","axios","templatesFetchReducer","state","action","type","isLoading","isError","templates","payload","Error","useTemplates","dispatch","retry","data","get","error"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE;AAAtC,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,SAAS,EAAEJ,MAAM,CAACK,OAFb;AAGLH,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,YAAM,IAAIG,KAAJ,EAAN;AAjBJ;AAmBD,CApBD;;AAsBA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBZ,UAAU,CAACE,qBAAD,EAAwB;AAC1DI,IAAAA,SAAS,EAAE,KAD+C;AAE1DC,IAAAA,OAAO,EAAE,KAFiD;AAG1DC,IAAAA,SAAS,EAAE;AAH+C,GAAxB,CAApC;AAMA,QAAMK,KAAK,GAAGf,WAAW,CAAC,YAAY;AACpCc,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAM;AAAES,QAAAA;AAAF,UAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,WAAV,CAAvB;AACAH,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,eAAR;AAAyBI,QAAAA,OAAO,EAAEK,IAAI,CAACN;AAAvC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOQ,KAAP,EAAc;AACdJ,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GARwB,EAQtB,EARsB,CAAzB;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK;AACN,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SAAO,CAACV,KAAD,EAAQU,KAAR,CAAP;AACD,CAtBD;;AAwBA,eAAeF,YAAf","sourcesContent":["import { useCallback, useEffect, useReducer } from 'react';\nimport axios from '../../../common/shared';\n\nconst templatesFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, isError: false };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        templates: action.payload,\n        isLoading: false,\n        isError: false,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useTemplates = () => {\n  const [state, dispatch] = useReducer(templatesFetchReducer, {\n    isLoading: false,\n    isError: false,\n    templates: [],\n  });\n\n  const retry = useCallback(async () => {\n    dispatch({ type: 'FETCH_INIT' });\n    try {\n      const { data } = await axios.get('templates');\n      dispatch({ type: 'FETCH_SUCCESS', payload: data.templates });\n    } catch (error) {\n      dispatch({ type: 'FETCH_FAILURE' });\n    }\n  }, []);\n\n  useEffect(() => {\n    retry();\n  }, [retry]);\n\n  return [state, retry];\n};\n\nexport default useTemplates;\n"]},"metadata":{},"sourceType":"module"}