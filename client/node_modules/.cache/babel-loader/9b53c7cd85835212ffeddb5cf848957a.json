{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/components/SettingsItem.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Close as CloseIcon, Done as DoneIcon, Delete as DeleteIcon, DragHandle as DragHandleIcon, Edit as EditIcon } from '@material-ui/icons';\nimport shortid from 'shortid';\nimport * as Settings from '../Settings';\nimport useStylesStore from '../stores/styles';\nimport useTemplateStore from '../stores/template';\nimport { useDragList } from '../components/DraggableList';\nimport StyleIdDialog from './StyleIdDialog';\nconst useStyles = makeStyles(theme => ({\n  iconSmallHover: {\n    fontSize: theme.typography.pxToRem(10),\n    '&:hover': {}\n  },\n  componentName: {\n    display: 'inline-block',\n    marginRight: '30px'\n  },\n  draggableItem: {\n    border: '1px solid black',\n    borderRadius: '20px'\n  },\n  isDragging: {\n    backgroundColor: '#474741'\n  },\n  collapse: {\n    padding: `${theme.spacing(5)}px ${theme.spacing(2)}px`\n  },\n  listItem: {\n    boxShadow: props => theme.shadows[props.isDragging ? 4 : 1],\n    backgroundColor: theme.palette.background.paper\n  },\n  listItemContainer: {\n    borderBottom: `${theme.spacing(0.25)}px solid transparent`,\n    borderTop: `${theme.spacing(0.25)}px solid transparent`,\n    // while editing, disable all pointer events on items different than the one being edited\n    pointerEvents: props => props.isDragDisabled ? 'none' : 'initial',\n    userSelect: props => props.isDragDisabled ? 'none' : 'initial',\n    opacity: props => props.isDragDisabled ? 0.5 : 1\n  }\n}));\n\nfunction getStyle(style, isDragging) {\n  if (isDragging && style.transform) {\n    const axisLockY = 'translate(0px' + style.transform.slice(style.transform.indexOf(','), style.transform.length);\n    return { ...style,\n      transform: axisLockY\n    };\n  }\n\n  return style;\n}\n\nconst SettingsItem = ({\n  dragIndex,\n  component,\n  onEditing,\n  subSettings\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const {\n    provided,\n    snapshot,\n    isDragDisabled\n  } = useDragList();\n  const classes = useStyles({\n    isDragging: snapshot.isDragging,\n    isDragDisabled: !isEditing && isDragDisabled\n  });\n  const {\n    changeStyleId,\n    removeComponent\n  } = useTemplateStore(state => ({\n    changeStyleId: state.changeStyleId,\n    removeComponent: state.removeComponent\n  }));\n  const {\n    styleIds,\n    addStyle,\n    removeStyle,\n    renameStyle\n  } = useStylesStore(state => ({\n    styleIds: state.styleIds,\n    addStyle: state.addStyle,\n    removeStyle: state.removeStyle,\n    renameStyle: state.renameStyle\n  }));\n  const {\n    id: componentId,\n    name: componentName,\n    styleId\n  } = component;\n\n  const handleStyleIdChanged = event => {\n    changeStyleId({\n      componentId,\n      newStyleId: event.target.value\n    });\n  };\n\n  const handleDelete = () => removeComponent(componentId);\n\n  const handleEdit = () => {\n    onEditing(true);\n    setIsEditing(true);\n    const newStyleId = `${componentName}-${shortid.generate()}`;\n    changeStyleId({\n      componentId,\n      newStyleId\n    });\n    addStyle({\n      componentName,\n      styleId: newStyleId,\n      baseStyleId: styleId\n    });\n  };\n\n  const handleSave = () => {\n    setIsEditing(false);\n    onEditing(false);\n    setIsSaving(true);\n  };\n\n  const handleDiscard = () => {\n    setIsEditing(false);\n    onEditing(false);\n    changeStyleId({\n      componentId,\n      newStyleId: `Default${componentName}`\n    });\n    removeStyle({\n      componentName,\n      styleId\n    });\n  };\n\n  const handleComplete = newStyleId => {\n    setIsSaving(false);\n    changeStyleId({\n      componentId,\n      newStyleId\n    });\n    renameStyle({\n      componentName,\n      oldId: styleId,\n      newId: newStyleId\n    });\n  }; // find correct component\n\n\n  const SettingsComponent = Settings[`${componentName}Settings`];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    ref: provided.innerRef,\n    className: classes.listItem,\n    ContainerProps: { ...provided.draggableProps,\n      className: classes.listItemContainer,\n      style: getStyle(provided.draggableProps.style, snapshot.isDragging)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, Object.assign({\n      className: classes.iconSmallHover,\n      edge: \"start\",\n      \"aria-label\": \"move-component\"\n    }, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(DragHandleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.componentName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, componentName), /*#__PURE__*/React.createElement(TextField, {\n      disabled: isEditing,\n      select: true,\n      label: \"Select\",\n      value: styleId,\n      onChange: handleStyleIdChanged,\n      variant: \"outlined\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, styleIds[componentName].map(id => /*#__PURE__*/React.createElement(MenuItem, {\n      key: id,\n      value: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, id)))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"discard\",\n    onClick: handleDiscard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"save\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DoneIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"edit\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete-component\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Collapse, {\n    className: classes.collapse,\n    in: isEditing,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SettingsComponent, {\n    componentId: componentId,\n    styleId: styleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyleIdDialog, {\n    open: isSaving,\n    initialId: styleId,\n    styleIds: styleIds,\n    onComplete: handleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SettingsItem;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/components/SettingsItem.js"],"names":["React","useState","makeStyles","Collapse","IconButton","Typography","ListItem","ListItemText","ListItemSecondaryAction","TextField","MenuItem","Close","CloseIcon","Done","DoneIcon","Delete","DeleteIcon","DragHandle","DragHandleIcon","Edit","EditIcon","shortid","Settings","useStylesStore","useTemplateStore","useDragList","StyleIdDialog","useStyles","theme","iconSmallHover","fontSize","typography","pxToRem","componentName","display","marginRight","draggableItem","border","borderRadius","isDragging","backgroundColor","collapse","padding","spacing","listItem","boxShadow","props","shadows","palette","background","paper","listItemContainer","borderBottom","borderTop","pointerEvents","isDragDisabled","userSelect","opacity","getStyle","style","transform","axisLockY","slice","indexOf","length","SettingsItem","dragIndex","component","onEditing","subSettings","isEditing","setIsEditing","isSaving","setIsSaving","provided","snapshot","classes","changeStyleId","removeComponent","state","styleIds","addStyle","removeStyle","renameStyle","id","componentId","name","styleId","handleStyleIdChanged","event","newStyleId","target","value","handleDelete","handleEdit","generate","baseStyleId","handleSave","handleDiscard","handleComplete","oldId","newId","SettingsComponent","innerRef","draggableProps","className","dragHandleProps","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  Close as CloseIcon,\n  Done as DoneIcon,\n  Delete as DeleteIcon,\n  DragHandle as DragHandleIcon,\n  Edit as EditIcon,\n} from '@material-ui/icons';\n\nimport shortid from 'shortid';\nimport * as Settings from '../Settings';\nimport useStylesStore from '../stores/styles';\nimport useTemplateStore from '../stores/template';\nimport { useDragList } from '../components/DraggableList';\nimport StyleIdDialog from './StyleIdDialog';\n\nconst useStyles = makeStyles(theme => ({\n  iconSmallHover: {\n    fontSize: theme.typography.pxToRem(10),\n    '&:hover': {},\n  },\n  componentName: {\n    display: 'inline-block',\n    marginRight: '30px',\n  },\n  draggableItem: {\n    border: '1px solid black',\n    borderRadius: '20px',\n  },\n  isDragging: {\n    backgroundColor: '#474741',\n  },\n  collapse: {\n    padding: `${theme.spacing(5)}px ${theme.spacing(2)}px`,\n  },\n  listItem: {\n    boxShadow: props => theme.shadows[props.isDragging ? 4 : 1],\n    backgroundColor: theme.palette.background.paper,\n  },\n  listItemContainer: {\n    borderBottom: `${theme.spacing(0.25)}px solid transparent`,\n    borderTop: `${theme.spacing(0.25)}px solid transparent`,\n    // while editing, disable all pointer events on items different than the one being edited\n    pointerEvents: props => (props.isDragDisabled ? 'none' : 'initial'),\n    userSelect: props => (props.isDragDisabled ? 'none' : 'initial'),\n    opacity: props => (props.isDragDisabled ? 0.5 : 1),\n  },\n}));\n\nfunction getStyle(style, isDragging) {\n  if (isDragging && style.transform) {\n    const axisLockY =\n      'translate(0px' +\n      style.transform.slice(style.transform.indexOf(','), style.transform.length);\n    return {\n      ...style,\n      transform: axisLockY,\n    };\n  }\n  return style;\n}\n\nconst SettingsItem = ({ dragIndex, component, onEditing, subSettings }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const { provided, snapshot, isDragDisabled } = useDragList();\n  const classes = useStyles({\n    isDragging: snapshot.isDragging,\n    isDragDisabled: !isEditing && isDragDisabled,\n  });\n  const { changeStyleId, removeComponent } = useTemplateStore(state => ({\n    changeStyleId: state.changeStyleId,\n    removeComponent: state.removeComponent,\n  }));\n  const { styleIds, addStyle, removeStyle, renameStyle } = useStylesStore(state => ({\n    styleIds: state.styleIds,\n    addStyle: state.addStyle,\n    removeStyle: state.removeStyle,\n    renameStyle: state.renameStyle,\n  }));\n\n  const { id: componentId, name: componentName, styleId } = component;\n\n  const handleStyleIdChanged = event => {\n    changeStyleId({ componentId, newStyleId: event.target.value });\n  };\n\n  const handleDelete = () => removeComponent(componentId);\n\n  const handleEdit = () => {\n    onEditing(true);\n    setIsEditing(true);\n    const newStyleId = `${componentName}-${shortid.generate()}`;\n    changeStyleId({ componentId, newStyleId });\n    addStyle({ componentName, styleId: newStyleId, baseStyleId: styleId });\n  };\n\n  const handleSave = () => {\n    setIsEditing(false);\n    onEditing(false);\n    setIsSaving(true);\n  };\n\n  const handleDiscard = () => {\n    setIsEditing(false);\n    onEditing(false);\n    changeStyleId({ componentId, newStyleId: `Default${componentName}` });\n    removeStyle({ componentName, styleId });\n  };\n\n  const handleComplete = newStyleId => {\n    setIsSaving(false);\n    changeStyleId({ componentId, newStyleId });\n    renameStyle({ componentName, oldId: styleId, newId: newStyleId });\n  };\n\n  // find correct component\n  const SettingsComponent = Settings[`${componentName}Settings`];\n\n  return (\n    <>\n      <ListItem\n        ref={provided.innerRef}\n        className={classes.listItem}\n        ContainerProps={{\n          ...provided.draggableProps,\n          className: classes.listItemContainer,\n          style: getStyle(provided.draggableProps.style, snapshot.isDragging),\n        }}\n      >\n        <ListItemText\n          primary={\n            <>\n              <IconButton\n                className={classes.iconSmallHover}\n                edge=\"start\"\n                aria-label=\"move-component\"\n                {...provided.dragHandleProps}\n              >\n                <DragHandleIcon />\n              </IconButton>\n              <Typography className={classes.componentName}>{componentName}</Typography>\n              <TextField\n                disabled={isEditing}\n                select\n                label=\"Select\"\n                value={styleId}\n                onChange={handleStyleIdChanged}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                {styleIds[componentName].map(id => (\n                  <MenuItem key={id} value={id}>\n                    {id}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </>\n          }\n        />\n        <ListItemSecondaryAction>\n          {isEditing ? (\n            <>\n              <IconButton edge=\"end\" aria-label=\"discard\" onClick={handleDiscard}>\n                <CloseIcon />\n              </IconButton>\n              <IconButton edge=\"end\" aria-label=\"save\" onClick={handleSave}>\n                <DoneIcon />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <IconButton edge=\"end\" aria-label=\"edit\" onClick={handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton edge=\"end\" aria-label=\"delete-component\" onClick={handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </>\n          )}\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Collapse className={classes.collapse} in={isEditing} timeout=\"auto\" unmountOnExit>\n        <SettingsComponent componentId={componentId} styleId={styleId} />\n      </Collapse>\n      <StyleIdDialog\n        open={isSaving}\n        initialId={styleId}\n        styleIds={styleIds}\n        onComplete={handleComplete}\n      />\n    </>\n  );\n};\n\nexport default SettingsItem;\n"]},"metadata":{},"sourceType":"module"}