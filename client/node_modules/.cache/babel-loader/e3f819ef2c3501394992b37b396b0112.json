{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Editor/components/Inspector.js\";\nimport React, { useState } from 'react';\nimport { Paper, Typography, makeStyles } from '@material-ui/core';\nimport { useEditor } from '../context/EditorContext';\nimport CollapsableBox from './CollapsableBox';\nimport properties from '../constants/ComponentProperties.json';\nconst useStyles = makeStyles(theme => ({\n  InspectorPaperStyle: {\n    padding: 15,\n    height: '100%',\n    paddingBottom: theme.spacing(4),\n    boxSizing: 'border-box',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    zIndex: 6,\n    // keep it above caption\n    maxWidth: '25vw',\n    borderRadius: 0\n  },\n  DefaultTitleStyle: {\n    paddingLeft: 15,\n    paddingRight: 15,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  content: {}\n}));\nconst MAX_CONCURRENTLY_OPENED = 2;\n\nconst Inspector = ({\n  onClose\n}) => {\n  const {\n    story,\n    workingActivity\n  } = useEditor();\n  const {\n    InspectorPaperStyle,\n    DefaultTitleStyle,\n    content\n  } = useStyles();\n  const [opened, setOpened] = useState([]);\n\n  const toggleBox = boxId => {\n    const isOpen = opened.some(item => item === boxId);\n\n    if (isOpen) {\n      setOpened(opened.filter(item => item !== boxId));\n    } else {\n      setOpened(opened.length >= MAX_CONCURRENTLY_OPENED ? [...opened.slice(1), boxId] : [...opened, boxId]);\n    }\n  }; // const getComponentName = node => {\n  //   const tokens = node.component.split('/');\n  //   return tokens[tokens.length - 1];\n  // };\n  //Function returning a list of CollapsableBox\n\n\n  const populateInspector = (components, level, previousPath) => {\n    /*    \n      uuid: unique identifier to close and open the collapsablebox\n      key: react key\n      name: component name\n      isOpen: object containing the opened boxes\n      handler: function for opening and closing the box\n      indentLevel: Level of indentation for \n      fieldsToSet: component properties and associated EditorFragments \n        as specified in ComponentProperties.json \n      pathToVal: component path in the story\n    */\n    const absPath = previousPath || ['components']; // This must be generated only once at the first recursive call (when previousPath is undefined)\n\n    const global = !previousPath && /*#__PURE__*/React.createElement(CollapsableBox, {\n      key: `${workingActivity}-Global`,\n      name: \"Global\",\n      isOpen: opened.some(item => item === `${workingActivity}-Global`),\n      onClick: () => toggleBox(`${workingActivity}-Global`),\n      fieldsToSet: properties['Global'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n    const missions = !previousPath && /*#__PURE__*/React.createElement(CollapsableBox, {\n      key: `${workingActivity}-Missions`,\n      name: \"Missions\",\n      isOpen: opened.some(item => item === `${workingActivity}-Missions`),\n      onClick: () => toggleBox(`${workingActivity}-Missions`),\n      fieldsToSet: properties['Missions'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    });\n    return [global, missions, components.map((component, index) => {\n      const {\n        name\n      } = component;\n      return [/*#__PURE__*/React.createElement(CollapsableBox, {\n        key: `${workingActivity}-${component.id}`,\n        name: name,\n        isOpen: opened.some(item => item === `${workingActivity}-${component.id}`),\n        onClick: () => toggleBox(`${workingActivity}-${component.id}`),\n        indentLevel: level,\n        fieldsToSet: properties[name],\n        pathToVal: [...absPath, index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), Array.isArray(component.children) ? populateInspector(component.children, level + 1, [...absPath, index, 'children']) : undefined];\n    })];\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: InspectorPaperStyle,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    className: DefaultTitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, story.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, workingActivity && populateInspector(story.nodes.find(node => node.id === workingActivity).components, 0)));\n};\n\nexport default Inspector;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Editor/components/Inspector.js"],"names":["React","useState","Paper","Typography","makeStyles","useEditor","CollapsableBox","properties","useStyles","theme","InspectorPaperStyle","padding","height","paddingBottom","spacing","boxSizing","overflowY","overflowX","zIndex","maxWidth","borderRadius","DefaultTitleStyle","paddingLeft","paddingRight","overflow","textOverflow","whiteSpace","content","MAX_CONCURRENTLY_OPENED","Inspector","onClose","story","workingActivity","opened","setOpened","toggleBox","boxId","isOpen","some","item","filter","length","slice","populateInspector","components","level","previousPath","absPath","global","missions","map","component","index","name","id","Array","isArray","children","undefined","title","nodes","find","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,mBAA9C;AAEA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrCC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,OAAO,EAAE,EADU;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBC,IAAAA,aAAa,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAHI;AAInBC,IAAAA,SAAS,EAAE,YAJQ;AAKnBC,IAAAA,SAAS,EAAE,MALQ;AAMnBC,IAAAA,SAAS,EAAE,QANQ;AAOnBC,IAAAA,MAAM,EAAE,CAPW;AAOR;AACXC,IAAAA,QAAQ,EAAE,MARS;AASnBC,IAAAA,YAAY,EAAE;AATK,GADgB;AAYrCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE,EAFG;AAGjBC,IAAAA,QAAQ,EAAE,QAHO;AAIjBC,IAAAA,YAAY,EAAE,UAJG;AAKjBC,IAAAA,UAAU,EAAE;AALK,GAZkB;AAmBrCC,EAAAA,OAAO,EAAE;AAnB4B,CAAL,CAAN,CAA5B;AAsBA,MAAMC,uBAAuB,GAAG,CAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA6B3B,SAAS,EAA5C;AACA,QAAM;AAAEK,IAAAA,mBAAF;AAAuBW,IAAAA,iBAAvB;AAA0CM,IAAAA;AAA1C,MAAsDnB,SAAS,EAArE;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMkC,SAAS,GAAGC,KAAK,IAAI;AACzB,UAAMC,MAAM,GAAGJ,MAAM,CAACK,IAAP,CAAYC,IAAI,IAAIA,IAAI,KAAKH,KAA7B,CAAf;;AACA,QAAIC,MAAJ,EAAY;AACVH,MAAAA,SAAS,CAACD,MAAM,CAACO,MAAP,CAAcD,IAAI,IAAIA,IAAI,KAAKH,KAA/B,CAAD,CAAT;AACD,KAFD,MAEO;AACLF,MAAAA,SAAS,CACPD,MAAM,CAACQ,MAAP,IAAiBb,uBAAjB,GACI,CAAC,GAAGK,MAAM,CAACS,KAAP,CAAa,CAAb,CAAJ,EAAqBN,KAArB,CADJ,GAEI,CAAC,GAAGH,MAAJ,EAAYG,KAAZ,CAHG,CAAT;AAKD;AACF,GAXD,CALiC,CAkBjC;AACA;AACA;AACA;AAEA;;;AACA,QAAMO,iBAAiB,GAAG,CAACC,UAAD,EAAaC,KAAb,EAAoBC,YAApB,KAAqC;AAC7D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAMC,OAAO,GAAGD,YAAY,IAAI,CAAC,YAAD,CAAhC,CAb6D,CAc7D;;AAEA,UAAME,MAAM,GAAG,CAACF,YAAD,iBACb,oBAAC,cAAD;AACE,MAAA,GAAG,EAAG,GAAEd,eAAgB,SAD1B;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAEC,MAAM,CAACK,IAAP,CAAYC,IAAI,IAAIA,IAAI,KAAM,GAAEP,eAAgB,SAAhD,CAHV;AAIE,MAAA,OAAO,EAAE,MAAMG,SAAS,CAAE,GAAEH,eAAgB,SAApB,CAJ1B;AAKE,MAAA,WAAW,EAAEzB,UAAU,CAAC,QAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUA,UAAM0C,QAAQ,GAAG,CAACH,YAAD,iBACf,oBAAC,cAAD;AACE,MAAA,GAAG,EAAG,GAAEd,eAAgB,WAD1B;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAEC,MAAM,CAACK,IAAP,CAAYC,IAAI,IAAIA,IAAI,KAAM,GAAEP,eAAgB,WAAhD,CAHV;AAIE,MAAA,OAAO,EAAE,MAAMG,SAAS,CAAE,GAAEH,eAAgB,WAApB,CAJ1B;AAKE,MAAA,WAAW,EAAEzB,UAAU,CAAC,UAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUA,WAAO,CACLyC,MADK,EAELC,QAFK,EAGLL,UAAU,CAACM,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACnC,YAAM;AAAEC,QAAAA;AAAF,UAAWF,SAAjB;AACA,aAAO,cACL,oBAAC,cAAD;AACE,QAAA,GAAG,EAAG,GAAEnB,eAAgB,IAAGmB,SAAS,CAACG,EAAG,EAD1C;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,MAAM,EAAEpB,MAAM,CAACK,IAAP,CAAYC,IAAI,IAAIA,IAAI,KAAM,GAAEP,eAAgB,IAAGmB,SAAS,CAACG,EAAG,EAAhE,CAHV;AAIE,QAAA,OAAO,EAAE,MAAMnB,SAAS,CAAE,GAAEH,eAAgB,IAAGmB,SAAS,CAACG,EAAG,EAApC,CAJ1B;AAKE,QAAA,WAAW,EAAET,KALf;AAME,QAAA,WAAW,EAAEtC,UAAU,CAAC8C,IAAD,CANzB;AAOE,QAAA,SAAS,EAAE,CAAC,GAAGN,OAAJ,EAAaK,KAAb,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAULG,KAAK,CAACC,OAAN,CAAcL,SAAS,CAACM,QAAxB,IACId,iBAAiB,CAACQ,SAAS,CAACM,QAAX,EAAqBZ,KAAK,GAAG,CAA7B,EAAgC,CAC/C,GAAGE,OAD4C,EAE/CK,KAF+C,EAG/C,UAH+C,CAAhC,CADrB,GAMIM,SAhBC,CAAP;AAkBD,KApBD,CAHK,CAAP;AAyBD,GA7DD;;AA+DA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEhD,mBAAlB;AAAuC,IAAA,SAAS,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAEW,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,KAAK,CAAC4B,KADT,CADF,eAIE;AAAK,IAAA,SAAS,EAAEhC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,eAAe,IACdW,iBAAiB,CACfZ,KAAK,CAAC6B,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYtB,eAArC,EAAsDY,UADvC,EAEf,CAFe,CAFrB,CAJF,CADF;AAcD,CArGD;;AAuGA,eAAef,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Paper, Typography, makeStyles } from '@material-ui/core';\n\nimport { useEditor } from '../context/EditorContext';\nimport CollapsableBox from './CollapsableBox';\nimport properties from '../constants/ComponentProperties.json';\n\nconst useStyles = makeStyles(theme => ({\n  InspectorPaperStyle: {\n    padding: 15,\n    height: '100%',\n    paddingBottom: theme.spacing(4),\n    boxSizing: 'border-box',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    zIndex: 6, // keep it above caption\n    maxWidth: '25vw',\n    borderRadius: 0,\n  },\n  DefaultTitleStyle: {\n    paddingLeft: 15,\n    paddingRight: 15,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  content: {},\n}));\n\nconst MAX_CONCURRENTLY_OPENED = 2;\n\nconst Inspector = ({ onClose }) => {\n  const { story, workingActivity } = useEditor();\n  const { InspectorPaperStyle, DefaultTitleStyle, content } = useStyles();\n  const [opened, setOpened] = useState([]);\n\n  const toggleBox = boxId => {\n    const isOpen = opened.some(item => item === boxId);\n    if (isOpen) {\n      setOpened(opened.filter(item => item !== boxId));\n    } else {\n      setOpened(\n        opened.length >= MAX_CONCURRENTLY_OPENED\n          ? [...opened.slice(1), boxId]\n          : [...opened, boxId]\n      );\n    }\n  };\n\n  // const getComponentName = node => {\n  //   const tokens = node.component.split('/');\n  //   return tokens[tokens.length - 1];\n  // };\n\n  //Function returning a list of CollapsableBox\n  const populateInspector = (components, level, previousPath) => {\n    /*    \n      uuid: unique identifier to close and open the collapsablebox\n      key: react key\n      name: component name\n      isOpen: object containing the opened boxes\n      handler: function for opening and closing the box\n      indentLevel: Level of indentation for \n      fieldsToSet: component properties and associated EditorFragments \n        as specified in ComponentProperties.json \n      pathToVal: component path in the story\n    */\n\n    const absPath = previousPath || ['components'];\n    // This must be generated only once at the first recursive call (when previousPath is undefined)\n\n    const global = !previousPath && (\n      <CollapsableBox\n        key={`${workingActivity}-Global`}\n        name=\"Global\"\n        isOpen={opened.some(item => item === `${workingActivity}-Global`)}\n        onClick={() => toggleBox(`${workingActivity}-Global`)}\n        fieldsToSet={properties['Global']}\n      />\n    );\n\n    const missions = !previousPath && (\n      <CollapsableBox\n        key={`${workingActivity}-Missions`}\n        name=\"Missions\"\n        isOpen={opened.some(item => item === `${workingActivity}-Missions`)}\n        onClick={() => toggleBox(`${workingActivity}-Missions`)}\n        fieldsToSet={properties['Missions']}\n      />\n    );\n\n    return [\n      global,\n      missions,\n      components.map((component, index) => {\n        const { name } = component;\n        return [\n          <CollapsableBox\n            key={`${workingActivity}-${component.id}`}\n            name={name}\n            isOpen={opened.some(item => item === `${workingActivity}-${component.id}`)}\n            onClick={() => toggleBox(`${workingActivity}-${component.id}`)}\n            indentLevel={level}\n            fieldsToSet={properties[name]}\n            pathToVal={[...absPath, index]}\n          />,\n          Array.isArray(component.children)\n            ? populateInspector(component.children, level + 1, [\n                ...absPath,\n                index,\n                'children',\n              ])\n            : undefined,\n        ];\n      }),\n    ];\n  };\n\n  return (\n    <Paper className={InspectorPaperStyle} elevation={3}>\n      <Typography variant=\"h4\" component=\"h4\" className={DefaultTitleStyle}>\n        {story.title}\n      </Typography>\n      <div className={content}>\n        {workingActivity &&\n          populateInspector(\n            story.nodes.find(node => node.id === workingActivity).components,\n            0\n          )}\n      </div>\n    </Paper>\n  );\n};\n\nexport default Inspector;\n"]},"metadata":{},"sourceType":"module"}