{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/common/Elements/Camera.js\";\n\n/* eslint jsx-a11y/img-redundant-alt: \"off\" */\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useState, useRef } from 'react';\nimport { PhotoCamera } from '@material-ui/icons';\nimport Button from './Button';\nconst container = css`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst cameraButtonText = css`\n  display: flex;\n  align-items: center;\n\n  & > svg:first-of-type {\n    margin-right: 10px;\n  }\n\n  & > span:first-of-type {\n    font-size: 20px;\n    line-height: 1;\n  }\n`;\n\nconst Camera = ({\n  style,\n  initialValue,\n  onSendPhoto\n}) => {\n  const [photoUrl, setPhotoUrl] = useState(initialValue);\n  const inputRef = useRef();\n\n  const handleClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n\n  const handleTakePhoto = evt => {\n    const file = evt.target.files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      // convert image file to base64 string\n      setPhotoUrl(reader.result);\n    }, false);\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return jsx(\"div\", {\n    css: container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, jsx(\"input\", {\n    ref: inputRef,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \"image/*\",\n    capture: true,\n    onChange: handleTakePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), photoUrl && jsx(\"img\", {\n    src: photoUrl,\n    alt: \"The photo you take with your camera\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), jsx(Button, {\n    onClick: handleClick,\n    text: jsx(\"span\", {\n      css: [cameraButtonText, style['CameraButton']],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, jsx(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, photoUrl ? 'Retake' : 'Take photo')),\n    style: style && style.CameraButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), jsx(Button, {\n    disabled: !photoUrl,\n    onClick: () => onSendPhoto(photoUrl),\n    style: style && style.Button,\n    text: \"Conferma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Camera;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/common/Elements/Camera.js"],"names":["css","jsx","useState","useRef","PhotoCamera","Button","container","cameraButtonText","Camera","style","initialValue","onSendPhoto","photoUrl","setPhotoUrl","inputRef","handleClick","current","click","handleTakePhoto","evt","file","target","files","reader","FileReader","addEventListener","result","readAsDataURL","display","CameraButton"],"mappings":";;AAAA;;AAEA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMO,gBAAgB,GAAGP,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAMQ,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AACvD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACQ,YAAD,CAAxC;AACA,QAAMI,QAAQ,GAAGX,MAAM,EAAvB;;AAEA,QAAMY,WAAW,GAAG,MAAM;AACxB,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpBF,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACD;AACF,GAJD;;AAMA,QAAMC,eAAe,GAAGC,GAAG,IAAI;AAC7B,UAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAb;AACA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAD,IAAAA,MAAM,CAACE,gBAAP,CACE,MADF,EAEE,MAAM;AACJ;AACAZ,MAAAA,WAAW,CAACU,MAAM,CAACG,MAAR,CAAX;AACD,KALH,EAME,KANF;;AASA,QAAIN,IAAJ,EAAU;AACRG,MAAAA,MAAM,CAACI,aAAP,CAAqBP,IAArB;AACD;AACF,GAhBD;;AAkBA,SACE;AAAK,IAAA,GAAG,EAAEd,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEQ,QADP;AAEE,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAFT;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAC,SAJT;AAKE,IAAA,OAAO,MALT;AAME,IAAA,QAAQ,EAAEV,eANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGN,QAAQ,IACP;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,GAAG,EAAC,qCAAxB;AAA8D,IAAA,KAAK,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAYE,IAAC,MAAD;AACE,IAAA,OAAO,EAAEG,WADX;AAEE,IAAA,IAAI,EACF;AAAM,MAAA,GAAG,EAAE,CAACR,gBAAD,EAAmBE,KAAK,CAAC,cAAD,CAAxB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,QAAQ,GAAG,QAAH,GAAc,YAA7B,CAFF,CAHJ;AAQE,IAAA,KAAK,EAAEH,KAAK,IAAIA,KAAK,CAACoB,YARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAsBE,IAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAACjB,QADb;AAEE,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,QAAD,CAF5B;AAGE,IAAA,KAAK,EAAEH,KAAK,IAAIA,KAAK,CAACJ,MAHxB;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF;AA+BD,CA3DD;;AA6DA,eAAeG,MAAf","sourcesContent":["/* eslint jsx-a11y/img-redundant-alt: \"off\" */\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { useState, useRef } from 'react';\nimport { PhotoCamera } from '@material-ui/icons';\nimport Button from './Button';\n\nconst container = css`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst cameraButtonText = css`\n  display: flex;\n  align-items: center;\n\n  & > svg:first-of-type {\n    margin-right: 10px;\n  }\n\n  & > span:first-of-type {\n    font-size: 20px;\n    line-height: 1;\n  }\n`;\n\nconst Camera = ({ style, initialValue, onSendPhoto }) => {\n  const [photoUrl, setPhotoUrl] = useState(initialValue);\n  const inputRef = useRef();\n\n  const handleClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  };\n\n  const handleTakePhoto = evt => {\n    const file = evt.target.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener(\n      'load',\n      () => {\n        // convert image file to base64 string\n        setPhotoUrl(reader.result);\n      },\n      false\n    );\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div css={container}>\n      <input\n        ref={inputRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\"image/*\"\n        capture\n        onChange={handleTakePhoto}\n      />\n      {photoUrl && (\n        <img src={photoUrl} alt=\"The photo you take with your camera\" width=\"100%\" />\n      )}\n      <Button\n        onClick={handleClick}\n        text={\n          <span css={[cameraButtonText, style['CameraButton']]}>\n            <PhotoCamera />\n            <span>{photoUrl ? 'Retake' : 'Take photo'}</span>\n          </span>\n        }\n        style={style && style.CameraButton}\n      />\n      <Button\n        disabled={!photoUrl}\n        onClick={() => onSendPhoto(photoUrl)}\n        style={style && style.Button}\n        text=\"Conferma\"\n      />\n    </div>\n  );\n};\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}