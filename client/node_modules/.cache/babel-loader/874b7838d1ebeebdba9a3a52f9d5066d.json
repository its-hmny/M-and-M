{"ast":null,"code":"var _jsxFileName = \"/home/hmny/Projects/M-and-M/client/src/Creator/Settings/BackgroundSettings.js\";\nimport React, { useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Camera as CameraIcon } from '@material-ui/icons';\nimport OpacitySlider from './atoms/OpacitySlider';\nimport useStylesStore from '../stores/styles';\nimport axios from '../../common/shared';\nimport { SERVER_URL } from '../../common/constants';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst BackgroundSettings = ({\n  styleId\n}) => {\n  const classes = useStyles();\n  const inputRef = useRef();\n  const [outcome, setOutcome] = useState('');\n  const {\n    styles,\n    updateStyle\n  } = useStylesStore(state => ({\n    styles: state.styles,\n    updateStyle: state.updateStyle\n  }));\n\n  const onChange = subStyle => updateStyle({\n    styleId,\n    ...subStyle\n  });\n\n  const upload = async file => {\n    const formData = new FormData();\n    formData.append('file', file); // Ignore any error\n\n    axios.delete(`resources/${styles[styleId].backgroundImage}`).catch(() => {});\n\n    try {\n      const res = await axios.put('resources/', formData, {\n        headers: {\n          'Content-Type': file.type\n        }\n      });\n      updateStyle({\n        styleId,\n        backgroundImage: `url(${SERVER_URL}/resources/${res.data.uuid})`\n      });\n      setOutcome('File uploaded successfully!');\n    } catch (err) {\n      console.log(err.data);\n      setOutcome('Error occured while loading!');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(CameraIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    }),\n    onClick: () => {\n      inputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Upload image\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: 'none'\n    },\n    ref: inputRef,\n    type: \"file\",\n    onChange: evt => {\n      upload(evt.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, outcome), /*#__PURE__*/React.createElement(OpacitySlider, {\n    onChange: onChange,\n    value: styles[styleId],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default BackgroundSettings;","map":{"version":3,"sources":["/home/hmny/Projects/M-and-M/client/src/Creator/Settings/BackgroundSettings.js"],"names":["React","useState","useRef","makeStyles","Button","Typography","Camera","CameraIcon","OpacitySlider","useStylesStore","axios","SERVER_URL","useStyles","theme","button","margin","spacing","BackgroundSettings","styleId","classes","inputRef","outcome","setOutcome","styles","updateStyle","state","onChange","subStyle","upload","file","formData","FormData","append","delete","backgroundImage","catch","res","put","headers","type","data","uuid","err","console","log","current","click","display","evt","target","files"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Camera as CameraIcon } from '@material-ui/icons';\nimport OpacitySlider from './atoms/OpacitySlider';\nimport useStylesStore from '../stores/styles';\nimport axios from '../../common/shared';\nimport { SERVER_URL } from '../../common/constants';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst BackgroundSettings = ({ styleId }) => {\n  const classes = useStyles();\n  const inputRef = useRef();\n  const [outcome, setOutcome] = useState('');\n  const { styles, updateStyle } = useStylesStore(state => ({\n    styles: state.styles,\n    updateStyle: state.updateStyle,\n  }));\n  const onChange = subStyle => updateStyle({ styleId, ...subStyle });\n  const upload = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Ignore any error\n    axios.delete(`resources/${styles[styleId].backgroundImage}`).catch(() => {});\n\n    try {\n      const res = await axios.put('resources/', formData, {\n        headers: { 'Content-Type': file.type },\n      });\n      updateStyle({\n        styleId,\n        backgroundImage: `url(${SERVER_URL}/resources/${res.data.uuid})`,\n      });\n      setOutcome('File uploaded successfully!');\n    } catch (err) {\n      console.log(err.data);\n      setOutcome('Error occured while loading!');\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<CameraIcon />}\n        onClick={() => {\n          inputRef.current.click();\n        }}\n      >\n        Upload image\n      </Button>\n      <input\n        style={{ display: 'none' }}\n        ref={inputRef}\n        type=\"file\"\n        onChange={evt => {\n          upload(evt.target.files[0]);\n        }}\n      />\n      <Typography>{outcome}</Typography>\n      <OpacitySlider onChange={onChange} value={styles[styleId]} />\n    </div>\n  );\n};\n\nexport default BackgroundSettings;\n"]},"metadata":{},"sourceType":"module"}